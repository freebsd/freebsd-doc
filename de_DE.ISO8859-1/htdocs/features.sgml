<!DOCTYPE HTML PUBLIC "-//FreeBSD//DTD HTML 4.01 Transitional-Based Extension//EN" [
<!ENTITY date "$FreeBSD$">
<!ENTITY dedate "$FreeBSDde: de-www/features.sgml,v 1.22 2008/03/24 14:30:04 jkois Exp $">
<!ENTITY reference "basiert auf: 1.34">
<!ENTITY title "Die technischen Fortschritte von FreeBSD">
<!ENTITY % navinclude.about "INCLUDE">
]>

<html>
    &header;

    <h2>FreeBSD bietet viele hochentwickelte Funktionalit&auml;ten.</h2>

      <p>Unabh&auml;ngig von der Anwendung m&ouml;chten Sie Ihr System
	optimal ausnutzen.  Da FreeBSD den Fokus auf optimale Leistung,
	Netzwerk- und Speicherfunktionalit&auml;ten zusammen mit einer
	einfachen Systemverwaltung und einer exzellenten Dokumentation
	legt, sind Sie genau dazu in der Lage.</p>

    <h2>Ein komplettes Betriebssystem, basierend auf 4.4BSD.</h2>

      <p>FreeBSD hat seine Urspr&uuml;nge in der <b>BSD</b>-Software,
	welche von der Computer Systems Research Group an der
	Universit&auml;t von Californien, Berkeley, ver&ouml;ffentlicht
	wurde.  Seit damals sind mehr als 10 Jahre vergangen.  In dieser
	Zeit wurde BSD massiv verbessert.  Unter anderem wurde ein
	heraussagendes SMP und Multithreading implementiert.
	Zus&auml;tzlich wurden neue Managementtools, Dateisysteme und
	Sicherheitsfunktionalit&auml;ten in FreeBSD integriert.  Als
	Folge dieser Arbeiten wird FreeBSD heute in allen Bereichen des
	Internets, beispielsweise als Betriebssystem von Core-Routern und
	Root-Nameservern, als Webserver f&uuml;r umfangreiche Webseiten
	sowie als Basis f&uuml;r weitverbreitete Desktop-Betriebssysteme
	eingesetzt.  Diese weite Verbreitung wurde nur durch die weltweit
	verteilten und engagierten Mitarbeiter des FreeBSD Projects
	m&ouml;glich.</p>

    <h2>FreeBSD bietet fortgeschrittene
	Betriebssystem-Funktionalit&auml;ten, die es f&uuml;r den
	Einsatz auf unterschiedlichsten Systemen, von eingebetteten
	Systemen bis hin zu High-End-Multiprozessorsystemen
	pr&auml;destinieren.</h2>

      <p><b>FreeBSD 7.0</b> (das im Februar 2008 erschienen ist) bringt sowohl
	zahlreiche neue Funktionalit&auml;ten als auch eine verbesserte
	Systemleistung.  Der Schwerpunkt dieser neuen Version liegt auf
	der Verbesserung der Speicher- und Multiprozessorleistung.
	Beispielsweise unterst&uuml;tzt FreeBSD 7.0 erstmals das
	<b>Dateisystem ZFS</b> von Sun und bietet eine <b>hoch
	skalierbare Multiprozessorleistung</b>.  Benchmarks haben
	gezeigt, das FreeBSD auf Servern mit 8 Prozessorkernen
	beim Umgang mit MySQL- und PostgreSQL-Datenbanken doppelt so
	schnell arbeitet wie aktuelle Linux-Systeme.</p>

      <ul>
	<li><b>SMPng</b>: Nach sieben Jahren Entwicklung, in denen an
	  der Implementierung einer leistungsf&auml;higen
	  SMP-Unterst&uuml;tzung gearbeitet wurde, wurde mit FreeBSD 7.0
	  das Ziel eines feingranulierten Kernels erreicht, der eine
	  lineare Skalierbarkeit f&uuml;r bis zu acht Prozessorkernen
	  erlaubt, um auch hohen Anforderungen zu gen&uuml;gen.  Der als
	  Giant Lock bekannte Sperrmechanismus wurde nahezu
	  vollst&auml;ndig (unter anderem aus dem CAM Storage Layer
	  sowie dem NFS-Client) aus FreeBSD 7.0 eleminiert und durch
	  einen feingranulierten Sperrmechanismus f&uuml;r das
	  Netzwerk-Subsystem ersetzt.  Bedeutende Fortschritte wurden
	  auch in den Bereichen Kernelscheduling und Locking Primitives
	  gemacht.  Der nun optional verf&uuml;gbare ULE-Scheduler
	  erm&ouml;glicht Thread-CPU-Affinit&auml;t sowie
	  prozessorspezifische Warteschlangen, um den Overhead zu
	  verringern und die Cache-Leistung zu verbessern.  Das
	  libthr Threading-Paket (das 1:1-Threading erlaubt) ist nun
	  standardm&auml;&szlig;ig aktiviert.  Benchmarks
	  haben gezeigt, dass dadurch auf der gleichen
	  Multiprozessorhardware im Vergleich zu anderen
	  &unix;-Betriebssystemen eine deutlich bessere Systemleistung
	  erzielt werden kann, ein Umstand, der erst durch die intensiven
	  Arbeiten an der Implementierung der SMP-Technologie in den
	  FreeBSD-Kernel m&ouml;glich wurde.</li>

	<li><b>Dateisystem ZFS</b>:  Bei Sun's ZFS handelt es sich um
	  ein State-of-the-Art-Dateisystem, das ein einfache
	  Administration, Transaktionssemantiken,
	  Ende-zu-Ende-Datenintegrit&auml;t und eine ausgezeichnete
	  Skalierbarkeit bietet.  Mit Funktionen wie Selbstheilung,
	  eingebauter Kompression, RAID, Snapshots und Volume Management
	  erlaubt es ZFS Systemadministratoren, komplexe
	  Speicherverb&uuml;nde einfach zu verwalten.</li>

	<li><b>10-Gigabit-Netzwerkoptimierung</b>: Durch optimierte
	  Ger&auml;tetreiber aller wichtigen 10-Gigabit-Netzwerkanbieter
	  konnte die Leistungsf&auml;higkeit des Netzwerk-Stacks von
	  FreeBSD 7.0 drastisch verbessert werden.  Zu den neuen oder
	  verbesserten Funktionen geh&ouml;ren:  Automatisch skalierende
	  Socket-Buffer, TCP Segment Offload (TSO), Large Receive
	  Offload (LRO), Direct Network Stack Dispatch, sowie einen
	  TCP/IP-Lastenausgleich &uuml;ber mehrere Prozessoren beim Einsatz
	  von 10-Gigabit-Netzwerkkarten oder beim simultanen Einsatz von
	  mehreren Netzwerkkarten.  Folgende Hersteller bieten einen
	  umfassenden FreeBSD-Support:  Chelsio, Intel, Myricom, sowie
	  Neterion.</li>

	<li><b>SCTP</b>: FreeBSD 7.0 stellt die Referenzimplementierung
	  des neuen IETF Stream Control Transmission Protocols (SCTP)
	  dar, das entwickelt wurde, um VoIP, Telekommunikation und
	  andere Anwendungen, die eine hohe Zuverl&auml;ssigkeit bei
	  variabler Sendequalit&auml;t erfordern, zu unterst&uuml;tzen.
	  Dazu wurde Funktionalit&auml;ten wie Multi-path Delivery,
	  Fail-over und Multi-Streaming implementiert.</li>

	<li><b>Drahtlose Verbindungen</b>: FreeBSD 7.0 verf&uuml;gt
	  &uuml;ber eine signifikant verbesserte Unterst&uuml;tzung
	  f&uuml;r drahtlose Ger&auml;te, beispielsweise der
	  leistungsf&auml;higen Atheros-basierten Karten.
	  Zus&auml;tzlich wurden neue Treiber f&uuml;r Ralink-, Intel-
	  und ZyDAS-Karten entwickelt.  Die Unterst&uuml;tzung f&uuml;r
	  WPA, Background Scanning und Roaming sowie 802.11n wurde
	  ebenfalls verbessert oder neu implementiert.</li>

	<li><b>Neue Hardware-Architekturen</b>: FreeBSD 7.0 enth&auml;lt
	  eine signifikant verbesserte Unterst&uuml;tzung f&uuml;r die
	  eingebettete ARM-Architektur.  Au&szlig;erdem wird erstmalig
	  die Sun Ultrasparc T1-Plattform unterst&uuml;tzt.</li>
      </ul>

      <p>F&uuml;r FreeBSD wurden im Laufe der Zeit zahlreiche
	fortgeschrittene Betriebssytem-Funktionalit&auml;ten
	entwickelt.  Einige dieser Funktionalit&auml;ten werden im
	Folgenden beschrieben:</p>

      <ul>
	<li><b>Ein Puffer-Cache, der gemeinsam vom Dateisystem und
	  virtuellen Speicher genutzt wird,</b> regelt kontinuierlich
	  den Speicherplatz von Programmen und dem Festplatten-Cache.
	  Daher profitieren Anwendungen gleichzeitig von der
	  ausgezeichneten Speicherverwaltung und den schnellen
	  Festplattenzugriffen. F&uuml;r den Systemadministrator
	  entf&auml;llt das Optimieren der Cache-Gr&ouml;ssen.</li>

	<li><b>Kompatibilit&auml;ts-Module</b> erlauben die
	  Ausf&uuml;hrung von Anwendungen unter FreeBSD, welche
	  eigentlich f&uuml;r andere Betriebsysteme, wie z.B.
	  Linux, SCO UNIX und System&nbsp;V Release&nbsp;4,
	  geschrieben wurden.</li>

	<li><b>Soft Updates</b> steigern die Leistung von Dateisystemen,
	  ohne dabei die Sicherheit und Zuverl&auml;ssigkeit zu
	  beeintr&auml;chtigen. Dazu werden Operationen auf
	  Dateisystem-Metadaten analysiert, damit diese nicht mehr
	  synchron abgearbeitet werden m&uuml;ssen. Stattdessen werden
	  noch ausstehende Operationen in einem Puffer
	  zwischengespeichert. Diese werden dann durch Zusammenfassen
	  mehrerer Operationen auf dieselbe Datei, sowie einer
	  effektiveren Gestaltung der Abarbeitungsreihenfolge,
	  optimiert. Funktionen wie die &Uuml;berpr&uuml;fung des
	  Dateisystems im Hintergrund, und Schnappsch&uuml;sse
	  (Snapshots) eines Dateisystems, basieren auf der
	  Beschaffenheit und Geschwindigkeit von Soft Updates.</li>

	<li><b>Dateisystem Snapshots</b> erm&ouml;glichen dem
	  Administrator atomare Schnappsch&uuml;sse eines Dateisystems
	  als Backup zu erstellen, indem der freie Speicherplatz
	  verwendet wird. <b>Im Hintergrund ausgef&uuml;hrte
	  &Uuml;berpr&uuml;fungen des Dateisystems</b> erm&ouml;glichen
	  es einem System, im Mehrbenutzerbetrieb zu laufen, ohne auf
	  die Beendigung eventueller Korrekturen am Dateisystem warten
	  zu m&uuml;ssen.</li>

	<li><b>Unterst&uuml;tzung f&uuml;r IPsec und IPv6</b> bieten
	  eine h&ouml;here Netzwerksicherheit und das
	  Internet-Protokoll der n&auml;chsten Generation. Die
	  Implementierung von IPsec in FreeBSD beinhaltet auch die
	  Unterst&uuml;tzung einer breiten Menge an Hardware, die
	  <b>kryptographische Verschl&uuml;sselungen
	  beschleunigt</b>.</li>

	<li><b>Hervorragende Unterst&uuml;tzung von IPv6</b> mittels
	  des KAME IPv6 Stacks erm&ouml;glicht eine nahtlose Integration
	  von FreeBSD in Netzwerkumgebungen der n&auml;chsten
	  Generation. Unter FreeBSD sind bereits Anwendungen
	  verf&uuml;gbar, welche um eine Unterst&uuml;tzung von IPv6
	  erweitert wurden!</li>

	<li><b>Multi-threaded SMP Architektur</b>, die eine parallele
	  Ausf&uuml;hrung des Kernels auf mehreren Prozessoren
	  erlaubt, sowie <b>Pr&auml;emption des Kernels</b>, welche es
	  einem Prozess mit hoher Priorit&auml;t erlaubt, andere
	  Aktivit&auml;ten des Kernels zu unterbrechen, und so
	  effektiv die Latenzzeit zu reduzieren. Dies beinhaltet auch
	  einen <b>Multi-Threaded Netzwerkstack</b>, sowie ein
	  <b>virtuelles, multi-threaded Speichersubsystem</b>. Seit
	  FreeBSD 6.X steht die Unterst&uuml;tzung eines
	  vollst&auml;ndig parallelen VFS zur Verf&uuml;gung, welches
	  es dem UFS-Dateisystem erlaubt, gleichzeitig mehrere
	  Prozessoren zu bedienen, und die Lastverteilung
	  rechenintensiver I/O-Operationen zu optimieren.</li>

	<li><b>M:N Threading via pthreads</b> erlaubt eine skalierbare
	  Ausf&uuml;hrung von Threads auf mehreren CPUs, indem viele
	  Benutzer-Threads auf eine kleine Anzahl von
	  <b>Kernelentit&auml;ten</b> verteilt werden. Durch die
	  &Uuml;bernahme des <b>Scheduler Activation</b>-Models kann
	  das Threading an spezielle Anforderungen einer breiten
	  Masse an Anwendungen angepasst werden.
	</li>

	<li><b>Netgraphs erweiterbarer Netzwerkstack</b> erlaubt
	  Entwicklern, diesen dynamisch und einfach &uuml;ber saubere
	  Abstraktionsschichten zu erweitern. Netgraph-Knoten
	  k&ouml;nnen eine breite Masse an Netzwerkdiensten, unter
	  anderem Kapselung, Tunnelung, Verschl&uuml;sselung sowie
	  Performanceanpassung, ausf&uuml;hren. Dadurch ist eine
	  schnelle Entwicklung von Prototypen, und ein schnellerer
	  produktiver Einsatz von erweiterten Netzwerkdiensten
	  einfacher und fehlerfreier m&ouml;glich.
	</li>

	<li><b>Erweiterbare Kernel-Sicherheit des TrustedBSD MAC
	  Frameworks</b> erm&ouml;lglicht Entwicklern eine Anpassung des
	  Betriebsystems an spezielle Umgebungen, vom Einrichten
	  restriktiver Richtlinien bis hin zu vorgeschriebenen
	  Verhaltensregeln zur Vertraulichkeit. Die
	  Sicherheitsrichtlinien beinhalten <b>Multi-Level Security
	  (MLS)</b>, sowie <b>Biba Integrety Protection</b>.
	  Zus&auml;tzliche Module beinhalten <b>SEBSD</b>, eine
	  FLASK-basierte Implementierung von <b>Type
	  Enforcement</b>.</li>

	<li>Bei <b>TrustedBSD Audit</b> handelt es sich um einen
	  Dienst, der ein feingranuliertes, sicheres Aufzeichnen
	  von die Systemsicherheit betreffenden Ereignissen &uuml;ber
	  den Audit-Dienst erm&ouml;glicht.  Administratoren
	  k&ouml;nnen dabei gezielt festlegen, welche Ereignisse
	  aufgezeichnet werden sollen.  Zu diesen Ereignissen
	  geh&ouml;ren beispielsweise das Benutzerverhalten, der
	  Zugriff auf &uuml;berwachte Dateien, ausgef&uuml;hrte
	  Befehle, Netzwerkaktivit&auml;ten, Anmeldungen am System
	  sowie verschiedene andere Ereignisse.  Audit-Pipes erlauben
	  es IDS-Programmen, den Kernel-Audit-Dienst zu nutzen und
	  Informationen &uuml;ber Ereignisse, die sie aus
	  Sicherheitsgr&uuml;nden &uuml;berwachen m&uuml;ssen, zu
	  beziehen.  FreeBSD unterst&uuml;tzt das
	  BSM Audit-Trail-Dateiformat sowie dessen API (die den
	  Industriestandard darstellen).  Daher k&ouml;nnen
	  vorhandene BSM-Werkzeuge in der Regel ohne oder nur mit
	  geringen Anpassungen unter FreeBSD eingesetzt werden.
	  Das BSM-Dateiformat wird auch unter Solaris sowie Mac OS X
	  eingesetzt, daher sind Interoperabilit&auml;t sowie eine
	  system&uuml;bergreifende Analyse m&ouml;glich.</li>

	<li><b>GEOMs erweiterbare Speicherschicht</b> erlaubt eine
	  schnelle Entwicklung und nahtlose Integration neuer
	  Speicherdienste in das FreeBSD Speicher-Subsystem. GEOM
	  bietet ein einheitliches und zusammenh&auml;ngendes Model,
	  um Speicherdienste zu erkennen und bereitzustellen, so
	  dass Dienste wie RAID und Volume Management
	  einfach abstrahiert werden k&ouml;nnen.</li>

	<li>FreeBSDs <b>GEOM-basierte Festplattenverschl&uuml;sselung
	  (GBDE)</b> bietet unter Verwendung des GEOM Frameworks
	  starken kryptographischen Schutz, und kann Dateisysteme,
	  Auslagerungsger&auml;te und andere Datenspeichermedien
	  verwenden.</li>

	<li><b>Kernel-Queues</b> erm&ouml;glichen es Anwendungen,
	  effizienter auf asynchrone Ereignisse, wie I/O-Operationen
	  auf Dateien und Sockets, zu reagieren, und dadurch die
	  Leistungsf&auml;higkeit der Anwendungen und des Systems
	  zu verbessern.</li>

	<li><b>Accept-Filter</b> erlauben verbindungsintensiven
	  Anwendungen, wie z.B. Webservern, Teile ihrer Funktionen
	  sauber in den Betriebsystemkern auszulagern, und so deren
	  Leistungsf&auml;higkeit zu steigern.</li>
      </ul>

    <h2>FreeBSD bietet viele Sicherheitsmerkmale, um Netzwerke und
      Server abzusichern.</h2>

      <p>Den FreeBSD-Entwicklern bedeutet Sicherheit genauso viel,
	wie Geschwindigkeit und Stabilit&auml;t. FreeBSDs Kernel
	bietet Unterst&uuml;tzung f&uuml;r <b>Stateful IP-Firewalling</b>,
	sowie <b>IP Proxy Gateways</b>, <b>Access Control Lists</b>,
	<b>Mandatory Access Control</b>, <b>Jail-basiertes virtuelles
	Hosting</b> und <b>kryptographisch gesicherte Datenspeicher</b>.
	Diese Funktionalit&auml;ten erlauben hochsicheres Hosting
	f&uuml;r mehrere, sich gegenseitig nicht vertrauende Kunden
	oder Konsumenten, eine strenge Aufteilung von Netzwerken,
	sowie den Aufbau sicherer Pipelines zur Geheimhaltung und
	Kontrolle von Informationsfluss.</p>

      <p>FreeBSD bietet unter anderem Verschl&uuml;sselungswerkzeuge,
	sichere Shells, Kerberos-Authentifizierung,
	"virtuelle Server" durch die Verwendung von Jails, den Betrieb
	von Diensten in chroot-Umgebungen, um den Zugang der Dienste
	zum Dateisystem einzuschr&auml;ken, Secure RPCs sowie
	Zugriffslisten f&uuml;r Dienste, die TCP-Wrapper
	unterst&uuml;tzen.</p>

      &footer;
  </body>
</html>

<!--
     Local Variables:
     mode: sgml
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     End:
-->
