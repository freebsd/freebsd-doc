<?xml version="1.0" encoding="iso-8859-1"?>
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/handbook/linuxemu/chapter.xml,v 1.94 2012/04/30 17:13:51 bcr Exp $
     basiert auf: r49367
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="linuxemu">
  <info>
    <title>&linux;-Binärkompatibilität</title>

    <authorgroup>
      <author>
	<personname>
	  <firstname>Jim</firstname>
	  <surname>Mock</surname>
	</personname>
	<contrib>Restrukturiert und teilweise aktualisiert von </contrib>
      </author>
     <!-- 22 Mar 2000 -->
    </authorgroup>
    <authorgroup>
      <author>
	<personname>
	  <firstname>Brian N.</firstname>
	  <surname>Handy</surname>
	</personname>
	<contrib>Beigetragen von </contrib>
      </author>
      <author>
	<personname>
	  <firstname>Rich</firstname>
	  <surname>Murphey</surname>
	</personname>
      </author>
    </authorgroup>
    <authorgroup>
      <author>
	<personname>
	  <firstname>Johann</firstname>
	  <surname>Kois</surname>
	</personname>
	<contrib>Übersetzt von </contrib>
      </author>
    </authorgroup>
  </info>

  <sect1 xml:id="linuxemu-synopsis">
    <title>Übersicht</title>

    <indexterm>
      <primary>Linux-Binärkompatibilität</primary>
    </indexterm>
    <indexterm>
      <primary>Binärkompatibilität</primary>
      <secondary>Linux</secondary>
    </indexterm>

    <para>&os; bietet Binärkompatibilität zu &linux;, so dass Benutzer
      &linux; Anwendungen auf einem &os;-System installieren und
      ausführen können, ohne die Binärdatei ändern zu müssen.  Es
      wurde sogar berichtet, dass in einigen Situationen &linux;
      Anwendungen auf &os; besser laufen als unter &linux;.</para>

    <para>Allerdings werden einige &linux;-spezifischen Merkmale nicht
      von &os; unterstützt.  &linux;-Anwendungen, die
      &i386;-spezifische Aufrufe, wie bspw. die Aktivierung
      des virtuellen 8086-Modus verwenden, werden derzeit nicht
      unterstützt.</para>

    <para>Die Unterstützung für 64-Bit-Binärkompatibilität für &linux;
      wurde in &os;&nbsp;10.3 hinzugefügt.</para>

    <para>Nach dem Lesen dieses Kapitels werden Sie wissen:</para>

    <itemizedlist>
      <listitem>
	<para>Wie Sie die &linux;-Binärkompatibilität
	  aktivieren.</para>
      </listitem>

      <listitem>
	<para>Wie zusätzliche &linux;-Systembibliotheken installiert
	  werden.</para>
      </listitem>

      <listitem>
	<para>Wie Sie &linux;-Anwendungen unter &os;
	  installieren.</para>
      </listitem>

      <listitem>
	<para>Wie die &linux;-Binärkompatibilität unter &os;
	  implementiert ist.</para>
      </listitem>
    </itemizedlist>

    <para>Bevor Sie dieses Kapitel lesen, sollten Sie wissen:</para>

    <itemizedlist>
      <listitem>
	<para>Wie Sie <link linkend="ports">
	    Software von Drittanbietern installieren</link>.</para>
      </listitem>
    </itemizedlist>

  </sect1>

  <sect1 xml:id="linuxemu-lbc-install">
    <title>Konfiguration der &linux;-Binärkompatibilität</title>

    <indexterm><primary>Ports-Sammlung</primary></indexterm>

    <para>Die &linux;-Binärkompatibilität ist per Voreinstellung
      nicht aktiviert und auch &linux;-Bibliotheken werden nicht
      installiert.  &linux;-Bibliotheken können entweder manuell,
      oder aus der &os; Ports-Sammlung installiert werden.</para>

    <para>Bevor Sie versuchen den Port zu bauen, laden Sie das
      &linux;-Kernelmodul, da ansonsten der Bau fehlschlägt:</para>

    <screen>&prompt.root; <userinput>kldload linux</userinput></screen>

    <para>Für 64-Bit Kompatibilität:</para>

    <screen>&prompt.root; <userinput>kldload linux64</userinput></screen>

    <para>Prüfen Sie, ob das Modul geladen wurde:</para>

    <screen>&prompt.user; <userinput>kldstat</userinput>
Id Refs Address    Size     Name
 1    2 0xc0100000 16bdb8   kernel
 7    1 0xc24db000 d000     linux.ko</screen>

    <para>Der einfachste Weg um einen Basissatz von
      &linux;-Bibliotheken und Binärdateien auf einem &os;-System zu
      installieren, ist über den Port oder das Paket
      <package>emulators/linux_base-c6</package>.  So installieren Sie
      das Paket:</para>

    <screen>&prompt.root; <userinput>printf "compat.linux.osrelease=2.6.18\n" >> /etc/sysctl.conf</userinput>
&prompt.root; <userinput>sysctl compat.linux.osrelease=2.6.18</userinput>
&prompt.root; <userinput>pkg install emulators/linux_base-c6</userinput></screen>

    <para>Wollen Sie die &linux;-Binärkompatibilität beim Systemstart
      aktivieren, fügen Sie folgende Zeile in
      <filename>/etc/rc.conf</filename> hinzu:</para>

    <programlisting>linux_enable="YES"</programlisting>

    <para>Auf 64-Bit Maschinen wird das Modul für die 64-Bit
      Emulation automatisch von <filename>/etc/rc.d/abi</filename>
      geladen.</para>

    <indexterm>
      <primary>Kerneloptionen</primary>
      <secondary>COMPAT_LINUX</secondary>
    </indexterm>

    <para>Benutzer, die es vorziehen, &linux;-Binärkompatibilität
      statisch in den Kernel zu linken, müssen
      <literal>options COMPAT_LINUX</literal> in die
      Kernelkonfigurationsdatei aufnehmen und anschließend einen neuen
      Kernel installieren.  Dies ist in <xref linkend="kernelconfig"/>
      beschrieben.</para>

    <sect2 xml:id="linuxemu-libs-manually">
      <title>Manuelle Installation zusätzlicher Bibliotheken</title>

      <indexterm>
	<primary>Gemeinsam benutzte Bibliotheken</primary>
      </indexterm>

      <para>Wenn sich eine &linux;-Anwendung über fehlende
	Bibliotheken beschwert nachdem die
	&linux;-Binärkompatibilität installiert wurde, finden Sie
	heraus welche Bibliothken die Anwendung benötigt und
	installieren Sie diese manuell.</para>

      <para>Mit <command>ldd</command> können Sie unter &linux;
	bestimmen, welche gemeinsam benutzten Bibliotheken eine
	Anwendung benötigt.  Wenn Sie herausfinden wollen, welche
	Bibliotheken <command>linuxdoom</command> benötigt, können Sie
	folgenden Befehl auf einem &linux;-System ausführen, welches
	<application>Doom</application> installiert hat:</para>

      <screen>&prompt.user; <userinput>ldd linuxdoom</userinput>
libXt.so.3 (DLL Jump 3.1) =&gt; /usr/X11/lib/libXt.so.3.1.0
libX11.so.3 (DLL Jump 3.1) =&gt; /usr/X11/lib/libX11.so.3.1.0
libc.so.4 (DLL Jump 4.5pl26) =&gt; /lib/libc.so.4.6.29</screen>

      <para>Kopieren Sie alle Dateien aus der letzten Spalte der
	Ausgabe von einem &linux;-System auf das &os;-System in das
	Verzeichnis <filename>/compat/linux</filename>.  Nach dem
	Kopieren erstellen Sie symbolische Links auf die Namen in der
	ersten Spalte.  In diesem Beispiel werden folgende Dateien auf
	dem &os;-System installiert:</para>

      <screen>/compat/linux/usr/X11/lib/libXt.so.3.1.0
/compat/linux/usr/X11/lib/libXt.so.3 -&gt; libXt.so.3.1.0
/compat/linux/usr/X11/lib/libX11.so.3.1.0
/compat/linux/usr/X11/lib/libX11.so.3 -&gt; libX11.so.3.1.0
/compat/linux/lib/libc.so.4.6.29
/compat/linux/lib/libc.so.4 -&gt; libc.so.4.6.29</screen>

      <para>Wenn Sie bereits eine &linux;-Bibliothek einer zur
	ersten Spalte passenden Hauptversionsnummer besitzen, muss sie
	nicht mehr kopiert werden, da die bereits vorhandene Version
	funktionieren sollte.  Hat die Bibliothek jedoch eine neuere
	Versionsnummer, sollten Sie sie dennoch kopieren.  Sie können
	die alte Version löschen, solange Sie einen symbolischen Link
	auf die neue Version anlegen.</para>

      <para>Folgende Bibliotheken existieren bereits auf dem
	&os;-System:</para>

      <screen>/compat/linux/lib/libc.so.4.6.27$
/compat/linux/lib/libc.so.4 -&gt; libc.so.4.6.27</screen>

      <para><command>ldd</command> zeigt an, dass eine Anwendung eine
	neuere Version benötigt:</para>

      <screen>libc.so.4 (DLL Jump 4.5pl26) -&gt; libc.so.4.6.29</screen>

      <para>Wenn diese Bibliotheken sich nur um ein oder zwei Stellen
	in der Unterversionsnummer unterscheiden, sollte das Programm
	dennoch mit der älteren Version funktionieren.  Wenn Sie
	wollen, können Sie die bestehende <filename>libc.so</filename>
	durch die neuere Version ersetzen:</para>

      <screen>/compat/linux/lib/libc.so.4.6.29
/compat/linux/lib/libc.so.4 -&gt; libc.so.4.6.29</screen>

      <para>Der Mechanismus der symbolischen Links wird nur für
	&linux;-Binärdateien benötigt.  Nach einer Weile wird es eine
	ausreichende Menge an &linux;-Bibliotheken auf dem System
	geben, sodass Sie neu installierte &linux;-Anwendungen ohne
	zusätzlichen Aufwand auf dem System laufen lassen
	können.</para>
    </sect2>

    <sect2>
      <title>&linux; ELF-Binärdateien installieren</title>

      <indexterm>
	<primary>Linux</primary>
	<secondary>ELF-Binärdatei</secondary>
      </indexterm>

      <para>ELF-Binärdateien benötigen manchmal eine zusätzliche
	<quote>Kennzeichnung</quote>.  Wenn Sie versuchen, eine nicht
	gekennzeichnete ELF-Binärdatei auszuführen, werden Sie eine
	Fehlermeldung ähnlich der folgenden erhalten:</para>

      <screen>&prompt.user; <userinput>./my-linux-elf-binary</userinput>
ELF binary type not known
Abort</screen>

      <para>Damit der &os;-Kernel eine &linux;-ELF-Datei von einer
	&os;-ELF-Datei unterscheiden kann, gibt es das Werkzeug
	&man.brandelf.1;.</para>

      <screen>&prompt.user; <userinput>brandelf -t Linux my-linux-elf-binary</userinput></screen>

      <indexterm><primary>GNU Werkzeuge</primary></indexterm>

      <para>Die GNU Werkzeuge schreiben nun automatisch die passende
	Kennzeichnungsinformation in die ELF-Binärdateien, so dass Sie
	diesen Schritt in Zukunft nur noch selten benötigen.</para>
    </sect2>

    <sect2>
      <title>Installieren einer <acronym>RPM</acronym>-basierten
	&linux;-Anwendung</title>

      <para>Wenn Sie eine &linux; <acronym>RPM</acronym>-basierte
	Anwendung installieren möchten, installieren Sie zunächst den
	Port oder das Paket <package>archivers/rpm4</package>.
	Anschließend kann der Superuser das folgende Kommando
	benutzen, um ein <filename>.rpm</filename> zu
	installieren:</para>

      <screen>&prompt.root; <userinput>cd /compat/linux</userinput>
&prompt.root; <userinput>rpm2cpio &lt; /pfad/zum/linux.archiv.rpm | cpio -id</userinput></screen>

      <para>Fall notwendig, benutzen Sie <command>brandelf</command>
	auf den installierten ELF-Binärdateien.  Beachten Sie, dass
	dies eine saubere Deinstallation verhindert.</para>
    </sect2>

    <sect2>
      <title>Namensauflösung konfigurieren</title>

      <para>Wenn <acronym>DNS</acronym> nicht funktioniert, oder die
	folgende Fehlermeldung erscheint:</para>

      <screen>resolv+: "bind" is an invalid keyword resolv+:
"hosts" is an invalid keyword</screen>

      <para>müssen Sie
	<filename>/compat/linux/etc/host.conf</filename> wie folgt
	bearbeiten:</para>

      <programlisting>order hosts, bind
multi on</programlisting>

      <para>Diese Reihenfolge legt fest, dass zuerst
	<filename>/etc/hosts</filename> und anschließend
	<acronym>DNS</acronym> durchsucht werden.  Wenn
	<filename>/compat/linux/etc/host.conf</filename> nicht
	vorhanden ist, nutzen &linux;-Anwendungen
	<filename>/etc/host.conf</filename> und
	beschweren sich über die inkompatible &os;-Syntax.  Wenn Sie
	in <filename>/etc/resolv.conf</filename> keinen Nameserver
	konfiguriert haben, sollten Sie den Eintrag
	<literal>bind</literal> entfernen.</para>
    </sect2>
  </sect1>

  <?ignore

  While the installer works, the binaries do not.  As of Oct 2013,
  Linux emulation is 32-bit but the trial version of Mathematica is
  only available as 64-bit.  This section should be revisited if Linux
  emulation gets 64-bit binary support.

  <sect1 xml:id="linuxemu-mathematica">
    <info><title>&mathematica; installieren</title>
      <authorgroup>
	<author><personname><firstname>Boris</firstname><surname>Hollas</surname></personname><contrib>Für Mathematica 5.x aktualisiert von </contrib></author>
      </authorgroup>
    </info>

    <indexterm>
      <primary>Linux-Anwendungen</primary>
      <secondary><application>Mathematica</application></secondary>
    </indexterm>

    <para>Dieses Dokument beschreibt die Installation der Linux-Version von
      <application>&mathematica; 5.x</application> auf einem
      FreeBSD-System.</para>

    <para>Die Linux-Version von <application>&mathematica;</application>
      oder <application>&mathematica; für Studenten</application> kann
      direkt von Wolfram unter <uri xlink:href="http://www.wolfram.com/">http://www.wolfram.com/</uri>
      bestellt werden.</para>

    <sect2>
      <title>Den &mathematica;-Installer starten</title>

      <para>Zuerst müssen Sie &os; mitteilen, dass die
	Linux-Binärversion von
	<application>&mathematica;</application> die Linux-ABI
	verwendet.  Dies erreichen Sie am einfachsten, indem Sie die
	Standard-ELF-Kennzeichnung für alle ungekennzeichneten
	Binärdateien auf Linux festlegen:</para>

      <screen>&prompt.root; <userinput>sysctl kern.fallback_elf_brand=3</userinput></screen>

      <para>Danach wird FreeBSD annehmen, dass alle ungekennzeichneten
	ELF-Binärdateien die Linux-ABI verwenden und es wäre
	nun möglich, das Installationsprogramm direkt von der
	CD-ROM zu starten.</para>

      <para>Unter &os; müssen allerdings die Datei
	<filename>MathInstaller</filename> in ein lokales Verzeichnis
	Ihrer Festplatte kopieren:</para>

      <screen>&prompt.root; <userinput>mount /cdrom</userinput>
&prompt.root; <userinput>cp /cdrom/Unix/Installers/Linux/MathInstaller /LokalesVerzeichnis/</userinput></screen>

      <para>In dieser Datei ersetzen Sie in der ersten Zeile den Wert
	<literal>/bin/sh</literal> durch
	<literal>/compat/linux/bin/sh</literal>.  Dadurch wird
	sichergestellt, dass der Installer von der Linux-Version von
	&man.sh.1; aufgerufen wird.  Danach ersetzen Sie durch das
	im nächsten Abschnitt zu findende Skript oder über
	einen Texteditor alle Vorkommen von <literal>Linux)</literal>
	durch <literal>FreeBSD)</literal>.  Dadurch ist es dem
	<application>&mathematica;</application>-Installer möglich,
	durch den Einsatz von <command>uname -s</command> das
	Betriebssystem zu bestimmen.  &os; wird dabei als
	Linux-artiges Betriebssystem behandelt.  Durch den Aufruf von
	<command>MathInstaller</command> kann
	<application>&mathematica;</application> anschließend
	installiert werden.</para>
    </sect2>

    <sect2>
      <title>Die &mathematica;-Programmdateien anpassen</title>

      <para>Das von <application>&mathematica;</application> während
	der Installation erzeugte Shell-Skript muss angepasst werden,
	bevor Sie es einsetzen können.  Wenn Sie die
	<application>&mathematica;</application>-Programmdateien unter
	<filename>/usr/local/bin</filename> installieren,
	finden Sie in diesem Verzeichnis die symbolische Links
	<filename>math</filename>, <filename>mathematica</filename>,
	<filename>Mathematica</filename>, sowie
	<filename>MathKernel</filename>.  In jeder dieser Dateien
	müssen Sie jedes Vorkommen von <literal>Linux)</literal>
	durch <literal>FreeBSD)</literal> ersetzen (entweder über
	einen Texteditor oder durch das folgende Shellskript):</para>

      <programlisting>#!/bin/sh
cd /usr/local/bin
for i in math mathematica Mathematica MathKernel
  do sed 's/Linux)/FreeBSD)/g' $i &gt; $i.tmp
  sed 's/\/bin\/sh/\/compat\/linux\/bin\/sh/g' $i.tmp &gt; $i
  rm $i.tmp
  chmod a+x $i
done</programlisting>
    </sect2>

    <sect2>
      <title>Ihr &mathematica;-Passwort anfordern</title>

      <indexterm>
	<primary>Ethernet</primary>
	<secondary>MAC-Adresse</secondary>
      </indexterm>

      <para>Wenn Sie <application>&mathematica;</application> das erste
	Mal starten, werden Sie nach einem Passwort gefragt.  Haben Sie
	noch kein Passwort von Wolfram erhalten, müssen Sie zuerst
	im Installationsverzeichnis <command>mathinfo</command>
	aufrufen, um Ihre <quote>Rechner-ID</quote> zu bestimmen.  Diese
	Rechner-ID basiert ausschließlich auf der MAC-Adresse
	Ihrer ersten Netzwerkkarte.  Daher ist es nicht möglich,
	Ihre <application>&mathematica;</application>-Kopie auf
	verschiedenen Rechnern zu installieren.</para>

      <para>Wenn Sie sich bei Wolfram registrieren (durch E-Mail,
	Telefon oder Fax), teilen Sie
	Ihre <quote>Rechner-ID</quote> mit und erhalten dafür
	ein aus Zahlengruppen bestehendes Passwort.</para>
    </sect2>

    <sect2>
      <title>Das &mathematica;-Frontend über ein Netzwerk
	ausführen</title>

      <para><application>&mathematica;</application> verwendet einige
	spezielle Schriftarten, um Zeichen anzuzeigen, die in den
	Standardzeichensätzen nicht vorhanden
	sind (z.B. Integrale, Summen, griechische Buchstaben).  Das
	X-Protokoll verlangt allerdings, dass diese Schriftarten
	<emphasis>lokal</emphasis> installiert sind.
	Das bedeutet, dass Sie diese Schriftarten von der CD-ROM oder
	von einem Rechner, auf dem <application>&mathematica;</application>
	installiert ist, auf Ihren Rechner kopieren müssen.
	Diese Schriftarten befinden sich  normalerweise in
	<filename>/cdrom/Unix/Files/SystemFiles/Fonts</filename>
	(&mathematica;-CD) oder in
	<filename>/usr/local/mathematica/SystemFiles/Fonts</filename>
	(Festplatte).  Die aktuellen Schriftarten befinden sich dabei
	in den Unterverzeichnissen <filename>Type1</filename> und
	<filename>X</filename>.  Um diese Schriftarten zu verwenden,
	gibt es mehrere Möglichkeiten, die nun beschrieben werden:</para>

      <para>Die erste Möglichkeit besteht darin, die Schriftarten
	in eins der bereits existierenden Schriftartenverzeichnisse unter
	<filename>/usr/X11R6/lib/X11/fonts</filename> zu kopieren.
	Dies bedeutet, dass Sie <filename>fonts.dir</filename> editieren
	müssen, indem Sie die Schriftnamen hinzufügen und
	die Anzahl der Schriftarten in der ersten Zeile ändern.
	Alternativ ist es auch möglich, im Verzeichnis, in das
	Sie die Schriftarten kopiert haben, das Kommando
	&man.mkfontdir.1; auszuführen.</para>

      <para>Die zweite Möglichkeit, besteht darin,
	die Verzeichnisse nach
	<filename>/usr/X11R6/lib/X11/fonts</filename> zu kopieren:</para>

      <screen>&prompt.root; <userinput>cd /usr/X11R6/lib/X11/fonts</userinput>
&prompt.root; <userinput>mkdir X</userinput>
&prompt.root; <userinput>mkdir MathType1</userinput>
&prompt.root; <userinput>cd /cdrom/Unix/Files/SystemFiles/Fonts</userinput>
&prompt.root; <userinput>cp X/* /usr/X11R6/lib/X11/fonts/X</userinput>
&prompt.root; <userinput>cp Type1/* /usr/X11R6/lib/X11/fonts/MathType1</userinput>
&prompt.root; <userinput>cd /usr/X11R6/lib/X11/fonts/X</userinput>
&prompt.root; <userinput>mkfontdir</userinput>
&prompt.root; <userinput>cd ../MathType1</userinput>
&prompt.root; <userinput>mkfontdir</userinput></screen>

      <para>Nun fügen Sie die neuen Schriftartenverzeichnisse in
	Ihren Pfad ein:</para>

      <screen>&prompt.root; <userinput>xset fp+ /usr/X11R6/lib/X11/fonts/X</userinput>
&prompt.root; <userinput>xset fp+ /usr/X11R6/lib/X11/fonts/MathType1</userinput>
&prompt.root; <userinput>xset fp rehash</userinput></screen>

      <para>Wenn Sie den &xorg;-Server verwenden, können Sie die
	Schriftarten-Verzeichnisse automatisch laden lassen, wenn Sie sie
	in Ihrer <filename>xorg.conf</filename> angeben.</para>

      <indexterm><primary>Schriftarten</primary></indexterm>

      <para>Wenn Sie <emphasis>noch kein</emphasis>
	<filename>/usr/X11R6/lib/X11/fonts/Type1</filename>-Verzeichnis
	haben, können Sie das
	<filename>MathType1</filename>-Verzeichnis im vorherigen
	Beispiel in <filename>Type1</filename> umbenennen.</para>
    </sect2>
  </sect1>

  <sect1 xml:id="linuxemu-maple">
    <info><title>&maple; installieren</title>
      <authorgroup>
	<author><personname><firstname>Aaron</firstname><surname>Kaplan</surname></personname><contrib>Beigetragen von </contrib></author>
      </authorgroup>
      <authorgroup>
	<author><personname><firstname>Robert</firstname><surname>Getschmann</surname></personname><contrib>Mit Unterstützung durch </contrib></author>
      </authorgroup>
    </info>
    

    <indexterm>
      <primary>Linux-Anwendungen</primary>
      <secondary><application>Maple</application></secondary>
    </indexterm>

    <para><application>&maple;</application> ist ein mit
      <application>&mathematica;</application> vergleichbares kommerzielles
      Mathematikprogramm.  Sie können dieses Programm unter
      <uri xlink:href="http://www.maplesoft.com/">http://www.maplesoft.com/</uri> kaufen und sich
      anschließend registrieren, um eine Lizenz zu erhalten.  Um
      dieses Programm unter FreeBSD zu installieren, gehen Sie wie
      folgt vor:</para>

    <procedure>
      <step><para>Führen Sie das
	<filename>INSTALL</filename>-Shell-Skript
	der Softwaredistribution aus.  Wählen Sie die
	<quote>RedHat</quote>-Option aus, wenn Sie das
	Installationsprogramm danach fragt.  Ein typisches
	Installationsverzeichnis wäre z.B.
	<filename>/usr/local/maple</filename>.</para></step>

      <step><para>Wenn Sie dies noch nicht gemacht haben, besorgen Sie
	sich nun eine <application>&maple;</application>-Lizenz von
	Maple Waterloo Software
	(<uri xlink:href="http://register.maplesoft.com">http://register.maplesoft.com</uri>)
	und kopieren Sie diese nach
	<filename>/usr/local/maple/license/license.dat</filename>.</para></step>

      <step><para>Installieren Sie den
	<application>FLEXlm</application>-Lizenz-Manager, indem Sie
	das <filename>INSTALL_LIC</filename>-Installations-Shellskript
	ausführen, das mit <application>&maple;</application>
	ausgeliefert wird.  Geben Sie Ihren primären
	Rechnernamen für den Lizenz-Server an.</para></step>

      <step><para>Verändern Sie
	<filename>/usr/local/maple/bin/maple.system.type</filename>
	wie folgt:</para>

<programlisting>   ----- snip ------------------
*** maple.system.type.orig      Sun Jul  8 16:35:33 2001
--- maple.system.type   Sun Jul  8 16:35:51 2001
***************
*** 72,77 ****
--- 72,78 ----
          # the IBM RS/6000 AIX case
          MAPLE_BIN="bin.IBM_RISC_UNIX"
          ;;
+     "FreeBSD"|\
      "Linux")
          # the Linux/x86 case
        # We have two Linux implementations, one for Red Hat and
   ----- snip end of patch -----</programlisting>

	<para>Bitte beachten Sie, dass nach
	  <literal>"FreeBSD"|\</literal> kein anderes
	  Zeichen eingefügt werden darf.</para>

	<para>Dieser Patch weist <application>&maple;</application> an,
	  FreeBSD als <quote>eine Art von Linux-System</quote> zu erkennen.
	  Das Shell-Skript <filename>bin/maple</filename> ruft das
	  Shell-Skript <filename>bin/maple.system.type</filename> auf,
	  welches wiederum <command>uname -a</command> verwendet,
	  um den Namen des Betriebssystems herauszufinden.
	  Abhängig vom Betriebssystem weiß das System nun,
	  welche Binärdateien verwendet werden sollen.</para></step>

      <step><para>Starten Sie den Lizenz-Server.</para>

	<para>Das folgende, als
	  <filename>/usr/local/etc/rc.d/lmgrd</filename>
	  installierte Shell-Skript ist ein komfortabler Weg,
	  um <command>lmgrd</command> zu starten:</para>

	<programlisting>   ----- snip ------------

#! /bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin
PATH=${PATH}:/usr/local/maple/bin:/usr/local/maple/FLEXlm/UNIX/LINUX
export PATH

LICENSE_FILE=/usr/local/maple/license/license.dat
LOG=/var/log/lmgrd.log

case "$1" in
start)
	lmgrd -c ${LICENSE_FILE} 2&gt;&gt; ${LOG} 1&gt;&amp;2
	echo -n " lmgrd"
	;;
stop)
	lmgrd -c ${LICENSE_FILE} -x lmdown 2&gt;&gt; ${LOG} 1&gt;&amp;2
	;;
*)
	echo "Usage: `basename $0` {start|stop}" 1&gt;&amp;2
	exit 64
	;;
esac

exit 0
   ----- snip ------------</programlisting></step>


      <step><para>Versuchen Sie, <application>&maple;</application>
	zu starten:</para>

        <screen>&prompt.user; <userinput>cd /usr/local/maple/bin</userinput>
&prompt.user; <userinput>./xmaple</userinput></screen>

	<para>Nun sollte das Programm laufen und alles funktionieren.
	    Falls ja, vergessen Sie nicht, an Maplesoft zu schreiben
	    und sie wissen zu lassen, dass Sie gerne eine native
	    FreeBSD-Version hätten.</para></step>
    </procedure>

    <sect2>
    <title>Häufige Fehlerquellen</title>

      <itemizedlist>
        <listitem><para>Der
	  <application>FLEXlm</application>-Lizenzmanager kann schwierig
	  zu bedienen sein.  Zusätzliche Dokumentation
	  zu diesem Thema finden Sie unter <uri xlink:href="http://www.globetrotter.com/">http://www.globetrotter.com/</uri>.</para></listitem>

        <listitem><para>Es ist bekannt, dass <command>lmgrd</command>
	  sehr pingelig ist, wenn es um die Lizenzdatei geht.  Gibt
	  es Probleme, führt dies zu einem Speicherauszug
	  (<foreignphrase>core dump</foreignphrase>).  Ein
	  korrekte Lizenzdatei sollte ähnlich der
	  folgenden aussehen:</para>

<programlisting># =======================================================
# License File for UNIX Installations ("Pointer File")
# =======================================================
SERVER chillig ANY
#USE_SERVER
VENDOR maplelmg

FEATURE Maple maplelmg 2000.0831 permanent 1 XXXXXXXXXXXX \
         PLATFORMS=i86_r ISSUER="Waterloo Maple Inc." \
         ISSUED=11-may-2000 NOTICE=" Technische Universitat Wien" \
         SN=XXXXXXXXX</programlisting>

	  <note><para>Seriennummer und Schlüssel wurden durch mehrere
	    <literal>X</literal> unkenntlich gemacht.  <systemitem>chillig</systemitem> ist ein
	    Rechnername.</para></note>

	  <para>Veränderungen an der Lizenzdatei sind möglich,
	    solange Sie die <literal>FEATURE</literal>-Zeile nicht
	    verändern (diese ist durch den Lizenzschlüssel
	    geschützt).</para></listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 xml:id="linuxemu-matlab">
    <info><title>&matlab; installieren</title>
      <authorgroup>
	<author><personname><firstname>Dan</firstname><surname>Pelleg</surname></personname><contrib>Beigesteuert von </contrib></author>
	<!-- daniel+handbook@pelleg.org -->
      </authorgroup>
    </info>
    

    <indexterm>
      <primary>Linux-Anwendungen</primary>
      <secondary><application>MATLAB</application></secondary>
    </indexterm>

    <para>Im Folgenden wird die Installation der Linux-Anwendung
      <application>&matlab;</application> Version&nbsp;6.5 auf
      &os; beschrieben.  Mit Ausnahme der
      <application>&java.virtual.machine;</application> (siehe
      <xref linkend="matlab-jre"/>) läuft die Anwendung
      auch ganz gut.</para>

    <para>Die Linux-Version von <application>&matlab;</application>
      können Sie direkt bei <link xlink:href="http://www.mathworks.com">The MathWorks</link> bestellen.
      Vergewissern Sie sich, dass Sie die Lizenz-Datei
      oder eine Anleitung zum Erstellen der Lizenz-Datei erhalten
      haben.  Wenn Sie mit MathWorks in Kontakt stehen, weisen
      Sie bitte auf die fehlende &os;-Version der Software hin.</para>

    <sect2>
      <title>Das &matlab;-Installationsskript</title>

      <para>Um <application>&matlab;</application> zu installieren,
	gehen Sie wie folgt vor:</para>

      <procedure>
	<step>
	  <para>Hängen Sie die Installations-CD ein und
	    wechseln Sie zu <systemitem class="username">root</systemitem>, wie im
	    Installations-Skript gefordert.  Starten Sie die
	    Installation mit dem folgenden Kommando:</para>

	  <screen>&prompt.root; <userinput>/compat/linux/bin/sh /cdrom/install</userinput></screen>

	  <tip>
	    <para>Die Installation erfordert eine graphische
	      Benutzeroberfläche.  Wenn Sie die Fehlermeldung
	      erhalten, dass das Display nicht geöffnet werden
	      konnte, führen Sie das folgende Kommando aus:</para>

	    <screen>&prompt.root; <userinput>setenv HOME ~USER</userinput></screen>

	    <para>Für <replaceable>USER</replaceable> setzen Sie
	      den Benutzer ein, von dem aus Sie <systemitem class="username">root</systemitem>
	      geworden sind.</para>
	  </tip>
	</step>

	<step>
	  <para>Beantworten Sie die Frage nach dem
	    <application>&matlab;</application>-Root-Verzeichnis mit:
	    <userinput>/compat/linux/usr/local/matlab</userinput>.</para>

	  <tip>
	    <para>Den langen Pfad werden Sie noch öfter brauchen.
	      Die Tipparbeit können Sie sich mit dem folgenden
	      Befehl erleichtern:</para>

	    <screen>&prompt.root; <userinput>set MATLAB=/compat/linux/usr/local/matlab</userinput></screen>
	  </tip>
	</step>

	<step>
	  <para>Editieren Sie die Lizenz-Datei entsprechend der
	    Anweisung, die Sie beim Erwerb der Lizenz
	    erhalten haben.</para>

	  <tip>
	    <para>Sie können die Datei schon vorher mit Ihrem
	      Lieblingseditor bearbeiten.  Kopieren Sie die Lizenz-Datei
	      nach <filename>$MATLAB/license.dat</filename>
	      bevor das Installationsprogramm Sie auffordert, die
	      Datei zu editieren.</para>
	  </tip>
	</step>

	<step>
	  <para>Schließen Sie die Installation ab.</para>
	</step>
      </procedure>

      <para>Die <application>&matlab;</application>-Installation
	ist jetzt abgeschlossen.  Die folgenden Schritte passen
	<application>&matlab;</application> an &os; an.</para>
    </sect2>

    <sect2>
      <title>Den Lizenzmanager starten</title>
      <procedure>
	<step>
	  <para>Erstellen Sie symbolische Links zu den Startskripten
	    des Lizenzmanagers:</para>

	  <screen>&prompt.root; <userinput>ln -s $MATLAB/etc/lmboot /usr/local/etc/lmboot_TMW</userinput>
&prompt.root; <userinput>ln -s $MATLAB/etc/lmdown /usr/local/etc/lmdown_TMW</userinput></screen>
	</step>

	<step>
	  <para>Erstellen Sie das Startskript
	    <filename>/usr/local/etc/rc.d/flexlm</filename>.  Das
	    folgende Beispiel ist eine geänderte Version des
	    mitgelieferten Skripts
	    <filename>$MATLAB/etc/rc.lm.glnx86</filename>.
	    Angepasst wurden die Pfade zu den Dateien und der
	    Start des Lizenzmanagers unter der Linux-Emulation.</para>

	  <programlisting>#!/bin/sh
case "$1" in
  start)
        if [ -f /usr/local/etc/lmboot_TMW ]; then
              /compat/linux/bin/sh /usr/local/etc/lmboot_TMW -u <replaceable>username</replaceable> &amp;&amp; echo 'MATLAB_lmgrd'
        fi
        ;;
  stop)
	if [ -f /usr/local/etc/lmdown_TMW ]; then
            /compat/linux/bin/sh /usr/local/etc/lmdown_TMW  &gt; /dev/null 2&gt;&amp;1
	fi
        ;;
  *)
	echo "Usage: $0 {start|stop}"
	exit 1
	;;
esac

exit 0</programlisting>

	  <important>
	    <para>Machen Sie Datei ausführbar:</para>

	    <screen>&prompt.root; <userinput>chmod +x /usr/local/etc/rc.d/flexlm</userinput></screen>

	    <para>Ersetzen Sie im Skript <replaceable>username</replaceable>
	      durch einen existierenden Benutzer Ihres Systems
	      (bitte keinesfalls <systemitem class="username">root</systemitem>).</para>
	  </important>
	</step>

	<step>
	  <para>Starten Sie den Lizenzmanager:</para>

	  <screen>&prompt.root; <userinput>service flexlm start</userinput></screen>
	</step>
      </procedure>
    </sect2>

    <sect2 xml:id="matlab-jre">
      <title>Einrichten der &java;-Laufzeitumgebung</title>

      <para>Erstellen Sie einen symbolischen Link auf eine
	unter &os; laufende &java;-Laufzeitumgebung (JRE):</para>

      <screen>&prompt.root; <userinput>cd $MATLAB/sys/java/jre/glnx86/</userinput>
&prompt.root; <userinput>unlink jre; ln -s ./jre1.1.8 ./jre</userinput></screen>
    </sect2>

    <sect2>
      <title>Ein &matlab;-Startskript erstellen</title>

      <procedure>
	<step>
	  <para>Kopieren Sie das folgende Skript nach
	    <filename>/usr/local/bin/matlab</filename>:</para>

	  <programlisting>#!/bin/sh
/compat/linux/bin/sh /compat/linux/usr/local/matlab/bin/matlab "$@"</programlisting>
	</step>

	<step>
	  <para>Machen Sie das Skript ausführbar:</para>

	  <screen>&prompt.root; <userinput>chmod +x /usr/local/bin/matlab</userinput></screen>
	</step>
      </procedure>

      <tip>
	<para>Abhängig von der Version des Ports
	  <package>emulators/linux_base</package>
	  kann das Skript auf Fehler laufen.  Die Fehler können
	  Sie vermeiden, indem Sie die Datei
	  <filename>/compat/linux/usr/local/matlab/bin/matlab</filename>
	  editieren.  Ändern Sie die nachstehende Zeile</para>

	<programlisting>if [ `expr "$lscmd" : '.*-&gt;.*'` -ne 0 ]; then</programlisting>
	<para>(mit Version&nbsp;13.0.1 in der Zeile&nbsp;410) in
	  die folgende um:</para>

	<programlisting>if test -L $newbase; then</programlisting>
      </tip>
    </sect2>

    <sect2>
      <title>Stopp-Skript für &matlab; erstellen</title>

      <para>Das nachstehende Skript beendet &matlab;
        ordnungsgemäß.</para>

      <procedure>
	<step>
	  <para>Erstellen Sie die Datei
	    <filename>$MATLAB/toolbox/local/finish.m</filename> mit
	    dem nachstehenden Inhalt:</para>

	  <programlisting>! $MATLAB/bin/finish.sh</programlisting>

	  <note>
	    <para>Übernehmen Sie die Zeichenkette
	      <literal>$MATLAB</literal> unverändert.</para>
	  </note>

	  <tip>
	    <para>Im selben Verzeichnis befinden sich die
	      Dateien <filename>finishsav.m</filename> und
	      <filename>finishdlg.m</filename>.  Die Dateien
	      sichern die Einstellungen der Arbeitsfläche
	      bevor &matlab; beendet wird.  Wenn Sie eine
	      der beiden Dateien benutzen, fügen Sie
	      die obige Zeile unmittelbar nach dem
	      <literal>save</literal>-Kommando ein.</para>
	  </tip>
	</step>

	<step>
	  <para>Erstellen Sie die Datei
	    <filename>$MATLAB/bin/finish.sh</filename> mit
	    nachstehendem Inhalt:</para>

	  <programlisting>#!/compat/linux/bin/sh
(sleep 5; killall -1 matlab_helper) &amp;
exit 0</programlisting>
	</step>

	<step>
	  <para>Machen Sie die Datei ausführbar:</para>

	  <screen>&prompt.root; <userinput>chmod +x $MATLAB/bin/finish.sh</userinput></screen>
	</step>
      </procedure>
    </sect2>

    <sect2 xml:id="matlab-using">
      <title>&matlab; benutzen</title>

      <para>Jetzt können Sie <application>&matlab;</application>
	mit dem <command>matlab</command> starten.</para>
    </sect2>
  </sect1>

  <sect1 xml:id="linuxemu-oracle">
    <info><title>&oracle; installieren</title>
      <authorgroup>
	<author><personname><firstname>Marcel</firstname><surname>Moolenaar</surname></personname><contrib>Beigetragen von </contrib></author>
	<!-- marcel@cup.hp.com -->
      </authorgroup>
    </info>
    

    <indexterm>
      <primary>Linux-Anwendungen</primary>
      <secondary><application>Oracle</application></secondary>
    </indexterm>

    <sect2>
      <title>Übersicht</title>
      <para>Dieses Dokument beschreibt die Installation von
	<application>&oracle; 8.0.5</application>
	und <application>&oracle; 8.0.5.1 Enterprise Edition</application>
	für Linux auf einem FreeBSD-Rechner.</para>
    </sect2>

    <sect2>
      <title>Installation der Linux-Umgebung</title>

      <para>Stellen Sie sicher, dass Sie sowohl
	<package>emulators/linux_base</package> und
	<package>devel/linux_devtools</package>
	aus der Ports-Sammlung installiert haben.  Wenn Sie mit
	diesen Ports Schwierigkeiten haben, müssen Sie
	vielleicht ältere Versionen der Linux-Umgebung aus
	der Ports-Sammlung installieren.</para>

      <para>Wenn Sie den Intelligent-Agent verwenden wollen,
	müssen Sie zusätzlich das RedHat Tcl-Paket
	installieren: <filename>tcl-8.0.3-20.i386.rpm</filename>.
	Zur Installation von RPM-Paketen wir der Port
	<package>archivers/rpm</package> benötigt.
	Ist der Port installiert, lassen sich RPM-Pakete
	anschließend mit dem nachstehenden Befehl
	installieren:</para>

      <screen>&prompt.root; <userinput>rpm -i --ignoreos --root /compat/linux --dbpath /var/lib/rpm package</userinput></screen>

      <para>Die Installation der RPM-Pakete sollte ohne
	Fehlermeldung ablaufen.</para>
    </sect2>

    <sect2>
      <title>Die &oracle;-Umgebung erzeugen</title>

      <para>Bevor Sie <application>&oracle;</application> installieren
	können, müssen Sie eine entsprechende Umgebung erzeugen.
	Dieses Dokument beschreibt nur, was Sie
	<emphasis>im Speziellen</emphasis> tun müssen, um die
	Linux-Version von <application>&oracle;</application> unter FreeBSD
	zu installieren, nicht aber, was bereits in der Installationsanleitung
	von <application>&oracle;</application> beschrieben wird.</para>

      <sect3 xml:id="linuxemu-kernel-tuning">
        <title>Kernel-Tuning</title>
	<indexterm><primary>Kernel Tuning</primary></indexterm>

	<para>Wie in der Installationsanleitung von
	  <application>&oracle;</application> beschrieben,
	  müssen Sie die maximale Shared-Memory Größe
	  festlegen.  Verwenden Sie
	  <literal>SHMMAX</literal> nicht unter FreeBSD.
	  <literal>SHMMAX</literal> wird lediglich aus
	  <literal>SHMMAXPGS</literal> und <literal>PGSIZE</literal>
	  berechnet.  Definieren Sie stattdessen
	  <literal>SHMMAXPGS</literal>.  Alle anderen Optionen
	  können wie in der Anleitung beschrieben verwendet werden.
	  Zum Beispiel:</para>

	<programlisting>options SHMMAXPGS=10000
options SHMMNI=100
options SHMSEG=10
options SEMMNS=200
options SEMMNI=70
options SEMMSL=61</programlisting>

	<para>Passen Sie diese Optionen entsprechend dem von Ihnen
	  gewünschten Einsatzzweck von
	  <application>&oracle;</application> an.</para>

	<para>Stellen Sie außerdem sicher, dass Sie folgende
	  Optionen in Ihren Kernel kompilieren:</para>

<programlisting>options SYSVSHM #SysV shared memory
options SYSVSEM #SysV semaphores
options SYSVMSG #SysV interprocess communication</programlisting>
      </sect3>

      <sect3 xml:id="linuxemu-oracle-account">

        <title>&oracle;-Benutzer anlegen</title>

	<para>Legen Sie den Account <systemitem class="username">oracle</systemitem> an.
	  Der Account unterschiedet sich von normalen Accounts
	  dadurch, dass er eine Linux-Shell zugeordnet bekommen muss.
	  Fügen Sie <literal>/compat/linux/bin/bash</literal> in die
	  Datei <filename>/etc/shells</filename> ein und setzen Sie die
	  Shell für den <systemitem class="username">oracle</systemitem>-Account auf
	  <filename>/compat/linux/bin/bash</filename>.</para>
      </sect3>

      <sect3 xml:id="linuxemu-environment">
        <title>Umgebung</title>

	<para>Neben den normalen
	  <application>&oracle;</application>-Variablen, wie z.B.
	  <envar>ORACLE_HOME</envar> und <envar>ORACLE_SID</envar>
	  müssen Sie die folgenden Variablen setzen:</para>

	<informaltable frame="none" pgwide="1">
	  <tgroup cols="2">
	  <colspec colwidth="1*"/>
	  <colspec colwidth="2*"/>
	    <thead>
	      <row>
		<entry>Variable</entry>

		<entry>Wert</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry><envar>LD_LIBRARY_PATH</envar></entry>

		<entry><literal>$ORACLE_HOME/lib</literal></entry>
	      </row>

	      <row>
		<entry><envar>CLASSPATH</envar></entry>

		<entry><literal>$ORACLE_HOME/jdbc/lib/classes111.zip</literal></entry>
	      </row>

	      <row>
		<entry><envar>PATH</envar></entry>

		<entry><literal>/compat/linux/bin
/compat/linux/sbin
/compat/linux/usr/bin
/compat/linux/usr/sbin
/bin
/sbin
/usr/bin
/usr/sbin
/usr/local/bin
$ORACLE_HOME/bin</literal></entry>
	      </row>
	    </tbody>
	  </tgroup>
	</informaltable>

        <para>Es ist empfehlenswert, alle Variablen in der Datei
	  <filename>.profile</filename> zu setzen.  Ein komplettes
	  Beispiel sieht folgendermaßen aus:</para>

        <programlisting>ORACLE_BASE=/oracle; export ORACLE_BASE
ORACLE_HOME=/oracle; export ORACLE_HOME
LD_LIBRARY_PATH=$ORACLE_HOME/lib
export LD_LIBRARY_PATH
ORACLE_SID=ORCL; export ORACLE_SID
ORACLE_TERM=386x; export ORACLE_TERM
CLASSPATH=$ORACLE_HOME/jdbc/lib/classes111.zip
export CLASSPATH
PATH=/compat/linux/bin:/compat/linux/sbin:/compat/linux/usr/bin
PATH=$PATH:/compat/linux/usr/sbin:/bin:/sbin:/usr/bin:/usr/sbin
PATH=$PATH:/usr/local/bin:$ORACLE_HOME/bin
export PATH</programlisting>
      </sect3>
    </sect2>

    <sect2>
      <title>&oracle; installieren</title>

      <para>Auf Grund einer kleinen Unregelmäßigkeit
	im Linux-Emulator müssen Sie das Verzeichnis
	<filename>.oracle</filename> unter <filename>/var/tmp</filename>
	erzeugen, bevor Sie das Installationsprogramm starten.
	Das Verzeichnis muss dem Account <systemitem class="username">oracle</systemitem>
	gehören.  Sie sollten <application>&oracle;</application> nun
	ohne Probleme installieren können.  Treten dennoch Probleme
	auf, überprüfen Sie zuerst Ihre
	<application>&oracle;</application>-Distribution und Ihre
	Konfiguration.  Nachdem Sie <application>&oracle;</application>
	erfolgreich installiert haben, installieren Sie die Patches
	wie in den zwei folgenden Abschnitten beschrieben:</para>

      <para>Ein häufiges Problem ist, dass der
	TCP Protokoll-Adapter nicht korrekt installiert wird.
	Daraus folgt, dass Sie keine TCP-Listener starten können.
	Dieses Problem kann durch folgende Schritte behoben werden:</para>

      <screen>&prompt.root; <userinput>cd $ORACLE_HOME/network/lib</userinput>
&prompt.root; <userinput>make -f ins_network.mk ntcontab.o</userinput>
&prompt.root; <userinput>cd $ORACLE_HOME/lib</userinput>
&prompt.root; <userinput>ar r libnetwork.a ntcontab.o</userinput>
&prompt.root; <userinput>cd $ORACLE_HOME/network/lib</userinput>
&prompt.root; <userinput>make -f ins_network.mk install</userinput></screen>

      <para>Vergessen Sie nicht, <filename>root.sh</filename>
	nochmals auszuführen!</para>

      <sect3 xml:id="linuxemu-patch-root">
        <title>root.sh patchen</title>

	<para>Während der
	  <application>&oracle;</application>-Installation werden einige
	  Aktionen, die als <systemitem class="username">root</systemitem>
	  ausgeführt werden müssen, in ein Shell-Skript
	  mit dem Namen <filename>root.sh</filename> gespeichert.
	  Dieses Skript befindet sich im Verzeichnis
	  <filename>orainst</filename>.  Verwenden Sie folgenden
	  Patch für <filename>root.sh</filename>, damit es
	  das richtige <command>chown</command> Kommando
	  verwendet, oder lassen Sie das
	  Skript alternativ unter einer Linux-Shell ablaufen:</para>

	<programlisting>*** orainst/root.sh.orig Tue Oct 6 21:57:33 1998
--- orainst/root.sh Mon Dec 28 15:58:53 1998
***************
*** 31,37 ****
# This is the default value for CHOWN
# It will redefined later in this script for those ports
# which have it conditionally defined in ss_install.h
! CHOWN=/bin/chown
#
# Define variables to be used in this script
--- 31,37 ----
# This is the default value for CHOWN
# It will redefined later in this script for those ports
# which have it conditionally defined in ss_install.h
! CHOWN=/usr/sbin/chown
#
# Define variables to be used in this script</programlisting>

	<para>Wenn Sie <application>&oracle;</application> nicht
	  von CD-ROM installieren, können
	  Sie Quelldatei für <filename>root.sh</filename>
	  verändern.  Sie heißt <filename>rthd.sh</filename>
	  und befindet sich im <filename>orainst</filename>-Verzeichnis
	  des Quellcodebaums.</para>
      </sect3>

      <sect3 xml:id="linuxemu-patch-tcl">
	<title>genclntsh patchen</title>

	<para>Das Skript <command>genclntsh</command> wird verwendet,
	  um eine Shared-Library für Clients zu erzeugen.
	  Diese wird bei der Erzeugung der Demos verwendet.  Verwenden
	  Sie folgenden Patch, um die Definition von <envar>PATH</envar>
	  auszukommentieren:</para>

	<programlisting>*** bin/genclntsh.orig Wed Sep 30 07:37:19 1998
--- bin/genclntsh Tue Dec 22 15:36:49 1998
***************
*** 32,38 ****
#
# Explicit path to ensure that we're using the correct commands
#PATH=/usr/bin:/usr/ccs/bin export PATH
! PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin export PATH
#
# each product MUST provide a $PRODUCT/admin/shrept.lst
--- 32,38 ----
#
# Explicit path to ensure that we're using the correct commands
#PATH=/usr/bin:/usr/ccs/bin export PATH
! #PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin export PATH
#
# each product MUST provide a $PRODUCT/admin/shrept.lst</programlisting>
      </sect3>
    </sect2>

    <sect2>
      <title>&oracle; starten</title>

      <para>Wenn Sie den Anweisungen gefolgt sind, sollten Sie nun
	in der Lage sein, <application>&oracle;</application> zu starten,
	genau so, wie Sie dies auch unter Linux tun würden.</para>
    </sect2>
  </sect1>
  ?>

  <sect1 xml:id="linuxemu-advanced">
    <title>Weiterführende Themen</title>

    <para>Dieser Abschnitt beschreibt wie die
      &linux;-Binärkompatibilität funktioniert.  Die folgenden
      Informationen stammen aus einer E-Mail, die von Terry Lambert
      (<email>tlambert@primenet.com</email>) an &a.chat; geschrieben
      wurde (Message ID:
      <literal>&lt;199906020108.SAA07001@usr09.primenet.com&gt;</literal>).</para>

      <indexterm><primary>execution class loader</primary></indexterm>

      <para>&os; verfügt über eine
	<quote>execution class loader</quote> genannte Abstraktion.
	Dabei handelt es sich um einen Eingriff in den &man.execve.2;
	Systemaufruf.</para>

      <para>Historisch gesehen untersuchte der einzige, auf
	&unix;-Plattformen vorhandene Lader die
	<quote>magische Zahl</quote> (in der Regel die ersten 4 oder
	8&nbsp;Bytes der Datei), um festzustellen, ob der Binärtyp dem
	System bekannt war.  War dies der Fall, wurde der Binärlader
	aufgerufen.</para>

      <para>Wenn es sich nicht um den zum System gehörigen Binärtyp
	handelte, gab &man.execve.2; einen Fehler zurück, und die
	Shell versuchte stattdessen, die Datei als Shell-Befehl
	auszuführen.  Dabei wurde als Standardeinstellung
	<quote>was auch immer die aktuelle Shell ist</quote>
	festgelegt.</para>

      <para>Später wurde ein Hack in &man.sh.1; eingefügt,
	der die zwei ersten Zeichen untersuchte.  Wenn diese
	<literal>:\n</literal> entsprachen,
	wurde stattdessen die &man.csh.1;-Shell aufgerufen.</para>

      <para>&os; verfügt über eine Liste von Ladern, anstelle
	eines einzigen, auf <literal>#!</literal> zurückgreifenden
	Laders, um Shell-Interpreter oder Shell-Skripte
	auszuführen.</para>

      <indexterm><primary>ELF</primary></indexterm>
      <indexterm><primary>Solaris</primary></indexterm>

      <para>Für die &linux; <acronym>ABI</acronym>-Unterstützung
	erkennt &os; die magische Zahl als ELF-Binärdatei.  Der
	ELF-Lader sucht nach einer speziellen
	<emphasis>Kennzeichnung</emphasis>, die aus einem
	Kommentarabschnitt in der ELF-Datei besteht, und die in
	SVR4/&solaris; ELF Binärdateien nicht vorhanden ist.</para>

      <para>Damit &linux;-Binärdateien unter &os; funktionieren,
	müssen sie mit &man.brandelf.1; als <literal>Linux</literal>
	<emphasis>gekennzeichnet</emphasis> werden:</para>

      <screen>&prompt.root; <userinput>brandelf -t Linux file</userinput></screen>

      <indexterm>
	<primary>ELF</primary>
	<secondary>Kennzeichnung</secondary>
      </indexterm>

      <para>Wenn der ELF-Lader die
	<literal>Linux</literal>-Kennzeichnung sieht, wird ein Zeiger
	in der <literal>proc</literal>-Struktur ersetzt.  Alle
	Systemaufrufe werden durch diesen Zeiger indiziert.  Der
	Prozess wird weiterhin speziell gekennzeichnet, so dass der
	Trap-vector im Signal-trampoline-code eine spezielle
	Behandlung erfährt und das &linux;-Kernelmodul verschiedene
	kleinere Korrekturen vornehmen kann.</para>

      <para>Der &linux;-Systemaufrufvektor enthält neben anderen
	Dingen eine Liste der <literal>sysent[]</literal>-Einträge,
	deren Adressen sich im Kernelmodul befinden.</para>

      <para>Wenn ein &linux;-Programm einen Systemaufruf ausführt,
	dereferenziert die Trap-Behandlungsroutine den Zeiger für den
	Systemaufruf aus der <literal>proc</literal>-Struktur und
	erhält damit die &linux;-Eintrittspunkte für den
	Systemaufruf.</para>

      <para>Zusätzlich <emphasis>verändert</emphasis> der
	&linux;-Modus die Systempfade dynamisch; genauso, wie dies die
	Option <option>union</option> beim Einbinden von Dateisystemen
	macht.  Zuerst wird die Datei im Verzeichnis
	<filename>/compat/linux/Originalpfad</filename> gesucht, wenn
	sie dort nicht gefunden wurde, wird sie im Verzeichnis
	<filename>/Originalpfad</filename> gesucht.  Dadurch wird
	sichergestellt, dass Binärdateien, die zur Ausführung andere
	Binärdateien benötigen, ausgeführt werden können (so dass alle
	&linux;-Werkzeuge unter der <acronym>ABI</acronym> laufen).
	Dies bedeutet auch, dass &linux;-Binärdateien
	&os;-Binärdateien laden und ausführen können, wenn keine
	passenden &linux;-Binärdateien vorhanden sind.  Ein in
	<filename>/compat/linux</filename> plaziertes &man.uname.1;
	kann damit &linux;-Programmen vorgaukeln, dass sie auf einem
	&linux;-System laufen.</para>

      <para>Im Endeffekt gibt es einen &linux;-Kernel innerhalb des
	&os;-Kernels.  Die Sprungtabellen für &linux;- beziehungsweise
	&os;-Systemaufrufe verweisen allerdings auf dieselben
	Funktionen, die Kerneldienste wie Dateisystemoperationen,
	Operationen für den virtuellen Speicher, Signalübermittlung
	und System&nbsp;V&nbsp;IPC bereitstellen.  Der einzige
	Unterschied ist, dass Binärdateien unter &os;
	&os;-<emphasis>glue</emphasis>-Funktionen verwendet werden.
	&linux;-Binärdateien hingegen verwenden die
	&linux;-<emphasis>glue</emphasis>-Funktionen.
	&os;-<emphasis>glue</emphasis>-Funktionen sind statisch in
	den Kernel gelinkt,
	&linux;-<emphasis>glue</emphasis>-Funktionen sind statisch
	gelinkt oder können über ein ladbares Kernelmodul eingebunden
	werden.</para>

      <para>Technisch gesehen ist dies nicht wirklich eine Emulation,
	sondern eine <acronym>ABI</acronym>-Implementation.  Es wird
	manchmal <quote>&linux; Emulation</quote> genannt, da es zu
	einer Zeit implementiert wurde, in der es kein anderes Wort
	gab, das beschrieb, was vor sich ging.  Es war falsch zu
	behaupten, &os; würde &linux;-Binärprogramme ausführen, da der
	Code nicht unter &os; übersetzt wurde.</para>
  </sect1>
</chapter>
