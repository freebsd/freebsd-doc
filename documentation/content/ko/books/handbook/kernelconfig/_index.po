# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR The FreeBSD Project
# This file is distributed under the same license as the FreeBSD Documentation package.
# Kyung-tak, Yoo <stonegaze@me.com>, 2023.
msgid ""
msgstr ""
"Project-Id-Version: FreeBSD Documentation VERSION\n"
"POT-Creation-Date: 2023-01-21 20:00-0300\n"
"PO-Revision-Date: 2023-03-13 15:38+0900\n"
"Last-Translator: Kyung-tak, Yoo <stonegaze@me.com>\n"
"Language-Team: Korean <https://translate-dev.freebsd.org/projects/documentation/bookshandbookkernelconfig_index/ko/>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#. type: YAML Front Matter: description
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:1
#, no-wrap
msgid "This chapter covers how to configure the FreeBSD Kernel. When to build a custom kernel, how to take a hardware inventory, how to customize a kernel configuration file, etc"
msgstr "이 장에서는 FreeBSD 커널을 구성하는 방법을 다룹니다. 커스텀 커널을 빌드하는 시기, 하드웨어 인벤토리를 가져오는 방법, 커널 구성 파일을 커스터마이징하는 방법 등을 설명합니다"

#. type: YAML Front Matter: part
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:1
#, no-wrap
msgid "Part II. Common Tasks"
msgstr "파트 II. 일반적인 작업"

#. type: YAML Front Matter: title
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:1
#, no-wrap
msgid "Chapter 9. Configuring the FreeBSD Kernel"
msgstr "9장. FreeBSD 커널 구성하기"

#. type: Title =
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:15
#, no-wrap
msgid "Configuring the FreeBSD Kernel"
msgstr "FreeBSD 커널 구성하기"

#. type: Title ==
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:53
#, no-wrap
msgid "Synopsis"
msgstr "요약"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:58
msgid "The kernel is the core of the FreeBSD operating system.  It is responsible for managing memory, enforcing security controls, networking, disk access, and much more.  While much of FreeBSD is dynamically configurable, it is still occasionally necessary to configure and compile a custom kernel."
msgstr "커널은 FreeBSD 운영 체제의 핵심입니다.  커널은 메모리 관리, 보안 제어, 네트워킹, 디스크 액세스 등을 담당합니다.  FreeBSD의 대부분은 동적으로 구성할 수 있지만, 커스텀 커널을 구성하고 컴파일해야 하는 경우도 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:60
msgid "After reading this chapter, you will know:"
msgstr "이 챕터를 읽고 나면, 여러분은:"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:62
msgid "When to build a custom kernel."
msgstr "커스텀 커널을 빌드할 시기."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:63
msgid "How to take a hardware inventory."
msgstr "하드웨어 인벤토리를 작성하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:64
msgid "How to customize a kernel configuration file."
msgstr "커널 구성 파일을 커스터마이징 하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:65
msgid "How to use the kernel configuration file to create and build a new kernel."
msgstr "커널 구성 파일을 사용하여 새 커널을 생성하고 빌드하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:66
msgid "How to install the new kernel."
msgstr "새 커널을 설치하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:67
msgid "How to troubleshoot if things go wrong."
msgstr "문제를 해결하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:69
msgid "All of the commands listed in the examples in this chapter should be executed as `root`."
msgstr "이 장의 예제에 나열된 모든 명령은 `root`로 실행해야 합니다."

#. type: Title ==
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:71
#, no-wrap
msgid "Why Build a Custom Kernel?"
msgstr "커스텀 커널을 빌드하는 이유는 무엇인가요?"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:75
msgid "Traditionally, FreeBSD used a monolithic kernel.  The kernel was one large program, supported a fixed list of devices, and in order to change the kernel's behavior, one had to compile and then reboot into a new kernel."
msgstr "전통적으로 FreeBSD는 모놀리식 커널(단일 커널)을 사용했습니다.  커널은 하나의 큰 프로그램으로 고정된 장치 목록을 지원했으며, 커널의 동작을 변경하려면 컴파일한 다음 새 커널로 재부팅해야 했습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:79
msgid ""
"Today, most of the functionality in the FreeBSD kernel is contained in modules which can be dynamically loaded and unloaded from the kernel as necessary.  This allows the running kernel to adapt immediately to new hardware and for new functionality to be brought into the kernel.  This is known as a "
"modular kernel."
msgstr "오늘날 FreeBSD 커널의 대부분의 기능은 필요에 따라 커널에서 동적으로 로드 및 언로드할 수 있는 모듈에 포함되어 있습니다.  이를 통해 실행 중인 커널이 새로운 하드웨어에 즉시 적응하고 새로운 기능을 커널로 가져올 수 있습니다.  이를 모듈형 커널이라고 합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:83
msgid ""
"Occasionally, it is still necessary to perform static kernel configuration.  Sometimes the needed functionality is so tied to the kernel that it can not be made dynamically loadable.  Some security environments prevent the loading and unloading of kernel modules and require that only needed "
"functionality is statically compiled into the kernel."
msgstr "때때로 정적 커널 구성을 해야 하는 경우도 있습니다.  때로는 필요한 기능이 커널에 너무 많이 묶여 있어 동적으로 로드할 수 없는 경우도 있습니다.  일부 보안 환경에서는 커널 모듈의 로딩 및 언로딩을 방지하고 필요한 기능만 커널에 정적으로 컴파일해야 합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:88
msgid ""
"Building a custom kernel is often a rite of passage for advanced BSD users.  This process, while time consuming, can provide benefits to the FreeBSD system.  Unlike the [.filename]#GENERIC# kernel, which must support a wide range of hardware, a custom kernel can be stripped down to only provide support "
"for that computer's hardware.  This has a number of benefits, such as:"
msgstr ""
"커스텀 커널을 빌드하는 것은 종종 고급 BSD 사용자들에겐 통과의례 같은 것입니다.  이 과정은 시간이 많이 걸리지만 FreeBSD 시스템에 이점을 제공할 수 있습니다.  광범위한 하드웨어를 지원해야 하는 [.filename]#GENERIC# 커널과 달리, 커스텀 커널은 해당 컴퓨터의 하드웨어만 지원하도록 커널을 재편성할 수 있습니다.  "
"여기에는 다음과 같은 여러 가지 이점이 있습니다:"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:90
msgid "Faster boot time. Since the kernel will only probe the hardware on the system, the time it takes the system to boot can decrease."
msgstr "부팅 시간이 빨라집니다. 커널이 시스템의 하드웨어만 검사하기 때문에 시스템 부팅에 걸리는 시간이 단축될 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:91
msgid ""
"Lower memory usage. A custom kernel often uses less memory than the [.filename]#GENERIC# kernel by omitting unused features and device drivers. This is important because the kernel code remains resident in physical memory at all times, preventing that memory from being used by applications. For this "
"reason, a custom kernel is useful on a system with a small amount of RAM."
msgstr ""
"메모리 사용량 감소. 사용자 지정 커널은 사용하지 않는 기능과 장치 드라이버를 생략하여 [.filename]#GENERIC# 커널보다 메모리를 적게 사용하는 경우가 많습니다. 커널 코드는 항상 실제 메모리에 상주하여 애플리케이션에서 해당 메모리를 사용하지 못하도록 하기 때문에 이 점이 중요합니다. 이러한 이유로 커스텀 커널은 "
"RAM 용량이 적은 시스템에서 유용합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:92
msgid "Additional hardware support. A custom kernel can add support for devices which are not present in the [.filename]#GENERIC# kernel."
msgstr "추가 하드웨어 지원. 사용자 지정 커널은 [.filename]#GENERIC# 커널에 없는 장치에 대한 지원을 추가할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:95
msgid "Before building a custom kernel, consider the reason for doing so.  If there is a need for specific hardware support, it may already exist as a module."
msgstr "커스텀 커널을 빌드하기 전에 커널을 빌드하는 이유를 고려하세요.  특정 하드웨어 지원이 필요한 경우 이미 모듈로 존재할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:99
msgid "Kernel modules exist in [.filename]#/boot/kernel# and may be dynamically loaded into the running kernel using man:kldload[8].  Most kernel drivers have a loadable module and manual page.  For example, the man:ath[4] wireless network driver has the following information in its manual page:"
msgstr "커널 모듈은 [.filename]#/boot/kernel#에 존재하며 man:kldload[8]를 사용하여 실행 중인 커널에 동적으로 로드할 수 있습니다.  대부분의 커널 드라이버에는 로드 가능한 모듈과 매뉴얼 페이지가 있습니다.  예를 들어, man:ath[4] 무선 네트워크 드라이버는 매뉴얼 페이지에 다음과 같은 정보가 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:104
#, no-wrap
msgid ""
"Alternatively, to load the driver as a module at boot time, place the\n"
"following line in man:loader.conf[5]:\n"
msgstr ""
"Alternatively, to load the driver as a module at boot time, place the\n"
"following line in man:loader.conf[5]:\n"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:106
#, no-wrap
msgid "    if_ath_load=\"YES\"\n"
msgstr "    if_ath_load=\"YES\"\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:109
msgid "Adding `if_ath_load=\"YES\"` to [.filename]#/boot/loader.conf# will load this module dynamically at boot time."
msgstr "`if_ath_load=“YES”`를 [.filename]#/boot/loader.conf#에 추가하기만 하면 부팅 시 이 모듈을 동적으로 로드할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:112
msgid "In some cases, there is no associated module in [.filename]#/boot/kernel#.  This is mostly true for certain subsystems."
msgstr "경우에 따라 [.filename]#/boot/kernel#에 관련 모듈이 없는 경우도 있습니다.  이는 몇몇 서브시스템에서 주로 발생합니다."

#. type: Title ==
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:114
#, no-wrap
msgid "Finding the System Hardware"
msgstr "시스템 하드웨어 찾기"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:119
msgid "Before editing the kernel configuration file, it is recommended to perform an inventory of the machine's hardware.  On a dual-boot system, the inventory can be created from the other operating system.  For example, Microsoft(R)'s Device Manager contains information about installed devices."
msgstr "커널 구성 파일을 편집하기 전에 머신의 하드웨어 인벤토리를 준비하는 것이 좋습니다.  듀얼 부팅 시스템에서는 다른 운영 체제에서 인벤토리를 생성할 수 있습니다.  예를 들어 Microsoft(R)의 장치 관리자에는 설치된 장치에 대한 정보가 포함되어 있습니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:123
msgid "Some versions of Microsoft(R) Windows(R) have a System icon which can be used to access Device Manager."
msgstr "일부 Microsoft(R) Windows(R) 버전에는 장치 관리자에 액세스하는 데 사용할 수 있는 시스템 아이콘이 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:128
msgid ""
"If FreeBSD is the only installed operating system, use man:dmesg[8] to determine the hardware that was found and listed during the boot probe.  Most device drivers on FreeBSD have a manual page which lists the hardware supported by that driver.  For example, the following lines indicate that the man:"
"psm[4] driver found a mouse:"
msgstr ""
"설치된 운영체제가 FreeBSD뿐인 경우, man:dmesg[8]를 사용하여 부팅 프로브 중에 발견되어 나열된 하드웨어를 확인합니다.  FreeBSD의 대부분의 장치 드라이버에는 해당 드라이버가 지원하는 하드웨어를 나열하는 설명서 페이지가 있습니다.  예를 들어, 다음 줄은 man:psm[4] 드라이버가 마우스를 찾았음을 나타냅니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:135
#, no-wrap
msgid ""
"psm0: <PS/2 Mouse> irq 12 on atkbdc0\n"
"psm0: [GIANT-LOCKED]\n"
"psm0: [ITHREAD]\n"
"psm0: model Generic PS/2 mouse, device ID 0\n"
msgstr ""
"psm0: <PS/2 Mouse> irq 12 on atkbdc0\n"
"psm0: [GIANT-LOCKED]\n"
"psm0: [ITHREAD]\n"
"psm0: model Generic PS/2 mouse, device ID 0\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:138
msgid "Since this hardware exists, this driver should not be removed from a custom kernel configuration file."
msgstr "이 하드웨어가 존재하므로 사용자 정의 커널 구성 파일에서 이 드라이버를 제거해서는 안 됩니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:140
msgid "If the output of `dmesg` does not display the results of the boot probe output, instead read the contents of [.filename]#/var/run/dmesg.boot#."
msgstr "`dmesg`의 출력에 부팅 프로브 출력 결과가 표시되지 않는 경우, 대신 [.filename]#/var/run/dmesg.boot#의 내용을 확인합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:143
msgid "Another tool for finding hardware is man:pciconf[8], which provides more verbose output.  For example:"
msgstr "하드웨어를 찾는 또 다른 도구로는 man:pciconf[8]가 있는데, 이 도구는 더 자세한 출력을 제공합니다.  예를 들어:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:152
#, no-wrap
msgid ""
"% pciconf -lv\n"
"ath0@pci0:3:0:0:        class=0x020000 card=0x058a1014 chip=0x1014168c rev=0x01 hdr=0x00\n"
"    vendor     = 'Atheros Communications Inc.'\n"
"    device     = 'AR5212 Atheros AR5212 802.11abg wireless'\n"
"    class      = network\n"
"    subclass   = ethernet\n"
msgstr ""
"% pciconf -lv\n"
"ath0@pci0:3:0:0:        class=0x020000 card=0x058a1014 chip=0x1014168c rev=0x01 hdr=0x00\n"
"    vendor     = 'Atheros Communications Inc.'\n"
"    device     = 'AR5212 Atheros AR5212 802.11abg wireless'\n"
"    class      = network\n"
"    subclass   = ethernet\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:155
msgid "This output shows that the [.filename]#ath# driver located a wireless Ethernet device."
msgstr "이 출력은 [.filename]#ath# 드라이버가 무선 이더넷 장치를 찾았음을 보여줍니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:158
msgid "The `-k` flag of man:man[1] can be used to provide useful information.  For example, it can be used to display a list of manual pages which contain a particular device brand or name:"
msgstr "Man:man[1]의 `-k` 플래그는 유용한 정보를 제공하는 데 사용할 수 있습니다.  예를 들어 특정 기기 브랜드나 이름이 포함된 매뉴얼 페이지 목록을 표시하는 데 사용할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:164
#, no-wrap
msgid ""
"# man -k Atheros\n"
"ath(4)                   - Atheros IEEE 802.11 wireless network driver\n"
"ath_hal(4)               - Atheros Hardware Access Layer (HAL)\n"
msgstr ""
"# man -k Atheros\n"
"ath(4)                   - Atheros IEEE 802.11 wireless network driver\n"
"ath_hal(4)               - Atheros Hardware Access Layer (HAL)\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:167
msgid "Once the hardware inventory list is created, refer to it to ensure that drivers for installed hardware are not removed as the custom kernel configuration is edited."
msgstr "하드웨어 인벤토리 목록이 생성되면 이를 참조하여 사용자 지정 커널 구성을 편집할 때 설치된 하드웨어의 드라이버가 제거되지 않도록 합니다."

#. type: Title ==
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:169
#, no-wrap
msgid "The Configuration File"
msgstr "구성 파일"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:172
msgid "In order to create a custom kernel configuration file and build a custom kernel, the full FreeBSD source tree must first be installed."
msgstr "커스텀 커널 구성 파일을 생성하고 커스텀 커널을 빌드하려면 먼저 전체 FreeBSD 소스 트리를 설치해야 합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:175
msgid "If [.filename]#/usr/src/# does not exist or it is empty, source has not been installed.  Source can be installed with Git using the instructions in crossref:mirrors[git,“Using Git”]."
msgstr "[.filename]#/usr/src/#이 존재하지 않거나 비어 있으면 소스가 설치되지 않은 것입니다.  crossref:mirrors[git,“Using Git”]의 지침에 따라 Git으로 소스를 설치할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:180
msgid ""
"Once source is installed, review the contents of [.filename]#/usr/src/sys#.  This directory contains a number of subdirectories, including those which represent the following supported architectures: [.filename]#amd64#, [.filename]#i386#, [.filename]#powerpc#, and [.filename]#sparc64#.  Everything "
"inside a particular architecture's directory deals with that architecture only and the rest of the code is machine independent code common to all platforms.  Each supported architecture has a [.filename]#conf# subdirectory which contains the [.filename]#GENERIC# kernel configuration file for that "
"architecture."
msgstr ""
"소스가 설치되면 [.filename]#/usr/src/sys#의 내용을 검토합니다.  이 디렉토리에는 다음과 같이 지원되는 아키텍처를 나타내는 하위 디렉터리가 다수 포함되어 있습니다: [.filename]#amd64#, [.filename]#i386#, [.filename]#powerpc#, [.filename]#sparc64#.  특정 아키텍처의 디렉터리 안에 있는 모든 코드는 해당 아키텍"
"처만 다루며 나머지 코드는 모든 플랫폼에 공통으로 적용되는 머신 독립적인 코드입니다.  지원되는 각 아키텍처에는 [.filename]#conf# 하위 디렉터리가 있으며, 이 디렉터리에는 해당 아키텍처에 대한 [.filename]#GENERIC# 커널 구성 파일이 포함되어 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:186
msgid ""
"Do not make edits to [.filename]#GENERIC#.  Instead, copy the file to a different name and make edits to the copy.  The convention is to use a name with all capital letters.  When maintaining multiple FreeBSD machines with different hardware, it is a good idea to name it after the machine's hostname.  "
"This example creates a copy, named [.filename]#MYKERNEL#, of the [.filename]#GENERIC# configuration file for the `amd64` architecture:"
msgstr ""
"[.filename]#GENERIC#을 수정하지 마세요.  대신 파일을 다른 이름으로 복사하고 복사본을 수정합니다.  전부 대문자로 된 이름을 사용하는 것이 규칙입니다.  하드웨어가 다른 여러 대의 FreeBSD 머신을 유지 관리할 때는 머신의 호스트 이름을 따서 이름을 지정하는 것이 좋습니다.  이 예는 `amd64` 아키텍처에 대한 [."
"filename]#MYKERNEL# 구성 파일의 [.filename]#GENERIC# 복사본을 만듭니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:191
#, no-wrap
msgid ""
"# cd /usr/src/sys/amd64/conf\n"
"# cp GENERIC MYKERNEL\n"
msgstr ""
"# cd /usr/src/sys/amd64/conf\n"
"# cp GENERIC MYKERNEL\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:195
msgid "[.filename]#MYKERNEL# can now be customized with any `ASCII` text editor.  The default editor is vi, though an easier editor for beginners, called ee, is also installed with FreeBSD."
msgstr "이제 `ASCII` 텍스트 편집기를 사용하여 [.filename]#MYKERNEL#을 사용자 지정할 수 있습니다.  기본 편집기는 vi이지만, 초보자를 위한 더 쉬운 편집기인 ee도 FreeBSD와 함께 설치되어 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:201
msgid ""
"The format of the kernel configuration file is simple.  Each line contains a keyword that represents a device or subsystem, an argument, and a brief description.  Any text after a `+#+` is considered a comment and ignored.  To remove kernel support for a device or subsystem, put a `+#+` at the "
"beginning of the line representing that device or subsystem.  Do not add or remove a `+#+` for any line that you do not understand."
msgstr ""
"커널 구성 파일의 형식은 간단합니다.  각 줄에는 장치 또는 하위 시스템을 나타내는 키워드, 인수 및 간단한 설명이 포함됩니다.  `+#+`이후의 텍스트는 주석으로 간주되어 무시됩니다.  장치 또는 하위 시스템에 대한 커널 지원을 제거하려면 해당 장치 또는 하위 시스템을 나타내는 줄의 시작 부분에 `+#+`를 넣습니다.  잘 "
"모르는 내용에 `+#+`를 추가하거나 제거하지 마세요."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:207
msgid "It is easy to remove support for a device or option and end up with a broken kernel.  For example, if the man:ata[4] driver is removed from the kernel configuration file, a system using `ATA` disk drivers may not boot.  When in doubt, just leave support in the kernel."
msgstr "장치 또는 옵션에 대한 지원을 제거하면 커널이 손상되기 쉽습니다.  예를 들어 커널 구성 파일에서 man:ata[4] 드라이버가 제거되면 `ATA` 디스크 드라이버를 사용하는 시스템이 부팅되지 않을 수 있습니다.  확실하지 않은 경우 커널에 지원을 남겨두세요."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:211
msgid "In addition to the brief descriptions provided in this file, additional descriptions are contained in [.filename]#NOTES#, which can be found in the same directory as [.filename]#GENERIC# for that architecture.  For architecture independent options, refer to [.filename]#/usr/src/sys/conf/NOTES#."
msgstr "이 파일에 제공된 간략한 설명 외에도 해당 아키텍처의 [.filename]#GENERIC#과 같은 디렉터리에서 찾을 수 있는 [.filename]#NOTES#에 추가 설명이 포함되어 있습니다.  아키텍처 독립적인 옵션은 [.filename]#/usr/src/sys/conf/NOTES#를 참조하세요."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:215
msgid "When finished customizing the kernel configuration file, save a backup copy to a location outside of [.filename]#/usr/src#."
msgstr "커널 구성 파일 사용자 지정이 완료되면 백업 복사본을 [.filename]#/usr/src# 외부 위치에 저장합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:217
msgid "Alternately, keep the kernel configuration file elsewhere and create a symbolic link to the file:"
msgstr "또는 커널 구성 파일을 다른 곳에 보관하고 파일에 대한 심볼릭 링크를 생성하세요:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:224
#, no-wrap
msgid ""
"# cd /usr/src/sys/amd64/conf\n"
"# mkdir /root/kernels\n"
"# cp GENERIC /root/kernels/MYKERNEL\n"
"# ln -s /root/kernels/MYKERNEL\n"
msgstr ""
"# cd /usr/src/sys/amd64/conf\n"
"# mkdir /root/kernels\n"
"# cp GENERIC /root/kernels/MYKERNEL\n"
"# ln -s /root/kernels/MYKERNEL\n"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:231
msgid ""
"An `include` directive is available for use in configuration files.  This allows another configuration file to be included in the current one, making it easy to maintain small changes relative to an existing file.  If only a small number of additional options or drivers are required, this allows a "
"delta to be maintained with respect to [.filename]#GENERIC#, as seen in this example:"
msgstr ""
"`include` 지시어를 설정파일에 사용할 수 있습니다.  이렇게 하면 다른 설정 파일을 현재 설정 파일에 포함시킬 수 있으므로 기존 파일과 관련된 작은 변경 사항을 쉽게 유지할 수 있습니다.  소수의 추가 옵션이나 드라이버만 필요한 경우 이 예제에서 볼 수 있듯이 [.filename]#GENERIC#에 대한 델타를 유지 관리할 수 있습"
"니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:236
#, no-wrap
msgid ""
"include GENERIC\n"
"ident MYKERNEL\n"
msgstr ""
"include GENERIC\n"
"ident MYKERNEL\n"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:241
#, no-wrap
msgid ""
"options         IPFIREWALL\n"
"options         DUMMYNET\n"
"options         IPFIREWALL_DEFAULT_TO_ACCEPT\n"
"options         IPDIVERT\n"
msgstr ""
"options         IPFIREWALL\n"
"options         DUMMYNET\n"
"options         IPFIREWALL_DEFAULT_TO_ACCEPT\n"
"options         IPDIVERT\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:246
msgid ""
"Using this method, the local configuration file expresses local differences from a [.filename]#GENERIC# kernel.  As upgrades are performed, new features added to [.filename]#GENERIC# will also be added to the local kernel unless they are specifically prevented using `nooptions` or `nodevice`.  A "
"comprehensive list of configuration directives and their descriptions may be found in man:config[5]."
msgstr ""
"이 방법을 사용하면 로컬 구성 파일은 [.filename]#GENERIC# 커널과의 로컬 차이점을 표현합니다.  업그레이드가 수행될 때, `nooptions` 또는 `nodevice`를 사용하여 특별히 차단하지 않는 한, [.filename]#GENERIC#에 추가된 새로운 기능도 로컬 커널에 추가됩니다.  구성 지시어의 포괄적인 목록과 설명은 man:config[5]에"
"서 찾을 수 있습니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:250
msgid "To build a file which contains all available options, run the following command as `root`:"
msgstr "사용 가능한 모든 옵션이 포함된 파일을 빌드하려면 다음 명령을 `root`로 실행합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:254
#, no-wrap
msgid "# cd /usr/src/sys/arch/conf && make LINT\n"
msgstr "# cd /usr/src/sys/arch/conf && make LINT\n"

#. type: Title ==
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:259
#, no-wrap
msgid "Building and Installing a Custom Kernel"
msgstr "커스텀 커널 빌드 및 설치하기"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:262
msgid "Once the edits to the custom configuration file have been saved, the source code for the kernel can be compiled using the following steps:"
msgstr "사용자 지정 구성 파일에 대한 편집 내용을 저장한 후에는 다음 단계에 따라 커널의 소스 코드를 컴파일할 수 있습니다:"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:266
#, no-wrap
msgid "*Procedure: Building a Kernel*\n"
msgstr "*절차: 커널 빌드*\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:268
msgid "Change to this directory:"
msgstr "이 디렉토리로 변경합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:272
#, no-wrap
msgid "# cd /usr/src\n"
msgstr "# cd /usr/src\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:275
msgid "Compile the new kernel by specifying the name of the custom kernel configuration file:"
msgstr "사용자 지정 커널 구성 파일의 이름을 지정하여 새 커널을 컴파일합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:279
#, no-wrap
msgid "# make buildkernel KERNCONF=MYKERNEL\n"
msgstr "# make buildkernel KERNCONF=MYKERNEL\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:282
msgid "Install the new kernel associated with the specified kernel configuration file. This command will copy the new kernel to [.filename]#/boot/kernel/kernel# and save the old kernel to [.filename]#/boot/kernel.old/kernel#:"
msgstr "지정된 커널 구성 파일과 연결된 새 커널을 설치합니다. 이 명령은 새 커널을 [.filename]#/boot/kernel/kernel#에 복사하고 이전 커널을 [.filename]#/boot/kernel.old/kernel#에 저장합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:286
#, no-wrap
msgid "# make installkernel KERNCONF=MYKERNEL\n"
msgstr "# make installkernel KERNCONF=MYKERNEL\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:289
msgid "Shutdown the system and reboot into the new kernel. If something goes wrong, refer to <<kernelconfig-noboot, The kernel does not boot>>."
msgstr "시스템을 종료하고 새 커널로 재부팅합니다. 문제가 발생하면  <<kernelconfig-noboot, The kernel does not boot>>을 참조하세요."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:293
msgid "By default, when a custom kernel is compiled, all kernel modules are rebuilt.  To update a kernel faster or to build only custom modules, edit [.filename]#/etc/make.conf# before starting to build the kernel."
msgstr "기본적으로 커스텀 커널을 컴파일하면 모든 커널 모듈이 다시 빌드됩니다.  커널을 더 빠르게 업데이트하거나 커스텀 모듈만 빌드하려면 커널 빌드를 시작하기 전에 [.filename]#/etc/make.conf#을 편집하세요."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:295
msgid "For example, this variable specifies the list of modules to build instead of using the default of building all modules:"
msgstr "예를 들어 다음 변수는 모든 모듈을 빌드하는 기본값을 사용하는 대신, 빌드할 모듈 목록을 지정합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:299
#, no-wrap
msgid "MODULES_OVERRIDE = linux acpi\n"
msgstr "MODULES_OVERRIDE = linux acpi\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:302
msgid "Alternately, this variable lists which modules to exclude from the build process:"
msgstr "또는 다음 변수는 빌드 프로세스에서 제외할 모듈을 나열합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:306
#, no-wrap
msgid "WITHOUT_MODULES = linux acpi sound\n"
msgstr "WITHOUT_MODULES = linux acpi sound\n"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:310
msgid "Additional variables are available.  Refer to man:make.conf[5] for details."
msgstr "추가 변수를 사용할 수도 있습니다.  자세한 내용은 man:make.conf[5]를 참조하세요."

#. type: Title ==
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:312
#, no-wrap
msgid "If Something Goes Wrong"
msgstr "문제가 발생했을 때"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:315
msgid "There are four categories of trouble that can occur when building a custom kernel:"
msgstr "사용자 정의 커널을 빌드할 때 발생할 수 있는 문제에는 네 가지 범주가 있습니다:"

#. type: Labeled list
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:316
#, no-wrap
msgid "`config` fails"
msgstr "`config` 실패"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:319
msgid "If `config` fails, it will print the line number that is incorrect.  As an example, for the following message, make sure that line 17 is typed correctly by comparing it to [.filename]#GENERIC# or [.filename]#NOTES#:"
msgstr "`config`가 실패하면 잘못된 줄 번호가 인쇄됩니다.  예를 들어 다음 메시지의 경우 17번 줄을 [.filename]#GENERIC# 또는 [.filename]#NOTES#와 비교하여 올바르게 입력되었는지 확인합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:323
#, no-wrap
msgid "config: line 17: syntax error\n"
msgstr "config: line 17: syntax error\n"

#. type: Labeled list
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:325
#, no-wrap
msgid "`make` fails"
msgstr "`make` 실패"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:328
msgid "If `make` fails, it is usually due to an error in the kernel configuration file which is not severe enough for `config` to catch.  Review the configuration, and if the problem is not apparent, send an email to the {freebsd-questions} which contains the kernel configuration file."
msgstr "`make`가 실패하는 경우 일반적으로 커널 구성 파일에 `config`가 포착할 수 있을 만큼 심각하지 않은 오류가 있기 때문일 수 있습니다.  구성을 검토하고 문제가 명확하지 않은 경우 커널 구성 파일이 포함된 {freebsd-questions}으로 이메일을 보내세요."

#. type: Labeled list
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:330
#, no-wrap
msgid "The kernel does not boot"
msgstr "커널이 부팅되지 않음"

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:335
msgid ""
"If the new kernel does not boot or fails to recognize devices, do not panic! Fortunately, FreeBSD has an excellent mechanism for recovering from incompatible kernels.  Simply choose the kernel to boot from at the FreeBSD boot loader.  This can be accessed when the system boot menu appears by selecting "
"the \"Escape to a loader prompt\" option.  At the prompt, type `boot _kernel.old_`, or the name of any other kernel that is known to boot properly."
msgstr ""
"새 커널이 부팅되지 않거나 장치를 인식하지 못하더라도 당황하지 마세요! 다행히도 FreeBSD에는 호환되지 않는 커널에서 복구할 수 있는 훌륭한 메커니즘이 있습니다.  FreeBSD 부트 로더에서 부팅할 커널을 선택하기만 하면 됩니다.  시스템 부팅 메뉴가 나타날 때 “Escape to a loader prompt”옵션을 선택하면 이 메뉴에 액"
"세스할 수 있습니다.  프롬프트에서 `boot _kernel.old_` 또는 제대로 부팅되는 것으로 알려진 다른 커널의 이름을 입력합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:339
msgid "After booting with a good kernel, check over the configuration file and try to build it again.  One helpful resource is [.filename]#/var/log/messages# which records the kernel messages from every successful boot.  Also, man:dmesg[8] will print the kernel messages from the current boot."
msgstr "정상 커널로 부팅한 후 구성 파일을 확인하고 다시 빌드를 시도하세요.  부팅에 성공할 때마다 커널 메시지를 기록하는 [.filename]#/var/log/messages#가 유용한 리소스 중 하나입니다.  또한 man:dmesg[8]는 현재 부팅의 커널 메시지를 인쇄합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:345
msgid ""
"When troubleshooting a kernel make sure to keep a copy of a kernel that is known to work, such as [.filename]#GENERIC#.  This is important because every time a new kernel is installed, [.filename]#kernel.old# is overwritten with the last installed kernel, which may or may not be bootable.  As soon as "
"possible, move the working kernel by renaming the directory containing the good kernel:"
msgstr ""
"커널 문제를 해결할 때는 [.filename]#GENERIC#과 같이 작동하는 것으로 알려진 커널의 사본을 보관하세요.  새 커널이 설치될 때마다 [.filename]#kernel.old#는 마지막으로 설치된 커널로 덮어쓰기 때문에 부팅이 가능하거나 불가능할 수 있으므로 이 점이 중요합니다.  가능한 한 빨리 정상 커널이 포함된 디렉터리의 이름"
"을 변경하여 작업 중인 커널을 이동하세요:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:350
#, no-wrap
msgid ""
"# mv /boot/kernel /boot/kernel.bad\n"
"# mv /boot/kernel.good /boot/kernel\n"
msgstr ""
"# mv /boot/kernel /boot/kernel.bad\n"
"# mv /boot/kernel.good /boot/kernel\n"

#. type: Labeled list
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:354
#, no-wrap
msgid "The kernel works, but man:ps[1] does not"
msgstr "커널은 작동하지만 man:ps[1]가 작동하지 않습니다"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/kernelconfig/_index.adoc:357
msgid ""
"If the kernel version differs from the one that the system utilities have been built with, for example, a kernel built from -CURRENT sources is installed on a -RELEASE system, many system status commands like man:ps[1] and man:vmstat[8] will not work.  To fix this, crossref:cutting-edge[makeworld,"
"recompile and install a world] built with the same version of the source tree as the kernel.  It is never a good idea to use a different version of the kernel than the rest of the operating system."
msgstr ""
"커널 버전이 시스템 유틸리티가 빌드된 버전과 다른 경우(예: -CURRENT 소스로 빌드된 커널이 -RELEASE 시스템에 설치되어 있는 경우) man:ps[1] 및 man:vmstat[8] 같은 많은 시스템 상태 명령이 작동하지 않습니다.  이 문제를 해결하려면 커널과 동일한 버전의 소스 트리로 구축된 crossref:cutting-edge[makeworld,"
"recompile and install a world]를 사용하십시오.  운영 체제의 다른 버전과 다른 버전의 커널을 사용하는 것은 결코 좋은 생각이 아닙니다."
