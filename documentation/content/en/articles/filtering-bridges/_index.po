# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR The FreeBSD Project
# This file is distributed under the same license as the FreeBSD Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FreeBSD Documentation VERSION\n"
"POT-Creation-Date: 2022-02-01 09:21-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: description
#: documentation/content/en/articles/filtering-bridges/_index.adoc:1
#, no-wrap
msgid "Configuring firewalls and filtering on FreeBSD hosts acting as bridges rather than routers"
msgstr ""

#. type: Title =
#: documentation/content/en/articles/filtering-bridges/_index.adoc:1
#: documentation/content/en/articles/filtering-bridges/_index.adoc:11
#, no-wrap
msgid "Filtering Bridges"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:44
msgid "Abstract"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:48
msgid ""
"Often it is useful to divide one physical network (like an Ethernet) into "
"two separate segments without having to create subnets, and use a router to "
"link them together.  The device that connects the two networks in this way "
"is called a bridge.  A FreeBSD system with two network interfaces is enough "
"in order to act as a bridge."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:51
msgid ""
"A bridge works by scanning the addresses of MAC level (Ethernet addresses) "
"of the devices connected to each of its network interfaces and then "
"forwarding the traffic between the two networks only if the source and the "
"destination are on different segments.  Under many points of view a bridge "
"is similar to an Ethernet switch with only two ports."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:53
msgid "'''"
msgstr ""

#. type: Title ==
#: documentation/content/en/articles/filtering-bridges/_index.adoc:57
#, no-wrap
msgid "Why use a filtering bridge?"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:62
msgid ""
"More and more frequently, thanks to the lowering costs of broad band "
"Internet connections (xDSL) and also because of the reduction of available "
"IPv4 addresses, many companies are connected to the Internet 24 hours on 24 "
"and with few (sometimes not even a power of 2) IP addresses.  In these "
"situations it is often desirable to have a firewall that filters incoming "
"and outgoing traffic from and towards Internet, but a packet filtering "
"solution based on router may not be applicable, either due to subnetting "
"issues, the router is owned by the connectivity supplier (ISP), or because "
"it does not support such functionalities.  In these scenarios the use of a "
"filtering bridge is highly advised."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:64
msgid ""
"A bridge-based firewall can be configured and inserted between the xDSL "
"router and your Ethernet hub/switch without any IP numbering issues."
msgstr ""

#. type: Title ==
#: documentation/content/en/articles/filtering-bridges/_index.adoc:66
#, no-wrap
msgid "How to Install"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:71
msgid ""
"Adding bridge functionalities to a FreeBSD system is not difficult.  Since "
"4.5 release it is possible to load such functionalities as modules instead "
"of having to rebuild the kernel, simplifying the procedure a great deal.  In "
"the following subsections I will explain both installation ways."
msgstr ""

#. type: delimited block = 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:76
msgid ""
"_Do not_ follow both instructions: a procedure _excludes_ the other one.  "
"Select the best choice according to your needs and abilities."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:82
msgid ""
"Before going on, be sure to have at least two Ethernet cards that support "
"the promiscuous mode for both reception and transmission, since they must be "
"able to send Ethernet packets with any address, not just their own.  "
"Moreover, to have a good throughput, the cards should be PCI bus mastering "
"cards.  The best choices are still the Intel EtherExpress(TM) Pro, followed "
"by the 3Com(R) 3c9xx series.  To simplify the firewall configuration it may "
"be useful to have two cards of different manufacturers (using different "
"drivers) in order to distinguish clearly which interface is connected to the "
"router and which to the inner network."
msgstr ""

#. type: Title ===
#: documentation/content/en/articles/filtering-bridges/_index.adoc:84
#, no-wrap
msgid "Kernel Configuration"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:88
msgid ""
"So you have decided to use the older but well tested installation method.  "
"To begin, you have to add the following rows to your kernel configuration "
"file:"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:94
#, no-wrap
msgid ""
"options BRIDGE\n"
"options IPFIREWALL\n"
"options IPFIREWALL_VERBOSE\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:97
msgid ""
"The first line is to compile the bridge support, the second one is the "
"firewall and the third one is the logging functions of the firewall."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:100
msgid ""
"Now it is necessary to build and install the new kernel.  You may find "
"detailed instructions in the extref:{handbook}[Building and Installing a "
"Custom Kernel, kernelconfig-building] section of the FreeBSD Handbook."
msgstr ""

#. type: Title ===
#: documentation/content/en/articles/filtering-bridges/_index.adoc:102
#, no-wrap
msgid "Modules Loading"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:105
msgid ""
"If you have chosen to use the new and simpler installation method, the only "
"thing to do now is add the following row to [.filename]#/boot/loader.conf#:"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:109
#, no-wrap
msgid "bridge_load=\"YES\"\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:113
msgid ""
"In this way, during the system startup, the [.filename]#bridge.ko# module "
"will be loaded together with the kernel.  It is not required to add a "
"similar row for the [.filename]#ipfw.ko# module, since it will be loaded "
"automatically after the execution of the steps in the following section."
msgstr ""

#. type: Title ==
#: documentation/content/en/articles/filtering-bridges/_index.adoc:115
#, no-wrap
msgid "Final Preparation"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:121
msgid ""
"Before rebooting in order to load the new kernel or the required modules "
"(according to the previously chosen installation method), you have to make "
"some changes to the [.filename]#/etc/rc.conf# configuration file.  The "
"default rule of the firewall is to reject all IP packets.  Initially we will "
"set up an `open` firewall, in order to verify its operation without any "
"issue related to packet filtering (in case you are going to execute this "
"procedure remotely, such configuration will avoid you to remain isolated "
"from the network).  Put these lines in [.filename]#/etc/rc.conf#:"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:128
#, no-wrap
msgid ""
"firewall_enable=\"YES\"\n"
"firewall_type=\"open\"\n"
"firewall_quiet=\"YES\"\n"
"firewall_logging=\"YES\"\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:131
msgid ""
"The first row will enable the firewall (and will load the module [."
"filename]#ipfw.ko# if it is not compiled in the kernel), the second one to "
"set up it in `open` mode (as explained in [.filename]#/etc/rc.firewall#), "
"the third one to not show rules loading and the fourth one to enable logging "
"support."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:137
msgid ""
"About the configuration of the network interfaces, the most used way is to "
"assign an IP to only one of the network cards, but the bridge will work "
"equally even if both interfaces or none has a configured IP.  In the last "
"case (IP-less) the bridge machine will be still more hidden, as inaccessible "
"from the network: to configure it, you have to login from console or through "
"a third network interface separated from the bridge.  Sometimes, during the "
"system startup, some programs require network access, say for domain "
"resolution: in this case it is necessary to assign an IP to the external "
"interface (the one connected to Internet, where DNS server resides), since "
"the bridge will be activated at the end of the startup procedure.  It means "
"that the [.filename]#fxp0# interface (in our case) must be mentioned in the "
"ifconfig section of the [.filename]#/etc/rc.conf# file, while the [."
"filename]#xl0# is not.  Assigning an IP to both the network cards does not "
"make much sense, unless, during the start procedure, applications should "
"access to services on both Ethernet segments."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:144
msgid ""
"There is another important thing to know.  When running IP over Ethernet, "
"there are actually two Ethernet protocols in use: one is IP, the other is "
"ARP.  ARP does the conversion of the IP address of a host into its Ethernet "
"address (MAC layer).  In order to allow the communication between two hosts "
"separated by the bridge, it is necessary that the bridge will forward ARP "
"packets.  Such protocol is not included in the IP layer, since it exists "
"only with IP over Ethernet.  The FreeBSD firewall filters exclusively on the "
"IP layer and therefore all non-IP packets (ARP included) will be forwarded "
"without being filtered, even if the firewall is configured to not permit "
"anything."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:146
msgid ""
"Now it is time to reboot the system and use it as before: there will be some "
"new messages about the bridge and the firewall, but the bridge will not be "
"activated and the firewall, being in `open` mode, will not avoid any "
"operations."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:148
msgid ""
"If there are any problems, you should sort them out now before proceeding."
msgstr ""

#. type: Title ==
#: documentation/content/en/articles/filtering-bridges/_index.adoc:150
#, no-wrap
msgid "Enabling the Bridge"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:153
msgid ""
"At this point, to enable the bridge, you have to execute the following "
"commands (having the shrewdness to replace the names of the two network "
"interfaces [.filename]#fxp0# and [.filename]#xl0# with your own ones):"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:159
#, no-wrap
msgid ""
"# sysctl net.link.ether.bridge.config=fxp0:0,xl0:0\n"
"# sysctl net.link.ether.bridge.ipfw=1\n"
"# sysctl net.link.ether.bridge.enable=1\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:162
msgid ""
"The first row specifies which interfaces should be activated by the bridge, "
"the second one will enable the firewall on the bridge and finally the third "
"one will enable the bridge."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:165
msgid ""
"At this point you should be able to insert the machine between two sets of "
"hosts without compromising any communication abilities between them.  If so, "
"the next step is to add the `net.link.ether.bridge._[blah]_=_[blah]_` "
"portions of these rows to the [.filename]#/etc/sysctl.conf# file, in order "
"to have them execute at startup."
msgstr ""

#. type: Title ==
#: documentation/content/en/articles/filtering-bridges/_index.adoc:167
#, no-wrap
msgid "Configuring The Firewall"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:177
msgid ""
"Now it is time to create your own file with custom firewall rules, in order "
"to secure the inside network.  There will be some complication in doing this "
"because not all of the firewall functionalities are available on bridged "
"packets.  Furthermore, there is a difference between the packets that are in "
"the process of being forwarded and packets that are being received by the "
"local machine.  In general, incoming packets are run through the firewall "
"only once, not twice as is normally the case; in fact they are filtered only "
"upon receipt, so rules that use `out` or `xmit` will never match.  "
"Personally, I use `in via` which is an older syntax, but one that has a "
"sense when you read it.  Another limitation is that you are restricted to "
"use only `pass` or `drop` commands for packets filtered by a bridge.  "
"Sophisticated things like `divert`, `forward` or `reject` are not "
"available.  Such options can still be used, but only on traffic to or from "
"the bridge machine itself (if it has an IP address)."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:185
msgid ""
"New in FreeBSD 4.0, is the concept of stateful filtering.  This is a big "
"improvement for UDP traffic, which typically is a request going out, "
"followed shortly thereafter by a response with the exact same set of IP "
"addresses and port numbers (but with source and destination reversed, of "
"course).  For firewalls that have no statekeeping, there is almost no way to "
"deal with this sort of traffic as a single session.  But with a firewall "
"that can \"remember\" an outgoing UDP packet and, for the next few minutes, "
"allow a response, handling UDP services is trivial.  The following example "
"shows how to do it.  It is possible to do the same thing with TCP packets.  "
"This allows you to avoid some denial of service attacks and other nasty "
"tricks, but it also typically makes your state table grow quickly in size."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:189
msgid ""
"Let's look at an example setup.  Note first that at the top of [.filename]#/"
"etc/rc.firewall# there are already standard rules for the loopback interface "
"[.filename]#lo0#, so we should not have to care for them anymore.  Custom "
"rules should be put in a separate file (say [.filename]#/etc/rc.firewall."
"local#) and loaded at system startup, by modifying the row of [.filename]#/"
"etc/rc.conf# where we defined the `open` firewall:"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:193
#, no-wrap
msgid "firewall_type=\"/etc/rc.firewall.local\"\n"
msgstr ""

#. type: delimited block = 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:198
msgid ""
"You have to specify the _full_ path, otherwise it will not be loaded with "
"the risk to remain isolated from the network."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:201
msgid ""
"For our example imagine to have the [.filename]#fxp0# interface connected "
"towards the outside (Internet) and the [.filename]#xl0# towards the inside "
"(LAN). The bridge machine has the IP `1.2.3.4` (it is not possible that your "
"ISP can give you an address quite like this, but for our example it is good)."
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:206
#, no-wrap
msgid ""
"# Things that we have kept state on before get to go through in a hurry\n"
"add check-state\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:211
#, no-wrap
msgid ""
"# Throw away RFC 1918 networks\n"
"add drop all from 10.0.0.0/8 to any in via fxp0\n"
"add drop all from 172.16.0.0/12 to any in via fxp0\n"
"add drop all from 192.168.0.0/16 to any in via fxp0\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:217
#, no-wrap
msgid ""
"# Allow the bridge machine to say anything it wants\n"
"# (if the machine is IP-less do not include these rows)\n"
"add pass tcp from 1.2.3.4 to any setup keep-state\n"
"add pass udp from 1.2.3.4 to any keep-state\n"
"add pass ip from 1.2.3.4 to any\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:222
#, no-wrap
msgid ""
"# Allow the inside hosts to say anything they want\n"
"add pass tcp from any to any in via xl0 setup keep-state\n"
"add pass udp from any to any in via xl0 keep-state\n"
"add pass ip from any to any in via xl0\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:234
#, no-wrap
msgid ""
"# TCP section\n"
"# Allow SSH\n"
"add pass tcp from any to any 22 in via fxp0 setup keep-state\n"
"# Allow SMTP only towards the mail server\n"
"add pass tcp from any to relay 25 in via fxp0 setup keep-state\n"
"# Allow zone transfers only by the secondary name server [dns2.nic.it]\n"
"add pass tcp from 193.205.245.8 to ns 53 in via fxp0 setup keep-state\n"
"# Pass ident probes.  It is better than waiting for them to timeout\n"
"add pass tcp from any to any 113 in via fxp0 setup keep-state\n"
"# Pass the \"quarantine\" range\n"
"add pass tcp from any to any 49152-65535 in via fxp0 setup keep-state\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:240
#, no-wrap
msgid ""
"# UDP section\n"
"# Allow DNS only towards the name server\n"
"add pass udp from any to ns 53 in via fxp0 keep-state\n"
"# Pass the \"quarantine\" range\n"
"add pass udp from any to any 49152-65535 in via fxp0 keep-state\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:247
#, no-wrap
msgid ""
"# ICMP section\n"
"# Pass 'ping'\n"
"add pass icmp from any to any icmptypes 8 keep-state\n"
"# Pass error messages generated by 'traceroute'\n"
"add pass icmp from any to any icmptypes 3\n"
"add pass icmp from any to any icmptypes 11\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:250
#, no-wrap
msgid ""
"# Everything else is suspect\n"
"add drop log all from any to any\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:254
msgid ""
"Those of you who have set up firewalls before may notice some things "
"missing.  In particular, there are no anti-spoofing rules, in fact we did "
"_not_ add:"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/articles/filtering-bridges/_index.adoc:258
#, no-wrap
msgid "add deny all from 1.2.3.4/8 to any in via fxp0\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:264
msgid ""
"That is, drop packets that are coming in from the outside claiming to be "
"from our network.  This is something that you would commonly do to be sure "
"that someone does not try to evade the packet filter, by generating "
"nefarious packets that look like they are from the inside.  The problem with "
"that is that there is _at least_ one host on the outside interface that you "
"do not want to ignore: the router.  But usually, the ISP anti-spoofs at "
"their router, so we do not need to bother that much."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:267
msgid ""
"The last rule seems to be an exact duplicate of the default rule, that is, "
"do not let anything pass that is not specifically allowed.  But there is a "
"difference: all suspected traffic will be logged."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:273
msgid ""
"There are two rules for passing SMTP and DNS traffic towards the mail server "
"and the name server, if you have them.  Obviously the whole rule set should "
"be flavored to personal taste, this is only a specific example (rule format "
"is described accurately in the man:ipfw[8] man page).  Note that in order "
"for \"relay\" and \"ns\" to work, name service lookups must work _before_ "
"the bridge is enabled.  This is an example of making sure that you set the "
"IP on the correct network card.  Alternatively it is possible to specify the "
"IP address instead of the host name (required if the machine is IP-less)."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:278
msgid ""
"People that are used to setting up firewalls are probably also used to "
"either having a `reset` or a `forward` rule for ident packets (TCP port "
"113).  Unfortunately, this is not an applicable option with the bridge, so "
"the best thing is to simply pass them to their destination.  As long as that "
"destination machine is not running an ident daemon, this is relatively "
"harmless.  The alternative is dropping connections on port 113, which "
"creates some problems with services like IRC (the ident probe must timeout)."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:285
msgid ""
"The only other thing that is a little weird that you may have noticed is "
"that there is a rule to let the bridge machine speak, and another for "
"internal hosts.  Remember that this is because the two sets of traffic will "
"take different paths through the kernel and into the packet filter.  The "
"inside net will go through the bridge, while the local machine will use the "
"normal IP stack to speak.  Thus the two rules to handle the different "
"cases.  The `in via fxp0` rules work for both paths.  In general, if you use "
"`in via` rules throughout the filter, you will need to make an exception for "
"locally generated packets, because they did not come in via any of our "
"interfaces."
msgstr ""

#. type: Title ==
#: documentation/content/en/articles/filtering-bridges/_index.adoc:287
#, no-wrap
msgid "Contributors"
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:291
msgid ""
"Many parts of this article have been taken, updated and adapted from an old "
"text about bridging, edited by Nick Sayer.  A pair of inspirations are due "
"to an introduction on bridging by Steve Peterson."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:293
msgid ""
"A big thanks to Luigi Rizzo for the implementation of the bridge code in "
"FreeBSD and for the time he has dedicated to me answering all of my related "
"questions."
msgstr ""

#. type: Plain text
#: documentation/content/en/articles/filtering-bridges/_index.adoc:294
msgid ""
"A thanks goes out also to Tom Rhodes who looked over my job of translation "
"from Italian (the original language of this article) into English."
msgstr ""
