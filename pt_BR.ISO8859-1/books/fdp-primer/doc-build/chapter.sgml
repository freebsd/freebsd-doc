<!-- Copyright (c) 1999 Neil Blakey-Milner, All rights reserved.

     Redistribution and use in source (SGML DocBook) and 'compiled' forms
     (SGML HTML, PDF, PostScript, RTF and so forth) with or without
     modification, are permitted provided that the following conditions
     are met:

      1.  Redistributions of source code (SGML DocBook) must retain the above
	 copyright notice, this list of conditions and the following
	 disclaimer as the first lines of this file unmodified.

      2.  Redistributions in compiled form (transformed to other DTDs,
	 converted to PDF, PostScript, RTF and other formats) must reproduce
	 the above copyright notice, this list of conditions and the
	 following disclaimer in the documentation and/or other materials
	 provided with the distribution.

     THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     DISCLAIMED.  IN NO EVENT SHALL NIK CLAYTON BE LIABLE FOR ANY DIRECT,
     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
     ANY WAY OUT OF THE USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE
     POSSIBILITY OF SUCH DAMAGE.

     The FreeBSD Documentation Project
     The FreeBSD Brazilian Portuguese Documentation Project
 
     $FreeBSD$

     Original revision: r38845

-->

<chapter id="doc-build">
  <title>O processo de constru&ccedil;&atilde;o da 
    documenta&ccedil;&atilde;o</title>

  <para>A principal finalidade desse cap&iacute;tulo &eacute; explicar 
    claramente <emphasis>como o processo de cria&ccedil;&atilde;o da 
    documenta&ccedil;&atilde;o &eacute; organizado</emphasis>, e 
    <emphasis>como fazer modifica&ccedil;&otilde;es a este 
    processo</emphasis>.</para>

  <para>Depois de finalizar a leitura deste cap&iacute;tulo 
    voc&ecirc; dever&aacute;:</para>

  <itemizedlist>
    <listitem>
      <para>Saber o que voc&ecirc; precisa para compilar a 
	documenta&ccedil;&atilde;o mantida pelo FDP, em 
	adi&ccedil;&atilde;o ao que foi mencionado no 
	<link linkend="tools">cap&iacute;tulo Ferramentas SGML</link>.
	</para>
    </listitem>

    <listitem>
      <para>Ser capaz de ler e entender as instru&ccedil;&otilde;es do
	<application>make</application> que est&atilde;o presentes 
	em cada documento <filename>Makefile</filename>, assim como 
	ter uma vis&atilde;o geral do 
	<filename>doc.project.mk</filename>.</para>
    </listitem>

    <listitem>
      <para>Ser capaz de customizar o processo de 
	compila&ccedil;&atilde;o usando vari&aacute;veis e alvos do 
	<application>make</application>.</para>
    </listitem>
  </itemizedlist>

  <sect1>
    <title>Ferramentas para constru&ccedil;&atilde;o da 
      documenta&ccedil;&atilde;o do FreeBSD</title>

    <para>Aqui est&atilde;o suas ferramentas.  Use-as de todas as
      formas que puder.</para>

    <itemizedlist>
      <listitem>
	<para>A primeira ferramenta que voc&ecirc; precisar&aacute; 
	  &eacute; o <application>make</application>, mais 
	  especificamente o <application>Berkeley Make</application>.
	  </para>
      </listitem>

      <listitem>
	<para>A constru&ccedil;&atilde;o de pacotes no FreeBSD 
	  &eacute; executada pelo 
	  <application>pkg_create</application>.  Se voc&ecirc; 
	  n&atilde;o est&aacute; utilizando o FreeBSD, voc&ecirc; 
	  ter&aacute; que viver sem o uso de pacotes, ou ent&atilde;o
	  ter&aacute; que compilar o c&oacute;digo fonte voc&ecirc; 
	  mesmo.</para>
      </listitem>

      <listitem>
	<para>O <application>gzip</application> &eacute; 
	  necess&aacute;rio para criar vers&otilde;es compactadas do 
	  documento.  O compressor <application>bzip2</application> e
	  os arquivos <application>zip</application> tamb&eacute;m 
	  s&atilde;o suportados.  O <application>tar</application> 
	  &eacute; suportado, e a constru&ccedil;&atilde;o de
	  pacotes necessita dele.</para>
      </listitem>

      <listitem>
	<para>O <application>install</application> &eacute; o 
	  m&eacute;todo padr&atilde;o para instalar a 
	  documenta&ccedil;&atilde;o.  Entretanto, existem 
	  alternativas.</para>
      </listitem>
    </itemizedlist>

    <note>
      <para>&Eacute; improv&aacute;vel que voc&ecirc; tenha qualquer 
	problema em localizar esses dois &uacute;ltimos, eles est&atilde;o 
	sendo mencionados apenas para que a listagem fique completa.
	</para>
    </note>
  </sect1>

  <sect1>
    <title>Entendendo <filename>Makefile</filename>s na &aacute;rvore da 
      documenta&ccedil;&atilde;o</title>

    <para>H&aacute; tr&ecirc;s tipos principais de 
      <filename>Makefile</filename>s na &aacute;rvore do projeto de 
      document&ccedil;&atilde;o do FreeBSD.</para>

    <itemizedlist>
      <listitem>
	<para>Os <link linkend="sub-make">
	<filename>Makefile</filename>s de subdiret&oacute;rio</link> 
	simplesmente passam comandos para os diret&oacute;rios 
	abaixo dele.</para>
      </listitem>

      <listitem>
	<para>Os <link linkend="doc-make">
	  <filename>Makefile</filename>s de 
	  documenta&ccedil;&atilde;o</link> descrevem o(s) 
	  documento(s) que deve(m) ser produzido(s) a partir deste 
	  diret&oacute;rio.</para>
      </listitem>

      <listitem>
	<para>Os <link linkend="make-includes">
	  <application>Make</application> includes</link> s&atilde;o 
	  os respons&aacute;veis pela produ&ccedil;&atilde;o do 
	  documento, e geralmente possuem o nome no formato 
	  <filename>doc.<replaceable>xxx</replaceable>.mk</filename>.
	  </para>
      </listitem>
    </itemizedlist>

    <sect2 id="sub-make">
      <title><filename>Makefile</filename>s de Subdiret&oacute;rios</title>

      <para>Estes <filename>Makefile</filename>s geralmente tem a 
	forma:</para>

      <programlisting>SUBDIR =articles
SUBDIR+=books

COMPAT_SYMLINK = en

DOC_PREFIX?= ${.CURDIR}/..
.include "${DOC_PREFIX}/share/mk/doc.project.mk"</programlisting>

      <para>Resumidamente, as primeiras quatro 
	linhas n&atilde;o vazias definem as vari&aacute;veis do
	<application>make</application>, <makevar>SUBDIR</makevar>, 
	<makevar>COMPAT_SYMLINK</makevar>, e 
	<makevar>DOC_PREFIX</makevar>.</para>

      <para>A primeira declara&ccedil;&atilde;o da vari&aacute;vel  
	<makevar>SUBDIR</makevar>, tanto quanto a
	declara&ccedil;&atilde;o da vari&aacute;vel 
	<makevar>COMPAT_SYMLINK</makevar>, 
	mostra como atribuir um valor a uma vari&aacute;vel,
	sobrescrevendo qualquer valor anterior que a mesma
	contenha.</para>

      <para>A segunda declara&ccedil;&atilde;o da vari&aacute;vel
	<makevar>SUBDIR</makevar> mostra como um valor &eacute; 
	adicionado ao valor atual de uma vari&aacute;vel.  A 
	vari&aacute;vel <makevar>SUBDIR</makevar> agora &eacute;
	composta por <literal>articles books</literal>.</para>

      <para>A declara&ccedil;&atilde;o do
	<makevar>DOC_PREFIX</makevar> mostra como um valor &eacute; 
	atribu&iacute;do para uma vari&aacute;vel, mas somente se 
	ela ainda n&atilde;o estiver definida.  Isto &eacute; 
	&uacute;til se o <makevar>DOC_PREFIX</makevar> n&atilde;o 
	for onde este <filename>Makefile</filename> pensa que 
	&eacute; - o usu&aacute;rio pode cancelar e fornecer 
	o valor correto.</para>

      <para>Agora o que tudo isso significa?  O 
	<makevar>SUBDIR</makevar> lista quais subdiret&oacute;rios 
	abaixo do atual devem ser inclu&iacute;dos no processo de 
	compila&ccedil;&atilde;o durante a gera&ccedil;&atilde;o 
	do documento.</para>

      <para>O <makevar>COMPAT_SYMLINK</makevar> &eacute; 
	espec&iacute;fico para compatibilizar os links 
	simb&oacute;licos que ligam os idiomas a sua 
	codifica&ccedil;&atilde;o oficial (por exemplo o 
	<filename>doc/en</filename> deve apontar para 
	<filename>en_US.ISO-8859-1</filename>).</para>

      <para>O <makevar>DOC_PREFIX</makevar> &eacute; o caminho para a 
	ra&iacute;z da &aacute;rvore do projeto de 
	documenta&ccedil;&atilde;o do FreeBSD.  O qual nem sempre 
	&eacute; facil de encontrar, e que tamb&eacute;m pode ser 
	facilmente sobrescrito, para permitir flexibilidade.  O
	<makevar>.CURDIR</makevar> &eacute; uma vari&aacute;vel 
	interna do <application>make</application> que cont&eacute;m 
	o caminho para o diret&oacute;rio atual.</para>

      <para>A linha final inclui o arquivo principal do projeto de
	documenta&ccedil;&atilde;o do FreeBSD, o 
	<filename>doc.project.mk</filename>, ele &eacute; o 
	respons&aacute;vel por converter estas vari&aacute;veis em 
	instru&ccedil;&otilde;es de compila&ccedil;&atilde;o para 
	uso do <application>make</application>.</para>

    </sect2>
    <sect2 id="doc-make">
      <title><filename>Makefile</filename>s de Documenta&ccedil;&atilde;o</title>

      <para>Estes <filename>Makefile</filename>s ajustam v&aacute;rias
	vari&aacute;veis do <application>make</application> as quais
	descrevem como construir a documenta&ccedil;&atilde;o 
	contida em um determinado diret&oacute;rio.</para>

      <para>Aqui est&aacute; um exemplo:</para>

      <programlisting>MAINTAINER=nik@FreeBSD.org

DOC?= book

FORMATS?= html-split html

INSTALL_COMPRESSED?= gz
INSTALL_ONLY_COMPRESSED?=

# SGML content
SRCS=  book.sgml

DOC_PREFIX?= ${.CURDIR}/../../..

.include "$(DOC_PREFIX)/share/mk/docproj.docbook.mk"</programlisting>

      <para>A vari&aacute;vel <makevar>MAINTAINER</makevar> &eacute; 
	uma muito importante.  Esta vari&aacute;vel fornece a 
	habilidade de reivindicar a propriedade sobre um documento no 
	projeto de documenta&ccedil;&atilde;o do FreeBSD, &eacute; 
	por meio dela que voc&ecirc; recebe a responsabilidade de 
	mant&ecirc;-lo.</para>

      <para><makevar>DOC</makevar> &eacute; o nome (sem a 
	extens&atilde;o <filename>.sgml</filename>) do principal 
	documento criado por este diret&oacute;rio.  A vari&aacute;vel
	<makevar>SRCS</makevar> lista todos os arquivos individuais 
	que comp&otilde;em o documento.  Ela tamb&eacute;m deve 
	incluir os arquivos importantes, nos quais qualquer 
	mudan&ccedil;a deve resultar em uma 
	reconstru&ccedil;&atilde;o.</para>

      <para>O <makevar>FORMATS</makevar> indica os formatos 
	nos quais o documento deve ser gerado por padr&atilde;o.
	O <makevar>INSTALL_COMPRESSED</makevar> cont&eacute;m a lista 
	padr&atilde;o das t&eacute;cnicas de compress&atilde;o que 
	devem ser usadas no documento depois que ele &eacute; gerado.
	A vari&aacute;vel <makevar>INSTALL_ONLY_COMPRESS</makevar>, 
	nula por padr&atilde;o, deve ser definida para um valor
	n&atilde;o nulo apenas se voc&ecirc; desejar gerar 
	exclusivamente a vers&atilde;o compactada do documento.</para>

      <note>
	<para>N&oacute;s abordamos a atribui&ccedil;&atilde;o das 
	  vari&aacute;veis opcionais na <link 
	  linkend="sub-make">se&ccedil;&atilde;o anterior</link>.
	  </para>
      </note>

      <para>Voc&ecirc; tamb&eacute;m j&aacute; deve estar
      	familiarizado com a atribui&ccedil;&atilde;o da 
	vari&aacute;vel <makevar>DOC_PREFIX</makevar> e com as
	instru&ccedil;&otilde;es de include.</para>
    </sect2>
  </sect1>

  <sect1 id="make-includes">
    <title>Includes do <application>Make</application> do projeto de documenta&ccedil;&atilde;o 
      do FreeBSD</title>

    <para>Isto &eacute; melhor explicado pela inspe&ccedil;&atilde;o 
      no c&oacute;digo.  Aqui est&atilde;o os arquivos include do 
      sistema:</para>

    <itemizedlist>
      <listitem>
	<para>O <filename>doc.project.mk</filename> &eacute; o 
	  principal arquivo include do projeto, que inclui todos os 
	  arquivos includes necess&aacute;rios.</para>
      </listitem>

      <listitem>
	<para>O <filename>doc.subdir.mk</filename> controla a
	  navega&ccedil;&atilde;o na &aacute;rvore de 
	  documenta&ccedil;&atilde;o durante 
	  o processo de constru&ccedil;&atilde;o e 
	  instala&ccedil;&atilde;o.</para>
      </listitem>

      <listitem>
	<para>O <filename>doc.install.mk</filename> fornece as 
	  vari&aacute;veis que afetam a propriedade e a 
	  instala&ccedil;&atilde;o de documentos.</para>
      </listitem>

      <listitem>
	<para>O <filename>doc.docbook.mk</filename> &eacute; 
	  inclu&iacute;do se o <makevar>DOCFORMAT</makevar> 
	  for <literal>docbook</literal> e se a vari&aacute;vel 
	  <makevar>DOC</makevar> estiver definida.</para>
      </listitem>
    </itemizedlist>

    <sect2>
      <title><filename>doc.project.mk</filename></title>

      <para>Por inspe&ccedil;&atilde;o:</para>

      <programlisting>DOCFORMAT?=	docbook
MAINTAINER?=	doc@FreeBSD.org

PREFIX?=	/usr/local
PRI_LANG?=	en_US.ISO8859-1

.if defined(DOC)
.if ${DOCFORMAT} == "docbook"
.include "doc.docbook.mk"
.endif
.endif

.include "doc.subdir.mk"
.include "doc.install.mk"</programlisting>

      <sect3>

	<title>Vari&aacute;veis</title>

	<para>As vari&aacute;veis <makevar>DOCFORMAT</makevar> e 
	  <makevar>MAINTAINER</makevar> ser&atilde;o atribu&iacute;das
	  com valores padr&atilde;o, se o valor das mesmas n&atilde;o 
	  tiver sido definido no arquivo Makefile do documento.</para>

	<para>O <makevar>PREFIX</makevar> define o caminho no
	  qual os <link linkend="tools">aplicativos de 
	  constru&ccedil;&atilde;o da documenta&ccedil;&atilde;o</link> 
	  est&atilde;o instalados.  Para uma instala&ccedil;&atilde;o 
	  normal atrav&eacute;s de pacotes e/ou ports, este caminho 
	  ser&aacute; sempre <filename>/usr/local</filename>.</para>

	<para>A vari&aacute;vel <makevar>PRI_LANG</makevar> deve ser 
	  configurada para refletir o idioma e a 
	  codifica&ccedil;&atilde;o nativa dos usu&aacute;rios aos 
	  quais os documentos se destinam.  O Ingl&ecirc;s Americano 
	  (US English) &eacute; o padr&atilde;o.</para>

	<note>
	  <para>A vari&aacute;vel <makevar>PRI_LANG</makevar> de 
	    maneira alguma afeta quais documentos ser&atilde;o, 
	    ou que poder&atilde;o, ser compilados.  Sua 
	    fun&ccedil;&atilde;o principal &eacute; criar links para 
	    os documentos referenciados com maior frequ&ecirc;ncia no 
	    diret&oacute;rio raiz de instala&ccedil;&atilde;o da 
	    documenta&ccedil;&atilde;o do FreeBSD.</para>
	</note>
      </sect3>

      <sect3>
	<title>Condicionais</title>

	<para>A linha <literal>.if defined(DOC)</literal> &eacute; 
	  um exemplo da condicional do <application>make</application>
	  , como em outros programas, define o comportamento se 
	  alguma condi&ccedil;&atilde;o &eacute; verdadeira ou se 
	  &eacute; falsa.  <literal>defined</literal> &eacute; uma 
	  fun&ccedil;&atilde;o que retorna se uma dada 
	  vari&aacute;vel est&aacute; definida ou n&atilde;o.</para>

	<para>A seguir, <literal>.if ${DOCFORMAT} == "docbook"
	  </literal>, testa se a vari&aacute;vel <makevar>DOCFORMAT
	  </makevar> &eacute; <literal>"docbook"</literal>, e neste 
	  caso, inclue o <filename>doc.docbook.mk</filename>.</para>

	<para>Os dois <literal>.endif</literal>s fecham as duas 
	  condicionais anteriores, marcando o fim da sua 
	  aplica&ccedil;&atilde;o.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>doc.subdir.mk</title>

      <para>Este arquivo &eacute; muito longo para ser explicado por 
	inspe&ccedil;&atilde;o, voc&ecirc; deve ser capaz de 
	interpret&aacute;-lo com o conhecimento adquirido nos 
	cap&iacute;tulos anteriores, e com a pequena ajuda dada 
	aqui.</para>

      <sect3>
	<title>Vari&aacute;veis</title>

	<itemizedlist>
	  <listitem>
	    <para><makevar>SUBDIR</makevar> &eacute; a lista de 
	      subdiret&oacute;rios nos quais o processo de 
	      constru&ccedil;&atilde;o deve ser executado.</para>
	  </listitem>

	  <listitem>
	    <para><makevar>ROOT_SYMLINKS</makevar> s&atilde;o os nomes
	      dos diret&oacute;rios que devem ser linkados para a 
	      ra&iacute;z de instala&ccedil;&atilde;o do documento 
	      a partir da sua localiza&ccedil;&atilde;o atual, se o 
	      idioma atual for o idioma prim&aacute;rio (especificado
	      por <makevar>PRI_LANG</makevar>).</para>
	  </listitem>

	  <listitem>
	    <para>O <makevar>COMPAT_SYMLINK</makevar> j&aacute; foi 
	      descrito na se&ccedil;&atilde;o <link 
	      linkend="sub-make">Makefiles de subdiret&oacute;rio
	      </link>.</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>Targets e Macros</title>

	<para>As depend&ecirc;ncias s&atilde;o descritas por
	  <literal><replaceable>target</replaceable>:
	  <replaceable>depend&ecirc;ncia1 depend&ecirc;ncia2 ...
	  </replaceable></literal>, nas quais, para construir o 
	  <literal>target</literal>, voc&ecirc; necessita 
	  primeiramente construir as depend&ecirc;ncias 
	  informadas.</para>

	<para>Depois desta descri&ccedil;&atilde;o, 
	  instru&ccedil;&otilde;es de como construir o target podem 
	  ser passadas, no caso do processo de convers&atilde;o 
	  entre o target e estas depend&ecirc;ncias n&atilde;o 
	  tiver sido previamente definido, ou se esta 
	  convers&atilde;o em particular n&atilde;o for a mesma 
	  que a definida pelo m&eacute;todo padr&atilde;o de 
	  convers&atilde;o.</para>

	<para>A depend&ecirc;ncia especial <literal>.USE</literal> 
	  define o equivalente a uma macro.</para>

<programlisting>_SUBDIRUSE: .USE
.for entry in ${SUBDIR}
	@${ECHO} "===&gt; ${DIRPRFX}${entry}"
	@(cd ${.CURDIR}/${entry} &amp;&amp; \
	${MAKE} ${.TARGET:S/realpackage/package/:S/realinstall/install/} DIRPRFX=${DIRPRFX}${entry}/ )
.endfor</programlisting>

	<para>No c&oacute;digo acima, <maketarget>_SUBDIRUSE
	  </maketarget> &eacute; agora uma macro, a qual ir&aacute; 
	  executar determinados comandos quando for listada como 
	  depend&ecirc;ncia.</para>

	<para>O que define esta macro a parte de outros targets? 
	  Basicamente, ela &eacute; executada <emphasis>ap&oacute;s
	  </emphasis> as instru&ccedil;&otilde;es passadas no 
	  processo de constru&ccedil;&atilde;o por ser uma 
	  depend&ecirc;ncia para o mesmo, e ela n&atilde;o 
	  configura o <makevar>.TARGET</makevar>, que &eacute; a
	  vari&aacute;vel que cont&eacute;m o nome do target atual 
	  que est&aacute; sendo constru&iacute;do.</para>

<programlisting>clean: _SUBDIRUSE
	rm -f ${CLEANFILES}</programlisting>

	<para>No c&oacute;digo acima, o <maketarget>clean</maketarget>
	  ir&aacute; usar a macro <maketarget>_SUBDIRUSE</maketarget>
	  depois de ter executado a instru&ccedil;&atilde;o
	  <command>rm -f ${CLEANFILES}</command>.  De fato, isto causa
	  uma limpeza (<maketarget>clean</maketarget>) na 
	  &aacute;rvore de diret&oacute;rios, deletando os arquivos 
	  constru&iacute;dos enquanto vai 
	  <emphasis>descendo</emphasis> pelos subdiret&oacute;rios, 
	  e n&atilde;o quando vai na dire&ccedil;&atilde;o 
	  oposta.</para>

	<sect4>
	  <title>Targets fornecidos</title>

	  <itemizedlist>
	    <listitem>
	      <para><maketarget>install</maketarget> e
		<maketarget>package</maketarget>, ambos descem pela
		&aacute;rvore de diret&oacute;rios executando a sua
		vers&atilde;o real dentro dos subdiret&oacute;rios.  
		(<maketarget>realinstall</maketarget> e 
		<maketarget>realpackage</maketarget> 
		respectivamente).</para>
	    </listitem>

	    <listitem>
	      <para>O <maketarget>clean</maketarget> remove os 
		arquivos criados pelo processo de 
		compila&ccedil;&atilde;o (e tamb&eacute;m desce na 
		&aacute;rvore de diret&oacute;rios).  
		O <maketarget>cleandir</maketarget> faz a mesma 
		coisa, e tamb&eacute;m remove o diret&oacute;rio 
		de objetos se este existir.</para>
	    </listitem>
	  </itemizedlist>
	</sect4>
      </sect3>

      <sect3>
	<title>Mais Condicionais</title>

	<itemizedlist>
	  <listitem>
	    <para><literal>exists</literal> &eacute; outra 
	      fun&ccedil;&atilde;o condicional que retorna verdadeiro
	      se o arquivo informado existir.</para>
	  </listitem>

	  <listitem>
	    <para><literal>empty</literal> retorna verdadeiro se a 
	      vari&aacute;vel informada estiver vazia.</para>
	  </listitem>

	  <listitem>
	    <para><literal>target</literal> retorna verdadeiro se o 
	      target informado ainda n&atilde;o existir.</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>Constru&ccedil;&atilde;o de Looping no 
	  <command>make (.for)</command></title>

	<para>O <literal>.for</literal> fornece uma maneira de 
	  repetir instru&ccedil;&otilde;es definidas para cada 
	  elemento separado por espa&ccedil;o em uma vari&aacute;vel.
	  Ele faz isso atribu&iacute;ndo uma vari&aacute;vel para 
	  conter o elemento atual da lista que est&aacute; sendo 
	  examinada.</para>

<programlisting>_SUBDIRUSE: .USE
.for entry in ${SUBDIR}
	@${ECHO} "===&gt; ${DIRPRFX}${entry}"
	@(cd ${.CURDIR}/${entry} &amp;&amp; \
	${MAKE} ${.TARGET:S/realpackage/package/:S/realinstall/install/} DIRPRFX=${DIRPRFX}${entry}/ )
.endfor</programlisting>

	<para>No c&oacute;digo acima, se <makevar>SUBDIR</makevar> 
	  estiver vazia, nenhuma a&ccedil;&atilde;o ser&aacute; 
	  executada; se ela possuir um ou mais elementos, as 
	  instru&ccedil;&otilde;es entre o <literal>.for</literal> e 
	  o <literal>.endfor</literal> ser&atilde;o repetidas para 
	  cada elemento, com o <makevar>entry</makevar>
	  sendo substitu&iacute;do com o valor do elemento
	  atual.</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
