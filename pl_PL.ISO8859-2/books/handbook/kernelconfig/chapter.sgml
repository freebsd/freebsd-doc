<!--
     The FreeBSD Polish Documentation Project

     $FreeBSD$
     Original revision: 1.167
-->

<chapter id="kernelconfig">
  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Jim</firstname>
	<surname>Mock</surname>
	<contrib>Zaktualizowa³ i zrekonstruowa³ </contrib>
	<!-- Mar 2000 -->
      </author>
    </authorgroup>
    <authorgroup>
      <author>
	<firstname>Jake</firstname>
	<surname>Hamby</surname>
	<contrib>Pierwotnie napisa³ </contrib>
	<!-- 6 Oct 1995 -->
      </author>
    </authorgroup>

    <authorgroup>
      <author>
        <firstname>£ukasz</firstname>
        <surname>Piechowiak</surname>
        <contrib>T³umaczy³ </contrib>
      </author>
    </authorgroup>
  </chapterinfo>

  <title>Konfiguracja j±dra FreeBSD</title>

  <sect1 id="kernelconfig-synopsis">
    <title>Streszczenie</title>

    <indexterm>
      <primary>kernel</primary>
      <secondary>building a custom kernel</secondary>
    </indexterm>

    <para>Rdzeniem systemu operacyjnego &os; jest j±dro.  Odpowiedzialne jest za zarz±dzanie
      pamiêci±, wymuszanie kontroli bezpieczeñstwa, sieæ, dostêp do dysków i wiele innych.
      Podczas, gdy coraz wiêcej elementów &os; jest konfigurowanych dynamicznie, czasem
      jeszcze mo¿e zaj¶æ potrzeba przekonfigurowania i rekompilowania j±dra.</para>

    <para>Po przeczytaniu tego rozdzia³u bêdziemy wiedzieæ:</para>

    <itemizedlist>
      <listitem>
        <para>Dlaczego mo¿emy potrzebowaæ indywidualnego j±dra.</para>
      </listitem>

      <listitem>
        <para>Jak napisaæ plik konfiguracyjny lub dostroiæ istniej±cy.</para>
      </listitem>

      <listitem>
	<para>Jak wykorzystaæ plik konfiguracyjny j±dra do przygotowania i kompilacji
          nowego j±dra.</para>
      </listitem>

      <listitem>
        <para>Jak zainstalowaæ nowe j±dro.</para>
      </listitem>

      <listitem>
        <para>Jak siê ratowaæ, je¶li co¶ pójdzie nie tak.</para>
      </listitem>
    </itemizedlist>

    <para>Wszystkie przyk³adowe polecenia przedstawione w niniejszym rozdziale powinny
      byæ uruchamiane jako u¿ytkownik <username>root</username>.</para>
  </sect1>

  <sect1 id="kernelconfig-custom-kernel">
    <title>Po co budowaæ indywidualne j±dro?</title>

    <para>Tradycyjnie, system &os; mia³ co¶, co zwie siê <quote>monolitycznym</quote>
      j±drem.  By³ to jeden du¿y program, wspieraj±cy ustalon± liczb± urz±dzeñ.
      Je¶li zasz³a potrzeba zmiany zachowania j±dra, nale¿a³o skompilowaæ nowe j±dro
      i uruchomiæ z nim ponownie komputer.</para>

    <para>W dzisiejszych czasach, &os; bardzo szybko przechodzi do modelu,
      w którym funkcjonalno¶æ j±dra zawiera siê w modu³ach, które mo¿na dynamicznie
      aplikowaæ, lub usuwaæ, w miarê potrzeb.  Umo¿liwia to j±dru szybkie przystosowywanie
      siê zaraz po rozpoznaniu nowego sprzêtu (jak karty PCMCIA w laptopach).  Pozwala
      te¿ zwiêkszyæ funkcjonalno¶æ, której nie mia³o oryginalne j±dro (któremu nie
      by³y dane funkcje potrzebne). Potocznie mówi siê o j±drze modularnym.</para>

    <para>Pomimo tego, czasem trzeba wprowadziæ do j±dra statyczne zmiany.  Na przyk³ad
      w sytuacjach, gdy kluczowe funkcje j±dra zostaj± zmieniane, nie jest mo¿liwym
      za³adowanie dynamicznie ³adowalnego modu³u.  Mo¿liwe te¿, ¿e jeszcze odpowiedni,
      dynamicznie ³adowalny modu³, nie zosta³ napisany.</para>

    <para>Budowanie indywidualnego j±dra jest jednym z najwa¿niejszych rytua³ów,
      których podczas u¿ytkowania systemu BSD trzeba do¶wiadczyæ.  Ten czasoch³onny
      proces przyniesie naszemu systemowi wiele korzy¶ci.  Inaczej ni¿ w przypadku
      j±dra <filename>GENERIC</filename> [podstawowego, domy¶lnego], które musi
      wspieraæ wiele rodzajów sprzêtu, nasze j±dro bêdzie wspiera³o tylko
      <emphasis>nasz</emphasis> sprzêt PC. Ma to wiele zalet:</para>

    <itemizedlist>
      <listitem>
        <para>Szybszy czas uruchamiania systemu.  Od kiedy j±dro bêdzie sprawdza³o
          tylko sprzêt który mamy, czas uruchamiania znacz±co siê zmniejszy.</para>
      </listitem>

      <listitem>
        <para>Mniejsze zu¿ycie pamiêci.  Indywidualne j±dro czêsto zu¿ywa mniej pamiêci
          ni¿ j±dro <filename>GENERIC</filename>, co jest istotnym faktem, gdy¿ j±dro
          przez ca³y czas musi byæ w pamiêci obecne.  Z tych powodów, budowanie
          indywidualnego j±dra jest szczególnie przydatne przy pracy z maszynami
          o ma³ej ilo¶ci pamiêci RAM'u.</para>
      </listitem>

      <listitem>
        <para>Wiêcej wspieranego sprzêtu.  Indywidualne j±dro mo¿e zawieraæ obs³ugê
          np. kart muzycznych, które nie s± wspierane przez domy¶lne j±dro
          <filename>GENERIC</filename>.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="kernelconfig-building">
    <title>Budowanie i instalowanie indywidualnego j±dra</title>
    <indexterm>
      <primary>kernel</primary>
      <secondary>budowanie / instalowanie</secondary>
    </indexterm>

    <para>Omówmy pokrótce katalog kompilacji j±dra.  Wszystkie wspomniane
      za chwilê katalogi bêd± relatywnymi wzglêdem <filename>/usr/src/sys</filename>,
      do którego mo¿na tak¿e doj¶æ przez <filename>/sys</filename>.  Mo¿na tam znale¼æ
      wiele ró¿nych podkatalogów, jednak dla nas najwa¿niejszym bêdzie
      <filename><replaceable>arch</replaceable>/conf</filename>.  W nim w³a¶nie dokonamy
      edycji pliku konfiguracyjnego j±dra oraz je skompilujemy, bêd± to kolejne etapy
      w ca³ym procesie budowy.  <replaceable>arch</replaceable> oznacza architekturê,
      do wyboru: <filename>i386</filename>, <filename>alpha</filename>,
      <filename>amd64</filename>, <filename>ia64</filename>,
      <filename>powerpc</filename>, <filename>sparc64</filename>, lub
      <filename>pc98</filename> (alternatywna ga³±¼ sprzêtu PC, popularna w Japonii).
      Wszystko, co znajduje siê w katalogu danej architektury dotyczy ¶ci¶le
      tylko jej.  Reszta ¼róde³ jest dla wszystkich architektur taka sama.
      Zwróæmy uwagê na logiczn± strukturê katalogów z ka¿dym wspieranym urz±dzeniem,
      systemem plików, opcjami dodatkowymi - wszystko posiada swój
      w³asny podkatalog.</para>

    <para>Przyk³ady w niniejszym rozdziale zak³adaj±, ¿e wykorzystujemy architekturê i386.
      Je¶li tak nie jest, bêdziemy musieli dokonaæ odpowiednich zmian w nazwach
      ¶cie¿ek dostêpu dla architektury naszego systemu.</para>

    <note>
      <para>Je¶li <emphasis>nie</emphasis> mamy katalogu <filename>/usr/src/sys</filename>,
        oznacza to, ¿e nie dysponujemy zainstalowanymi ¼ród³ami j±dra.  Najprostszym sposobem
        na zainstalowanie jest uruchomienie jako <username>root</username>
        <command>sysinstall</command>'a, wybranie <guimenuitem>Configure</guimenuitem>,
        nastêpnie <guimenuitem>Distributions</guimenuitem>, pó¼niej <guimenuitem>src</guimenuitem>,
        a na koñcu <guimenuitem>sys</guimenuitem>.  Je¶li jednak jeste¶my osobami maj±cymi
        awersjê do konfiguratorów mo¿emy zainstalowaæ ¼ród³a j±dra rêcznie.  W poni¿szym
        przyk³adzie instalacja z <quote>oficjalnej</quote> p³yty CD &os;:</para>

      <screen>&prompt.root; <userinput>mount /cdrom</userinput>
&prompt.root; <userinput>mkdir -p /usr/src/sys</userinput>
&prompt.root; <userinput>ln -s /usr/src/sys /sys</userinput>
&prompt.root; <userinput>cat /cdrom/src/ssys.[a-d]* | tar -xzvf -</userinput></screen>
    </note>

    <para>Nastêpnie wchodzimy do katalogu <filename><replaceable>arch</replaceable>/conf</filename>
      i kopiujemy domy¶lny plik konfiguracyjny o nazwie <filename>GENERIC</filename> tworz±c
      plik z nazw± jak± chcemy nadaæ swojemu j±dru. Na przyk³ad:</para>

    <screen>&prompt.root; <userinput>cd /usr/src/sys/<replaceable>i386</replaceable>/conf</userinput>
&prompt.root; <userinput>cp GENERIC MYKERNEL</userinput></screen>

    <para>Tradycyjnie nazwa j±dra pisana jest wielkimi literami.  Dodatkowo dobrym pomys³em
      jest, by nazywaæ j±dra tak jak komputery, co pomaga rozró¿niæ j±dra, gdy mamy wiele
      komputerów z ró¿nym sprzêtem.  Dla potrzeb tego przyk³adu nazwiemy j±dro
      <filename>MYKERNEL</filename>.</para>

    <tip>
      <para>Nie jest najlepszym pomys³em trzymanie pliku konfiguracyjnego j±dra bezpo¶rednio
        w katalogu <filename>/usr/src</filename>.  Je¶li podczas kompilacji mamy k³opot,
        czasem mo¿e siê okazaæ kusz±cym pomys³em po prostu wykasowaæ ca³y katalog
        <filename>/usr/src</filename> i rozpocz±æ od pocz±tku. Wtedy zwykle, kilka sekund
        po usuniêciu katalogu, przypomina nam siê, ¿e usunêli¶my tak¿e plik konfiguracyjny
        j±dra.  Podobnie, nie powinni¶my edytowaæ bezpo¶rednio <filename>GENERIC</filename>,
        gdy¿ mo¿e zostaæ nadpisany przy kolejnej <link linkend="cutting-edge">aktualizacji
        naszego drzewa ¼róde³</link> i zmiany, które wprowadzili¶my zostan± utracone.</para>

      <para>Mo¿emy chcieæ trzymaæ plik konfiguracyjny j±dra gdziekolwiek, a nastêpnie utworzyæ
        symboliczne dowi±zanie do pliku w katalogu
        <filename><replaceable>i386</replaceable></filename>.</para>

      <para>Przyk³adowo:</para>

      <screen>&prompt.root; <userinput>cd /usr/src/sys/<replaceable>i386</replaceable>/conf</userinput>
&prompt.root; <userinput>mkdir /root/kernels</userinput>
&prompt.root; <userinput>cp GENERIC /root/kernels/<replaceable>MYKERNEL</replaceable></userinput>	
&prompt.root; <userinput>ln -s /root/kernels/<replaceable>MYKERNEL</replaceable></userinput></screen>
    </tip>

    <para>Przyszed³ czas na edycjê pliku konfiguracyjnego j±dra.  W przyk³adzie nazywa
      siê on <filename>MYKERNEL</filename>.  Je¶li dopiero zainstalowali¶my system,
      jedynym z dostêpnych edytorów mo¿e byæ <application>vi</application>.  Mimo, ¿e jest
      dobrze udokumentowany, opisany w wielu <link
      linkend="bibliography">ksi±¿kach</link>, dla pocz±tkuj±cych wydaje siê on nieco
      zbyt skomplikowany.  &os; zaopatrzony jest równie¿ w drugi edytor, znacznie prostszy
      w obs³udze, o nazwie <application>ee</application>.  Je¶li dopiero zaczynamy,
      <application>ee</application> powinien byæ naszym wyborem.  Nie krêpujmy siê i zmieñmy
      warto¶ci na górze pliku, szczególnie te, odró¿niaj±ce nasz w³asny plik
      od <filename>GENERIC</filename>.</para>
    <indexterm><primary>SunOS</primary></indexterm>

    <para>Je¶li ju¿ kompilowali¶my j±dro w &sunos; lub innych systemach BSD, du¿a czê¶æ
      pliku konfiguracyjnego powinna byæ nam znajoma.  Je¶li natomiast jeste¶my lepiej
      zaznajomieni z systemami typu DOS, plik konfiguracyjny mo¿e wydaæ siê nam nieco obcy.
      W tym przypadku przeczytajmy uwa¿nie ka¿d± opcjê oraz komentarz w
      <link linkend="kernelconfig-config">pliku konfiguracyjnym</link>.</para>

    <note>
      <para>Je¶li <link
        linkend="cutting-edge">synchronizujemy nasze drzewo ¼ród³owe</link> z najnowszymi
        ¼ród³ami projektu &os;, nale¿y zawsze, nim rozpoczniemy jakiekolwiek
        dzia³ania aktualizuj±ce, zapoznaæ siê z zawarto¶ci± pliku
        <filename>/usr/src/UPDATING</filename>.  W pliku tym zapisane s± wszelkie niezbêdne
        zagadnienia zwi±zane z aktualizacj± &os;. Plik <filename>/usr/src/UPDATING</filename>
        zawsze pasuje do ¼ród³a naszej wersji &os;, jest przez to bardziej odpowiednim ¼ród³em
        informacji ni¿ Podrêcznik.</para>
    </note>

    <para>Musimy teraz skompilowaæ kod ¼ród³owy j±dra.  Istniej± dwie procedury, za pomoc± których
      mo¿na tego dokonaæ.  Wybór zale¿eæ bêdzie od tego w jakim celu kompilujemy j±dro oraz od wykorzystywanej
      wersji &os;.</para>

    <itemizedlist>
      <listitem>
        <para>Je¶li zainstalowali¶my <emphasis>tylko</emphasis> ¼ród³a j±dra, wykorzystamy
          procedurê 1.</para>
      </listitem>

      <listitem>
        <para>Je¶li budujemy nowe j±dro, bez aktualizowania ¼róde³ (na przyk³ad, by dodaæ dodatkowe
          opcje, np. <literal>IPFIREWALL</literal>), mo¿emy u¿yæ dowolnej z procedur.</para>
      </listitem>

      <listitem>
        <para>Je¶li przebudowujemy j±dro jako czê¶æ procesu <command>make buildworld</command>,
          powinni¶my u¿yæ procedury 2.
        </para>
      </listitem>
    </itemizedlist>
    
    <indexterm>
      <primary><command>cvsup</command></primary>
    </indexterm>
    <indexterm><primary>CTM</primary></indexterm>
    <indexterm>
      <primary>CVS</primary>
      <secondary>anonimowy</secondary>
    </indexterm>

    <para>Je¶li <emphasis>nie</emphasis> aktualizowali¶my naszych ¼róde³
      w ¿aden sposób od ostatniego, zakoñczonego powodzeniem cyklu
      <maketarget>buildworld</maketarget>-<maketarget>installworld</maketarget>
      (nie uruchamiali¶my <application>CVSup</application>,
      <application>CTM</application>, ani nie korzystali¶my
      z <application>anoncvs</application>), wówczas bezpiecznym jest skorzystaæ z sekwencji
      <command>config</command>, <command>make depend</command>,
      <command>make</command> i <command>make install</command>.
    </para>

    <procedure>
      <title>Procedura 1. Budowanie j±dra w <quote>tradycyjny</quote> sposób.</title>
      
      <step>
        <para>By wygenerowaæ kod ¼ród³owy j±dra, nale¿y uruchomiæ &man.config.8;.</para>
	
	<screen>&prompt.root; <userinput>/usr/sbin/config <replaceable>MYKERNEL</replaceable></userinput></screen>
      </step>

      <step>
        <para>Nastêpnie, przenie¶my siê do katalogu w którym dokonuje siê budowy.  Po ponownym
          uruchomieniu &man.config.8; wy¶wietlona zostanie nazwa katalogu.</para>

	<screen>&prompt.root; <userinput>cd ../compile/<replaceable>MYKERNEL</replaceable></userinput></screen>
      </step>

      <step>
        <para>Skompilujmy j±dro.</para>
	
	<screen>&prompt.root; <userinput>make depend</userinput>
&prompt.root; <userinput>make</userinput></screen>
      </step>

      <step>
        <para>Zainstalujmy nowe j±dro.</para>
	
	<screen>&prompt.root; <userinput>make install</userinput></screen>
      </step>
    </procedure>

    <procedure>
      <title>Procedura 2. Budowanie j±dra w <quote>nowy</quote> sposób.</title>
      
      <step>
        <para>Wejd¼my do katalogu <filename>/usr/src</filename>.</para>
	
	<screen>&prompt.root; <userinput>cd /usr/src</userinput></screen>
      </step>

      <step>
        <para>Skompilujmy j±dro.</para>
	
	<screen>&prompt.root; <userinput>make buildkernel KERNCONF=<replaceable>MYKERNEL</replaceable></userinput></screen>
      </step>

      <step>
        <para>Zainstalujmy nowe j±dro.</para>

	<screen>&prompt.root; <userinput>make installkernel KERNCONF=<replaceable>MYKERNEL</replaceable></userinput></screen>
      </step>
    </procedure>
    
    <note>
      <para>Ta metoda kompilacji j±dra wymaga wszystkich plików ¼ród³owych.  Je¶li zainstalowali¶my
        jedynie ¼ród³a j±dra, powinni¶my skorzystaæ z opisanej powy¿ej metody tradycyjnej.</para>
    </note>

    <tip>
      <para>Domy¶lnie, podczas kompilacji indywidualnego j±dra,
	<emphasis>wszystkie</emphasis> modu³y j±dra zostan± równie¿ zrekompilowane.
        Je¶li chcemy zaktualizowaæ j±dro szybciej b±d¼ zbudowaæ tylko w³asne modu³y,
        powinni¶my przed rozpoczêciem kompilacji j±dra zmodyfikowaæ plik
        <filename>/etc/make.conf</filename>:</para>

      <programlisting>MODULES_OVERRIDE = linux acpi sound/sound sound/driver/ds1 ntfs</programlisting>

      <para>Zmienna ta definiuje listê modu³ów do kompilacji zamiast wszystkich.
	Inne zmienne przydatne w procesie kompilacji j±dra opisane zosta³y
	w podrêczniku systemowym &man.make.conf.5;.</para>
    </tip>

    <indexterm>
      <primary><filename class="directory">/boot/kernel.old</filename></primary>
    </indexterm> 

    <para>Nowe j±dro zostanie skopiowane do katalogu <filename
      class="directory">/boot/kernel</filename> jako <filename>/boot/kernel/kernel</filename>
      , a dotychczasowe zostanie przeniesione do <filename>/boot/kernel.old/kernel</filename>.
      Teraz nale¿y ponownie uruchomiæ komputer.  W razie jakby co¶ posz³o ¼le, na koñcu tego
      rozdzia³u przedstawionych zosta³o kilka <link linkend="kernelconfig-trouble">awaryjnych</link>
      rozwi±zañ.  Przeczytajmy równie¿ rozdzia³y opisuj±ce co zrobiæ w razie, gdy system <link
      linkend="kernelconfig-noboot">nie chce siê ponownie uruchomiæ</link>.</para>

    <note>
      <para>Inne pliki zwi±zane z procesem uruchamiania, np. takie jak
	&man.loader.8; czy pliki konfiguracyjne s± przechowywane w katalogu
	<filename>/boot</filename>.  W³asne modu³y jak i modu³y innych producentów,
        mo¿na umieszczaæ w katalogu <filename class="directory">/boot/kernel</filename>, jednak¿e
	u¿ytkownicy powinni byæ ¶wiadomi, i¿ synchronizacja modu³ów ze skompilowanym j±drem
	jest bardzo wa¿na.  Modu³y nie przygotowane do pracy z danym j±drem mog± doprowadziæ do
	niestabilno¶ci czy b³êdów.</para>
    </note>
  </sect1>

  <sect1 id="kernelconfig-config">
    <sect1info>
      <authorgroup>
	<author>
	  <firstname>Joel</firstname>
	  <surname>Dahl</surname>
	  <contrib>Zaktualizowa³ do &os; 6.X </contrib>
	</author>
      </authorgroup>

      <authorgroup>
        <author>
          <firstname>Mariusz</firstname>
          <surname>Pilipczuk</surname>
          <contrib>T³umaczy³ </contrib>
        </author>
      </authorgroup>
      <authorgroup>
        <author>
          <firstname>Cezary</firstname>
          <surname>Morga</surname>
          <contrib>Przek³ad uzupe³ni³ </contrib>
        </author>
      </authorgroup>
    </sect1info>
    <title>Plik konfiguracyjny</title>
    <indexterm>
      <primary>j±dro</primary>
      <secondary>NOTES</secondary>
    </indexterm>
    <indexterm><primary>NOTES</primary></indexterm>
    <indexterm>
      <primary>j±dro</primary>
      <secondary>plik konfiguracyjny</secondary>
    </indexterm>

    <para> Ogólny format pliku konfiguracyjnego jest ca³kiem prosty.  Ka¿da linia
      zawiera s³owo kluczowe i jeden lub wiêcej argumentów.  Dla u³atwienia wiêkszo¶æ
      linii zawiera tylko jeden argument. Cokolwiek poprzedzone znakiem <literal>#</literal>
      jest uwa¿ane za komentarz i jest ignorowane.  Ten rozdzia³ opisuje ka¿de s³owo
      kluczowe w ogólnym porz±dku jaki zawiera plik <filename>GENERIC</filename>. <anchor
      id="kernelconfig-options"> Wyczerpuj±ca lista opcji i wiêcej szczegó³owych obja¶nieñ
      zale¿nych od architektury znale¼æ mo¿na w pliku <filename>NOTES</filename>, znajduj±cym siê
      w tym samym katalogu co <filename>GENERIC</filename>.  Opis opcji niezale¿nych
      od architektury znajduje siê w pliku <filename>/usr/src/sys/conf/NOTES</filename>.</para>

    <note>
      <para>By skompilowaæ plik zawieraj±cy wszystkie dostêpne opcje, jak siê z regu³y robi
        do celów testowych, nale¿y wpisaæ jako <username>root</username> nastêpuj±ce polecenie:</para>

      <screen>&prompt.root; <userinput>cd /usr/src/sys/<replaceable>i386</replaceable>/conf &amp;&amp; make LINT</userinput></screen>
    </note>

    <indexterm>
      <primary>j±dro</primary>
      <secondary>plik konfiguracyjny</secondary>
    </indexterm>

    <para>Poni¿ej opisany zosta³ przyk³ad pliku konfiguracyjnego <filename>GENERIC</filename>
      z licznymi dodatkowymi komentarzami, tam gdzie s± potrzebne obja¶nienia.  Przyk³ad ten
      powinien odpowiadaæ naszej kopii pliku
      <filename>/usr/src/sys/<replaceable>i386</replaceable>/conf/GENERIC</filename>.</para>

    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>machine</secondary>
    </indexterm>

    <programlisting>machine		i386</programlisting>

    <para> Jest to architektura komputera.  Musi byæ którym¶ z:
      <literal>alpha</literal>, <literal>amd64</literal>,
      <literal>i386</literal>, <literal>ia64</literal>,
      <literal>pc98</literal>, <literal>powerpc</literal>, lub
      <literal>sparc64</literal>.</para>

    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>cpu</secondary>
    </indexterm>
    <programlisting>cpu          I486_CPU
cpu          I586_CPU
cpu          I686_CPU</programlisting>

    <para> Powy¿sze wpisy okre¶laj± typ CPU jaki posiadamy w swoim systemie.  Mo¿emy mieæ kilka
      ró¿nych wpisów (np. je¶li nie jeste¶my pewni czy mamy <literal>I586_CPU</literal> czy
      <literal>I686_CPU</literal>), jednak kiedy konfigurujemy j±dro najlepiej pozostawiæ CPU
      jakie mamy.  Je¶li nie jeste¶my pewni swojego procesora, mo¿emy sprawdziæ zawarto¶æ pliku
      <filename>/var/run/dmesg.boot</filename>, aby przejrzeæ komunikaty startowe.</para>

    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>ident</secondary>
    </indexterm>

    <programlisting>ident          GENERIC</programlisting>

    <para>Jest to identyfikator j±dra.  Mo¿emy go zmieniæ na taki
      jak nazwali¶my swoje j±dro, w naszym poprzednim przyk³adzie
      <literal>MYKERNEL</literal>.  Warto¶æ jak± pozostawimy
      we wpisie <literal>ident</literal> bêdzie wy¶wietlana podczas
      startu, wiêc korzystnie jest daæ nowemu j±dru inn± nazwê,
      je¶li chcemy go odró¿niæ od j±dra, którego u¿ywamy na co dzieñ
      (np. chcemy zbudowaæ eksperymentalne j±dro).</para>

    <programlisting>#To statically compile in device wiring instead of /boot/device.hints
#hints          "GENERIC.hints"         # Default places to look for devices.</programlisting>

    <para>&man.device.hints.5; jest wykorzystywany do konfiguracji
      opcji sterowników urz±dzeñ.  Domy¶ln± lokacj± sprawdzan± przez
      &man.loader.8; w trakcie uruchamiania systemu jest
      <filename>/boot/device.hints</filename>.  Wykorzystuj±c opcjê
      <literal>hints</literal> mo¿emy wkompilowaæ je statycznie
      w j±dro.  Tym samym nie bêdzie potrzeby tworzyæ pliku
      <filename>device.hints</filename> w katalogu
      <filename>/boot</filename>.</para>

    <!-- XXX: Add a comment here that explains when compiling hints into
      the kernel is a good idea and why. -->

    <programlisting>makeoptions     DEBUG=-g          # Build kernel with gdb(1) debug symbols</programlisting>

    <para>Typowy proces kompilacji &os; wy¶wietla równie¿ informacje
      diagnostyczne w trakcie budowy j±dra z u¿yciem opcji
      <option>-g</option>, która w³±cza wy¶wietlanie informacji
      diagnostycznych w &man.gcc.1;.  Ten sam efekt mo¿na równie¿
      osi±gn±æ poprzez opcjê <option>-g</option> w &man.config.8; przy
      korzystaniu z <quote>tradycyjnej</quote> metody kompilacji j±dra
      (<xref linkend="kernelconfig-building"> zawiera wiêcej informacji
      na temat budowy j±dra).</para>

    <programlisting>options          SCHED_4BSD         # 4BSD scheduler</programlisting>

    <para>Tradycyjny i domy¶lny systemowy zarz±dca procesów &os;.  Nie zmieniajmy tego.</para>

    <programlisting>options          PREEMPTION         # Enable kernel thread preemption</programlisting>

    <para>Pozwala na wyw³aszczanie w±tków w j±drze przez w±tki o wy¿szym
      priorytecie.  Pozwala to na interaktywno¶æ i przerywanie w±tków,
      by ukoñczyæ pewne czynno¶ci wcze¶niej i unikn±æ oczekiwania.</para>

    <programlisting>options          INET              # InterNETworking</programlisting>

    <para>Obs³uga sieci.  Nale¿ pozostawiæ ten wpis, nawet je¶li nie planujemy
      pod³±czyæ siê do sieci.  Wiêkszo¶æ programów wymaga przynajmniej urz±dzenia
      pêtli zwrotnej loopback (np. tworzenie po³±czeñ sieciowych wewn±trz naszego
      PC), wiêc jest to wpis bardzo istotny.</para>

    <programlisting>options          INET6             # IPv6 communications protocols</programlisting>

    <para>Umo¿liwia to obs³ugê protoko³u komunikacyjnego IPv6.</para>

    <programlisting>options          FFS               # Berkeley Fast Filesystem</programlisting>

    <para>Jest to podstawowy dyskowy system plików.  Nale¿y go pozostawiæ,
      je¶li startujemy system z dysku twardego.</para>

    <programlisting>options          SOFTUPDATES       # Enable FFS Soft Updates support</programlisting>

    <para>Opcja ta umo¿liwia tzw. Soft Updates w j±drze, co potrafi przyspieszyæ
      czas dostêpu do dysku przy zapisie.  Jednak¿e, nawet je¶li funkcja ta jest w³±czona
      w j±drze, musi zostaæ aktywowana dla wybranych dysków.  Czy opcja ta jest w³±czona
      mo¿emy sprawdziæ w wyniku polecenia &man.mount.8;.  Je¶li przy naszym dysku
      nie ma oznaczenia <literal>soft-updates</literal> oznacza to, ¿e musimy j± w³±czyæ
      wykorzystuj±c polecenie &man.tunefs.8; (dla istniej±cych systemów plików)
      b±d¼ &man.newfs.8; (dla nowych systemów plików).</para>

    <programlisting>options          UFS_ACL           # Support for access control lists</programlisting>

    <para>Opcja ta w³±cza w j±drze obs³ugê list kontroli dostêpu do systemu
      plików.  Polega to na wykorzystaniu rozszerzonych atrybutów oraz
      systemu plików <acronym>UFS2</acronym>.  <xref linkend="fs-acl"> opisuje
      dok³adniej tê funkcjonalno¶æ.  Domy¶lnie listy <acronym>ACL</acronym>
      s± w³±czone i nie powinny byæ wy³±czane w j±drze je¶li by³y wcze¶niej
      wykorzystywane w systemie plików, gdy¿ usunie to listy kontroli dostêpu
      zmieniaj±c metodê ochrony plików w nieprzewidywalny sposób.</para>

    <programlisting>options          UFS_DIRHASH       # Improve performance on big directories</programlisting>

    <para>Opcja ta zawiera kod szybszej obs³ugi du¿ych katalogów kosztem
      zu¿ycia dodatkowej pamiêci.  Mo¿emy pozostawiæ tê opcjê dla du¿ych
      serwerów lub dla interaktywnej stacji roboczej, a zablokowaæ j± kiedy
      system jest ma³o obci±¿ony i posiada ma³o pamiêci, a dostêp do dysków nie
      jest taki wa¿ny, np. serwer z zapor± ogniow±.</para>

    <programlisting>options          MD_ROOT           # MD is a potential root device</programlisting>

    <para>Opcja ta w³±cza obs³ugê wirtualnego dysku w pamiêci RAM, wykorzystywanego
      jako g³ówne urz±dzenie.</para>

    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>NFS</secondary>
    </indexterm>
    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>NFS_ROOT</secondary>
    </indexterm>
    <programlisting>options          NFSCLIENT         # Network Filesystem Client
options          NFSSERVER         # Network Filesystem Server
options          NFS_ROOT          # NFS usable as /, requires NFSCLIENT</programlisting>

    <para>Sieciowy system plików.  Je¿eli nie planujemy montowania partycji
      z serwera &unix; poprzez TCP/IP, mo¿emy zablokowaæ te linie.</para>

    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>MSDOSFS</secondary>
    </indexterm>
    <programlisting>options          MSDOSFS           # MSDOS Filesystem</programlisting>

    <para>System plików &ms-dos;.  Je¶li nie planujemy montowania dysków lub partycji
      sformatowanych pod DOS-em podczas startowania systemu, dla bezpieczeñstwa zablokujmy
      tê liniê.  Automatycznie MSDOSFS bêdzie ³adowane kiedy pierwszy raz zamontujemy
      DOSow± partycje jak opisano powy¿ej.  Równie¿ wy¶mienity program <filename
      role="package">emulators/mtools</filename> umo¿liwia dostêp do dyskietek DOSowych
      bez potrzeby ich montowania i odmontowywania (i bynajmniej nie jest potrzebny
      <literal>MSDOSFS</literal>).</para>

    <programlisting>options          CD9660            # ISO 9660 Filesystem</programlisting>

    <para>System plików ISO 9660 dla p³yt CDROM.  Je¶li nie posiadamy napêdu CDROM mo¿emy
      zablokowaæ tê liniê, lub gdy montujesz dane z CD okazjonalnie (od kiedy zamontujemy
      dane z CD po raz pierwszy, CD9660 bêdzie ³adowany automatycznie). P³yty audio CD
      nie potrzebuje tego systemu plików.</para>

    <programlisting>options          PROCFS            # Process filesystem (requires PSEUDOFS)</programlisting>

    <para>System plików procesów.  Jest to system plików <quote>na niby</quote> montowany
      w <filename>/proc</filename>, który dla takich programów jak &man.ps.1; posiada wiêcej
      informacji o tym jakie procesy s± w³a¶nie uruchomione.  W wiêkszo¶ci przypadków
      wykorzystanie <literal>PROCFS</literal> nie jest wymagane, gdy¿ wiêkszo¶æ narzêdzi
      diagnostycznych i monitoruj±cych zosta³o zaadaptowanych do pracy bez <literal>PROCFS</literal>:
      Domy¶lne instalacje nie montuj± tego systemu plików.</para>

    <programlisting>options          PSEUDOFS          # Pseudo-filesystem framework</programlisting>

      <para>J±dra 6.X wykorzystuj±ce <literal>PROCFS</literal> musz± równie¿
        zawieraæ obs³ugê <literal>PSEUDOFS</literal>.</para>

    <programlisting>options          GEOM_GPT          # GUID Partition Tables.</programlisting>

    <para>Opcja ta umo¿liwia tworzenie du¿ej ilo¶ci partycji na pojedynczym dysku.</para>

    <programlisting>options          COMPAT_43         # Compatible with BSD 4.3 [KEEP THIS!]</programlisting>

    <para>Kompatybilno¶æ z systemem 4.3BSD.  Nale¿y pozostawiæ ten wpis; niektóre programy
      bêd± zachowywaæ siê dziwnie je¶li zablokujemy tê opcjê.</para>

    <programlisting>options          COMPAT_FREEBSD4   # Compatible with &os;4</programlisting>

    <para>Opcja ta potrzebna jest w systemach &os;&nbsp;5.X &i386; i Alpha do obs³ugi
      aplikacji skompilowanych w starszych wersjach &os;, wykorzystuj±cych stary
      interfejs wywo³añ systemowych.  Zaleca siê by wykorzystywaæ tê opcjê
      we wszystkich systemach &i386; i Alpha, w których mog± wykorzystywane
      starsze aplikacje; platformy wspierane dopiero od wersji
      5.X, jak np. ia64 i &sparc64;, nie wymagaj± ten opcji.</para>

    <programlisting>options          SCSI_DELAY=5000  # Delay (in ms) before probing SCSI</programlisting>

    <para>Sprawi to, ¿e j±dro zatrzyma siê na 5 sekund przed rozpoczêciem rozpoznawania
      w naszym systemie ka¿dego urz±dzenia SCSI.  Je¶li jednak posiadamy tylko urz±dzenia
      IDE, mo¿emy ten wpis zignorowaæ. W innym przypadku mo¿emy zmniejszyæ tê warto¶æ
      i w ten sposób przyspieszyæ start systemu.  Gdy to zrobimy a &os; bêdzie mia³
      k³opoty z rozpoznawaniem urz±dzeñ SCSI bêdziemy musieli zmieniæ tê warto¶æ na wiêksz±.</para>

    <programlisting>options          KTRACE            # ktrace(1) support</programlisting>

    <para>¦ledzenie procesów przez j±dro, które jest u¿yteczne w diagnozowaniu.</para>

    <programlisting>options          SYSVSHM           # SYSV-style shared memory</programlisting>

    <para>Daje to systemom z rodziny V mechanizm wspó³dzielenia pamiêci.  W dzia³aniu
      ma to wiele wspólnego z mechanizmem XSHM w X-ach. Znaczna ilo¶æ programów obci±¿aj±ca
      system graficzny zyska automatycznie na prêdko¶ci.  Je¶li jeste¶my u¿ytkownikiem X-ów
      koniecznie pozostawmy tê opcjê.</para>

    <programlisting>options          SYSVMSG           # SYSV-style message queues</programlisting>

    <para>Wsparcie dla mechanizmu komunkatów w Systemach V.  Opcja ta dodaje zaledwie
      kilkaset bajtów do j±dra.</para>

    <programlisting>options          SYSVSEM           # SYSV-style semaphores</programlisting>

    <para>Wsparcie dla mechanizmu semaforów w Systemach V.  Mniej przydatne w
      u¿yciu ale równie¿ dodaje tylko kilkaset bajtów do j±dra.</para>

    <note>
      <para>Parametr <option>-p</option> polecenia &man.ipcs.1; wy¶wietli ka¿dy proces,
        który u¿ywa tych dogodno¶ci Sytemów V.</para>
    </note>

    <programlisting>options 	     _KPOSIX_PRIORITY_SCHEDULING # POSIX P1003_1B real-time extensions</programlisting>

    <para>Rozszerzenia czasu rzeczywistego dodane w 1993 do &posix;.  Pewne aplikacje z kolekcji
      portów u¿ywaj± tego mechanizmu (jak np. <application>&staroffice;</application>).</para>

    <programlisting>options          KBD_INSTALL_CDEV  # install a CDEV entry in /dev</programlisting>

    <para>Opcja ta zwi±zana jest z obs³ug± klawiatury. Dodaje ona wpis CDEV
      w <filename>/dev</filename>.</para>

    <programlisting>options          AHC_REG_PRETTY_PRINT     # Print register bitfields in debug
                                          # output.  Adds ~128k to driver.
options          AHD_REG_PRETTY_PRINT     # Print register bitfields in debug
                                          # output.  Adds ~215k to driver.</programlisting>

    <para>Pomaga to w diagnozowaniu, wypisuj±c ³atwiejsze do odczytania definicje rejestrów.</para>

    <programlisting>options          ADAPTIVE_GIANT    # Giant mutex is adaptive.</programlisting>

    <para>Giant jest nazw± mechanizmu wzajemnego wykluczania (u¶piony mutex)
      chroni±cego znaczn± grupê zasobów j±dra.  Obecnie mechanizm ten stanowi niedopuszczalnie
      w±skie gard³o w wydajno¶ci systemu, które jest zastêpowane przez blokady
      zabezpieczaj±ce indywidualne zasoby.  Opcja <literal>ADAPTIVE_GIANT</literal>
      powoduje, ¿e Giant jest do³±czany do zestawu adaptacyjnie zapêtlanych
      muteksów.  Co oznacza, ¿e w momencie gdy w±tek chce zablokowaæ mutex Giant,
      który jest ju¿ zablokowany przez inny w±tek b±d¼ procesor, pierwszy w±tek
      bêdzie pracowa³ i oczekiwa³ na zwolnienie blokady.  Normalnie, w±tek
      przeszed³by do stanu u¶pienia i oczekiwa³ na kolejn± okazjê uruchomienia.
      Je¶li nie jeste¶my przekonani, pozostawmy tê opcjê w³±czon±.</para>

    <indexterm>
      <primary>opcje j±dra</primary>
      <secondary>SMP</secondary>
    </indexterm>
    <programlisting>device          apic               # I/O APIC</programlisting>

    <para>Urz±dzenie apic pozwala na wykorzystanie we/wy APIC do dostarczania
      przerwañ. Urz±dzenie apic mo¿e byæ wykorzystywane zarówno w j±drach UP jak
      i SMP, przy czym wymagane jest jedynie w przypadku tych drugich.  By w³±czyæ
      obs³ugê wielu procesorów nale¿y dodaæ wiersz <literal>options SMP</literal>.</para>

    <programlisting>device          eisa</programlisting>

    <para>Nale¿y w³±czyæ to je¶li posiadamy p³ytê g³ówn± typu EISA.  Umo¿liwia to autodetekcjê
      i konfiguracjê dla wszystkich urz±dzeñ pracuj±cych na magistrali EISA.</para>

    <programlisting>device          pci</programlisting>

    <para>W³±czmy to je¶li posiadamy p³yte g³ówn± typu PCI.  Umo¿liwia to autodetekcjê kart PCI
      i przesy³anie z magistrali PCI do ISA.</para>

    <programlisting># Floppy drives
device          fdc</programlisting>

    <para>Kontroler stacji dyskietek.</para>

    <programlisting># ATA and ATAPI devices
device          ata</programlisting>

    <para>Sterownik ten obs³uguje wszystkie urz±dzenia ATA i ATAPI.  Potrzebujemy
      tylko tej jednej linijki, aby j±dro wykrywa³o wszystkie urz±dzenia na wspó³czesnych
      maszynach.</para>

    <programlisting>device          atadisk                 # ATA disk drives</programlisting>

    <para>Potrzebne jest to razem z <literal>device ata</literal> dla dysków ATA.</para>

    <programlisting>device          ataraid                 # ATA RAID drives</programlisting>

    <para>Potrzebne jest to razem z <literal>device ata</literal> dla dysków ATA RAID.</para>

    <programlisting><anchor id="kernelconfig-atapi">
device          atapicd                 # ATAPI CDROM drives</programlisting>

    <para>Potrzebne jest to razem z <literal>device ata</literal> dla napêdów CDROM ATAPI.</para>

    <programlisting>device          atapifd                 # ATAPI floppy drives</programlisting>

    <para>Potrzebne jest to razem z <literal>device ata</literal> dla stacji dyskietek ATAPI.</para>

    <programlisting>device          atapist                 # ATAPI tape drives</programlisting>

    <para>Potrzebne jest to razem z <literal>device ata</literal> dla urz±dzeñ ta¶mowych ATAPI.</para>

    <programlisting>options         ATA_STATIC_ID           # Static device numbering</programlisting>

    <para>Powoduje to przydzielanie przez kontroler statycznego numeru, inaczej
      liczba dyskowa bêdzie przydzielana dynamicznie.</para>

    <programlisting># SCSI Controllers
device          ahb        # EISA AHA1742 family
device          ahc        # AHA2940 and onboard AIC7xxx devices
device          ahd        # AHA39320/29320 and onboard AIC79xx devices
device          amd        # AMD 53C974 (Teckram DC-390(T))
device          isp        # Qlogic family
#device         ispfw      # Firmware for QLogic HBAs- normally a module
device          mpt        # LSI-Logic MPT-Fusion
#device         ncr        # NCR/Symbios Logic
device          sym        # NCR/Symbios Logic (newer chipsets)
device          trm        # Tekram DC395U/UW/F DC315U adapters

device          adv        # Advansys SCSI adapters
device          adw        # Advansys wide SCSI adapters
device          aha        # Adaptec 154x SCSI adapters
device          aic        # Adaptec 15[012]x SCSI adapters, AIC-6[23]60.
device          bt         # Buslogic/Mylex MultiMaster SCSI adapters

device          ncv        # NCR 53C500
device          nsp        # Workbit Ninja SCSI-3
device          stg        # TMC 18C30/18C50</programlisting>

    <para>Kontrolery SCSI.  Nale¿y zablokowaæ te kontrolery, których nie posiadamy w naszym
      systemie.  Je¶li mamy system oparty tylko na IDE mo¿emy pozbyæ siê ca³ej listy.</para>

    <programlisting># SCSI peripherals
device          scbus      # SCSI bus (required for SCSI)
device          ch         # SCSI media changers
device          da         # Direct Access (disks)
device          sa         # Sequential Access (tape etc)
device          cd         # CD
device          pass       # Passthrough device (direct SCSI access)
device          ses        # SCSI Environmental Services (and SAF-TE)</programlisting>

    <para>Peryferia SCSI.  Ponownie, je¶li nie posiadamy takowych mo¿emy je wy³±czyæ
      lub je¶li posiadamy tylko sprzêt IDE mo¿emy wszystkie powy¿sze wpisy usun±æ.</para>

    <note>
      <para>Sterownik USB &man.umass.4; i kilka innych sterowników wykorzystuje
        podsystem SCSI chocia¿ nie s± one prawdziwymi urz±dzeniami SCSI.  Tym samym
        musimy pamiêtaæ by nie usun±æ ca³kowicie obs³ugi SCSI je¶li którykolwiek
	z tego typu sterowników zosta³ uwzglêdniony w konfiguracji j±dra.</para>
    </note>

    <programlisting># RAID controllers interfaced to the SCSI subsystem
device          amr        # AMI MegaRAID
device          arcmsr     # Areca SATA II RAID
device          asr        # DPT SmartRAID V, VI and Adaptec SCSI RAID
device          ciss       # Compaq Smart RAID 5*
device          dpt        # DPT Smartcache III, IV - See NOTES for options
device          hptmv      # Highpoint RocketRAID 182x
device          rr232x     # Highpoint RocketRAID 232x
device          iir        # Intel Integrated RAID
device          ips        # IBM (Adaptec) ServeRAID
device          mly        # Mylex AcceleRAID/eXtremeRAID
device          twa        # 3ware 9000 series PATA/SATA RAID

# RAID controllers
device          aac        # Adaptec FSA RAID
device          aacp       # SCSI passthrough for aac (requires CAM)
device          ida        # Compaq Smart RAID
device          mfi        # LSI MegaRAID SAS
device          mlx        # Mylex DAC960 family
device          pst        # Promise Supertrak SX6000
device          twe        # 3ware ATA RAID</programlisting>

    <para>Obs³uga kontrolerów RAID.  Je¶li nie posiadamy ¿adnych kontrolerów RAID,
      mo¿emy te wpisy zablokowaæ lub usun±æ.</para>

    <programlisting># atkbdc0 controls both the keyboard and the PS/2 mouse
device          atkbdc     # AT keyboard controller</programlisting>

    <para>Sterownik klawiatury (<literal>atkbdc</literal>) obs³uguj±cy porty we/wy
      dla klawiatur AT i dla urz±dzeñ wskazuj±cych PS/2.  Wymagany jest przez sterownik klawiatur
      (<literal>atkbd</literal>) i PS/2 (<literal>psm</literal>).</para>

    <programlisting>device          atkbd      # AT keyboard</programlisting>

    <para>Sterownik <literal>atkbd</literal> razem z kontrolerem <literal>atkbdc</literal>
      umo¿liwiaj± dostêp do klawiatury AT84 lub do rozszerzonej klawiatury, które pod³±czone
      s± do kontrolera AT.</para>

    <programlisting>device          psm        # PS/2 mouse</programlisting>

    <para>Urz±dzenie to nale¿y wykorzystaæ je¶li nasza myszka jest pod³±czona do
      portu PS/2.</para>

    <programlisting>device          kbdmux        # keyboard multiplexer</programlisting>

    <para>Podstawowa obs³uga multipleksacji klawiatury.</para>

    <programlisting>device          vga        # VGA video card driver</programlisting>

    <para>Sterownik kart video.</para>

    <programlisting>
device          splash     # Splash screen and screen saver support</programlisting>

    <para>Obraz tytu³owy w trakcie startu! Wymagany równie¿ przez wygaszacze ekranu.</para>

    <programlisting># syscons is the default console driver, resembling an SCO console
device          sc</programlisting>

    <para><literal>sc</literal> jest domy¶lnym sterownikiem konsoli, przypominaj±cy
      konsolê SCO.  Wiele programów pracuj±cych w trybie pe³noekranowym uzyskuj± dostêp
      do konsoli poprzez biblioteki bazy danych terminala takie jak <filename>termcap</filename>,
      nie powinno wiêc byæ istotne czy u¿ywamy w³a¶nie jego czy <literal>vt</literal>,
      sterownika zgodnego z <literal>VT220</literal>.  Kiedy logujemy siê, a nasz program
      ma k³opoty podczas uruchamiania spod konsoli, nale¿y ustawiæ zmienn±
      <envar>TERM</envar> na <literal>scoansi</literal>.</para>

    <programlisting># Enable this for the pcvt (VT220 compatible) console driver
#device          vt
#options         XSERVER          # support for X server on a vt console
#options         FAT_CURSOR       # start with block cursor</programlisting>

    <para>Sterowniki konsoli kompatybilnej z VT220 i z wcze¶niejszymi VT100/102.  Dobrze pracuj±
      na niektórych laptopach nie posiadaj±cych sprzêtu kompatybilnego z <literal>sc</literal>.
      Równie¿ w takim przypadku nale¿y zmodyfikowaæ zmienn± <envar>TERM</envar> na
      <literal>vt100</literal> lub <literal>vt220</literal>, kiedy siê logujemy.  Sterownik ten
      mo¿e byæ równie¿ u¿yteczny kiedy ³±czymy siê z du¿± liczb± ró¿norodnych maszyn w sieci,
      gdzie <filename>termcap</filename> lub <filename>terminfo</filename> czêsto nie posiadaj±
      wpisów dla urz±dzeñ <literal>sc</literal> &mdash; wówczas <literal>vt100</literal>
      powinien byæ dostêpny praktycznie na wszystkich platformach.</para>

    <programlisting>device          agp</programlisting>

    <para>Nale¿y w³±czyæ tê opcjê je¶li posiadamy kartê AGP w systemie.  W³±czy to obs³ugê
      AGP i AGP GART dla p³yt g³ównych obs³uguj±cych te funkcje.</para>

    <indexterm>
      <primary>APM</primary>
    </indexterm>

    <programlisting># Power management support (see NOTES for more options)
#device          apm</programlisting>

    <para>Zaawansowane zarz±dzanie energi±.  U¿yteczne dla laptopów, chocia¿
      we &os; 5.X i pó¼niejszych opcja ta jest domy¶lnie wy³±czona w j±drze
      <filename>GENERIC</filename>.</para>

    <programlisting># Add suspend/resume support for the i8254.
device           pmtimer</programlisting>

    <para>Sterownik urz±dzenia regulatora czasowego dla zarz±dzania energi±, jak np. APM
      i ACPI.</para>

    <programlisting># PCCARD (PCMCIA) support
# PCMCIA and cardbus bridge support
device          cbb               # cardbus (yenta) bridge
device          pccard            # PC Card (16-bit) bus
device          cardbus           # CardBus (32-bit) bus</programlisting>

    <para>Obs³uga kart PCMCIA.  Potrzebna dla laptopów.</para>

    <programlisting># Serial (COM) ports
device          sio               # 8250, 16[45]50 based serial ports</programlisting>

    <para>S± to porty szeregowe nazywane w terminologii &ms-dos;/&windows;
      <devicename>COM</devicename>.</para>

    <note>
      <para>Je¶li posiadamy wewnêtrzny modem na <devicename>COM4</devicename>
        oraz port szeregowy <devicename>COM2</devicename>, nale¿y zmieniæ IRQ modemu
        na 2 (z technicznych pobudek IRQ2 = IRQ9) bo takiej kolejno¶ci wymaga &os;.
        Je¶li posiadamy wieloportow± kartê szeregow± musimy odwo³aæ siê do podrêcznika
        systemowego &man.sio.4; po wiêcej informacji o w³a¶ciwych ustawieniach w pliku
        <filename>/boot/device.hints</filename>.  Niektóre karty wideo (zw³aszcza te
        bazuj±ce na chipie S3) u¿ywaj± adresów we/wy w postaci <literal>0x*2e8</literal>,
        a poniewa¿ wiele tanich kart szeregowych nie dekoduje w pe³ni 16-bitowej przestrzeni
        adresowej we/wy, powoduj± one konflikt sprzêtowy czyni±c port <devicename>COM4</devicename>
        praktycznie niedostêpnym.</para>

      <para>Ka¿dy port szeregowy wymaga unikalnego IRQ (z wyj±tkiem multiportów gdzie
        wspó³dzielenie przerwania jest obs³ugiwane) zatem domy¶lne IRQ dla
        <devicename>COM3</devicename> i <devicename>COM4</devicename> nie maj± zastosowania.</para>
    </note>

    <programlisting># Parallel port
device          ppc</programlisting>

    <para>Interfejs portu równoleg³ego na magistrali ISA.</para>

    <programlisting>device          ppbus      # Parallel port bus (required)</programlisting>

    <para>Umo¿liwia obs³ugê portów równoleg³ych.</para>

    <programlisting>device          lpt        # Printer</programlisting>

    <para>Obs³uga drukarek na porcie równoleg³ym.</para>

    <note>
      <para>Powy¿sze trzy wpisy s± wymagane, by by³o mo¿liwe korzystanie
        z drukarek na porcie równoleg³ym.</para>
    </note>

    <programlisting>device          plip       # TCP/IP over parallel</programlisting>

    <para>Sterownik dla równoleg³ego interfejsu sieciowego.</para>

    <programlisting>device          ppi        # Parallel port interface device</programlisting>

    <para>Uniwersalny port we/wy + IEEE1284.</para>

    <programlisting>#device         vpo        # Requires scbus and da</programlisting>

    <indexterm><primary>napêd zip</primary></indexterm>
    <para>Napêd ZIP firmy Iomega.  Wymagane sterowniki <literal>scbus</literal>
      i <literal>da</literal>.  Najlepsz± wydajno¶æ mo¿na osi±gn±æ wykorzystuj±c
      porty w trybie EPP 1.9.</para>

    <programlisting>#device         puc</programlisting>

    <para>Opcjê tê nale¿y odblokowaæ je¶li posiadamy <quote>niem±</quote> szeregow±
      lub równoleg³a kartê PCI, obs³ugiwan± przez sterownik &man.puc.4;.</para>

    <programlisting># PCI Ethernet NICs.
device          de         # DEC/Intel DC21x4x (<quote>Tulip</quote>)
device          em         # Intel PRO/1000 adapter Gigabit Ethernet Card
device          ixgb       # Intel PRO/10GbE Ethernet Card
device          txp        # 3Com 3cR990 (<quote>Typhoon</quote>)
device          vx         # 3Com 3c590, 3c595 (<quote>Vortex</quote>)</programlisting>

    <para>Ró¿ne karty sieciowe na z³±czu PCI.  Nale¿y zablokowaæ lub usun±æ te z nich,
      które nie s± obecne w naszym systemie.</para>

    <programlisting># PCI Ethernet NICs that use the common MII bus controller code.
# NOTE: Be sure to keep the 'device miibus' line in order to use these NICs!
device          miibus     # MII bus support</programlisting>

    <para>Obs³uga szyny MII wymagana dla wielu kart sieciowych 10/100 na z³±czu PCI,
      wykorzystuj±cych nadajniki-odbiorniki zgodne z MII lub maj± wbudowany nadbiornik
      pracuj±cy jak MII. Dodanie <literal>device miibus</literal> do j±dra pozwoli
      na obs³ugê miibus API i wszystkich sterowników PHY, w³±czaj±c te, które
      nie wymagaj± indywidualnych ustawieñ i sterowników.</para>

    <programlisting>device          bce        # Broadcom BCM5706/BCM5708 Gigabit Ethernet
device          bfe        # Broadcom BCM440x 10/100 Ethernet
device          bge        # Broadcom BCM570xx Gigabit Ethernet
device          dc         # DEC/Intel 21143 and various workalikes
device          fxp        # Intel EtherExpress PRO/100B (82557, 82558)
device          lge        # Level 1 LXT1001 gigabit ethernet
device          nge        # NatSemi DP83820 gigabit ethernet
device          nve        # nVidia nForce MCP on-board Ethernet Networking
device          pcn        # AMD Am79C97x PCI 10/100 (precedence over 'lnc')
device          re         # RealTek 8139C+/8169/8169S/8110S
device          rl         # RealTek 8129/8139
device          sf         # Adaptec AIC-6915 (<quote>Starfire</quote>)
device          sis        # Silicon Integrated Systems SiS 900/SiS 7016
device          sk         # SysKonnect SK-984x &amp; SK-982x gigabit Ethernet
device          ste        # Sundance ST201 (D-Link DFE-550TX)
device          ti         # Alteon Networks Tigon I/II gigabit Ethernet
device          tl         # Texas Instruments ThunderLAN
device          tx         # SMC EtherPower II (83c170 <quote>EPIC</quote>)
device          vge        # VIA VT612x gigabit ethernet
device          vr         # VIA Rhine, Rhine II
device          wb         # Winbond W89C840F
device          xl         # 3Com 3c90x (<quote>Boomerang</quote>, <quote>Cyclone</quote>)</programlisting>

    <para>Sterowniki wykorzystuj±ce szynê MII.</para>

    <programlisting># ISA Ethernet NICs.  pccard NICs included.
device          cs         # Crystal Semiconductor CS89x0 NIC
# 'device ed' requires 'device miibus'
device          ed         # NE[12]000, SMC Ultra, 3c503, DS8390 cards
device          ex         # Intel EtherExpress Pro/10 and Pro/10+
device          ep         # Etherlink III based cards
device          fe         # Fujitsu MB8696x based cards
device          ie         # EtherExpress 8/16, 3C507, StarLAN 10 etc.
device          lnc        # NE2100, NE32-VL Lance Ethernet cards
device          sn         # SMC's 9000 series of Ethernet chips
device          xe         # Xircom pccard Ethernet

# ISA devices that use the old ISA shims
#device         le</programlisting>

    <para>Sterowniki ISA Ethernet.  Plik
      <filename>/usr/src/sys/<replaceable>i386</replaceable>/conf/NOTES</filename>
      zawiera szczegó³owy opis, która karta jest obs³ugiwana
      przez dany sterownik.</para>

    <programlisting># Wireless NIC cards
device          wlan       # 802.11 support
device          an         # Aironet 4500/4800 802.11 wireless NICs.
device          awi        # BayStack 660 and others
device          ral        # Ralink Technology RT2500 wireless NICs.
device          wi         # WaveLAN/Intersil/Symbol 802.11 wireless NICs.
#device         wl         # Older non 802.11 Wavelan wireless NIC.</programlisting>

    <para>Obs³uga ró¿nych kart bezprzewodowych.</para>

    <programlisting># Pseudo devices
device   loop          # Network loopback</programlisting>

    <para>Standardowe urz±dzenie pêtli zwrotnej dla TCP/IP.  Je¶li ³±czymy siê
      z <hostid>localhost</hostid> (a.k.a. <hostid
      role="ipaddr">127.0.0.1</hostid>) za pomoc± telnetu b±d¼ FTP, po³±czenie
      powróci do nas za pomoc± tego urz±dzenia.  Obecno¶æ tego wpisu
      w konfiguracji j±dra jest <emphasis>niezbêdna</emphasis>.</para>

    <programlisting>device   random        # Entropy device</programlisting>

    <para>Bezpieczny z kryptograficznego punktu widzenia generator liczb losowych.</para>

    <programlisting>device   ether         # Ethernet support</programlisting>

    <para><literal>ether</literal> jest wymagany tylko wówczas, gdy posiadamy kartê
      Ethernet.  Zawiera podstawowy kod protoko³u Ethernet.</para>

    <programlisting>device   sl            # Kernel SLIP</programlisting>

    <para><literal>sl</literal> s³u¿y do obs³ugi SLIP.  Zosta³o prawie ca³kowicie
      wyparte przez PPP, które jest ³atwiejsze w obs³udze, lepiej przystosowane
      do po³±czeñ modem - modem i posiada wiêcej mo¿liwo¶ci.</para>

    <programlisting>device   ppp           # Kernel PPP</programlisting>

    <para>Wsparcie j±dra dla PPP przy po³±czeniach wdzwanianych.  Jest równie¿
      w niej zaimplementowana wersja PPP, dla wielu aplikacji u¿ywaj±cych <literal>tun</literal>,
      oferuj±ca wiêksz± elastyczno¶æ i funkcjonalno¶ci takie jak np. po³±czenie na ¿±danie
      (demand dialing).</para>

    <programlisting>device   tun           # Packet tunnel.</programlisting>

    <para>U¿ywane przez rodzinê aplikacji korzystaj±cych z PPP.  Wiêcej informacji
      na ten temat zawiera rozdzia³ niniejszego Podrêcznika po¶wiêcony
      w³a¶nie <link linkend="userppp">PPP</link>.</para>

    <programlisting><anchor id="kernelconfig-ptys">
device   pty           # Pseudo-ttys (telnet etc)</programlisting>

    <para>Jest to <quote>pseudo-terminal</quote> wykorzystywany przez przychodz±ce
      sesje <command>telnet</command> i <command>rlogin</command>,
      <application>xterm</application> oraz kilka innych aplikacji, jak np.
      <application>Emacs</application>.</para>

    <programlisting>device   md            # Memory <quote>disks</quote></programlisting>

    <para>Pseudo urz±dzenie memory-disk.</para>

    <programlisting>device   gif           # IPv6 and IPv4 tunneling</programlisting>

    <para>Implementacja tunelowania IPv6 przez IPv4, IPv4 przez IPv6, IPv4 przez IPv4
      oraz IPv6 przez IPv6. Urz±dzenie <literal>gif</literal> posiada cechê
      <quote>auto-klonowania</quote>, co umo¿liwia tworzenie wymaganych plików urz±dzeñ.</para>

    <programlisting>device   faith         # IPv6-to-IPv4 relaying (translation)</programlisting>

    <para>To pseudo-urz±dzenie wy³apuje przes³ane do niego pakiety i przekazuje
      je do demona translacji IPv4/IPv6.</para>

    <programlisting># The `bpf' device enables the Berkeley Packet Filter.
# Be aware of the administrative consequences of enabling this!
# Note that 'bpf' is required for DHCP.
device   bpf           # Berkeley packet filter</programlisting>

    <para>Filtr pakietów rodem z Berkeley.  To pseudo-urz±dzenie pozwala interfejsom
      sieciowym pracowaæ w trybie nas³uchiwania, wy³apuj±c ka¿dy pakiet wys³any w sieci
      (np w sieci Ethernet).  Pakiety te mog± zostaæ zapisane na dysku i/lub sprawdzane
      programem &man.tcpdump.1;.</para>

    <note>
      <para>Urz±dzenie &man.bpf.4; jest równie¿ wykorzystywane przez &man.dhclient.8;,
        by uzyskaæ adres IP domy¶lnego rutera (bramki) itp.  Je¶li u¿ywamy DHCP pozostawmy
        ten wpis.</para>
    </note>

    <programlisting># USB support
device          uhci          # UHCI PCI-&gt;USB interface
device          ohci          # OHCI PCI-&gt;USB interface
#device         ehci          # EHCI PCI-&gt;USB interface (USB 2.0)
device          usb           # USB Bus (required)
#device         udbp          # USB Double Bulk Pipe devices
device          ugen          # Generic
device          uhid          # <quote>Human Interface Devices</quote>
device          ukbd          # Keyboard
device          ulpt          # Printer
device          umass         # Disks/Mass storage - Requires scbus and da
device          ums           # Mouse
device          urio          # Diamond Rio 500 MP3 player
device          uscanner      # Scanners
# USB Ethernet, requires mii
device          aue           # ADMtek USB Ethernet
device          axe           # ASIX Electronics USB Ethernet
device          cdce          # Generic USB over Ethernet
device          cue           # CATC USB Ethernet
device          kue           # Kawasaki LSI USB Ethernet
device          rue           # RealTek RTL8150 USB Ethernet</programlisting>

    <para>Obs³uga wielu urz±dzeñ USB.</para>

    <programlisting># FireWire support
device          firewire      # FireWire bus code
device          sbp           # SCSI over FireWire (Requires scbus and da)
device          fwe           # Ethernet over FireWire (non-standard!)</programlisting>

    <para>Obs³uga ró¿norodnych urz±dzeñ Firewire.</para>

    <para>Wiêcej informacji o wymienionych oraz dodatkowych urz±dzeniach obs³ugiwanych
      przez &os; znale¼æ mo¿na w pliku
      <filename>/usr/src/sys/<replaceable>i386</replaceable>/conf/NOTES</filename>.</para>

      <sect2>
        <title>Konfiguracja du¿ego rozmiaru pamiêci (<acronym>PAE</acronym>)</title>
	<indexterm>
	  <primary>Physical Address Extensions
	    (<acronym>PAE</acronym>)</primary>
	  <secondary>du¿y rozmiar pamiêci</secondary>
	</indexterm>

	<para>Maszyny du¿ego rozmiaru pamiêci wymagaj± dostêpu
	  do wiêkszej ilo¶ci pamiêci ni¿ 4 gigabajty, do których ograniczona
          jest przestrzeñ wirtualnych adresów u¿ytkowników+j±dra (ang. User+Kernel
          Virtual Address, <acronym>KVA</acronym>).  Z tego w³a¶nie powodu
          Intel doda³ w procesorach serii &pentium; Pro i pó¼niejszych obs³ugê
          36-bitowej przestrzeni adresów pamiêci fizycznej.</para>
	
        <para>Rozszerzenie <acronym>PAE</acronym> (ang. Physical Address Extension)
	  procesorów &intel; &pentium; Pro i pó¼niejszych pozwala na instalacjê
	  do 64 gigabajtów pamiêci.  &os; potrafi obs³ugiwaæ te rozszerzenie
          poprzez opcjê konfiguracji j±dra <option>PAE</option>, dostêpn± we wszystkich
	  bie¿±cych wersjach.  Z uwagi na ograniczenia wystêpuj±ce w architekturze
          pamiêci Intela, nie istnieje rozró¿nienie pomiêdzy rozmiarem pamiêci poni¿ej
	  i powy¿ej 4 gigabajtów.  Pamiêæ znajduj±ca siê powy¿ej
	  jest po prostu dodawana do puli dostêpnej pamiêci.</para>

	<para>By aktywowaæ obs³ugê <acronym>PAE</acronym> w j±drze, wystarczy dodaæ
          poni¿szy wiersz do pliku konfiguracyjnego naszego j±dra:</para>
	
	<programlisting>options		    PAE</programlisting>

	<note>
	  <para>Obs³uga <acronym>PAE</acronym> jest dostêpna we &os; jedynie
	    dla procesorów &intel; IA-32.  Nale¿y równie¿ zwróciæ uwagê,
	    i¿ obs³uga <acronym>PAE</acronym> we &os; nie zosta³a szeroko
	    przetestowana i powinna byæ traktowana jako drugiej jako¶ci
	    w porównaniu z innymi stabilnymi funkcjami &os;.</para>
	</note>

	<para>Obs³uga <acronym>PAE</acronym> we &os; posiada równie¿ pewne ograniczenia:</para>
	
	<itemizedlist>
	  <listitem>
	    <para>Dany proces nie ma dostêpu do wiêcej jak 4 gigabajtów przestrzeni
              pamiêci wirtualnej VM.</para>
	  </listitem>

	  <listitem>
	    <para>Modu³y <acronym>KLD</acronym> nie mog± byæ ³adowane do j±dra
              z w³±czon± opcj± <acronym>PAE</acronym>, z uwagi na ró¿nice
	      w strukturze skompilowanego modu³u i j±dra.</para>
	  </listitem>

	  <listitem>
	    <para>Sterowniki urz±dzeñ nie wykorzystuj±ce interfejsu &man.bus.dma.9;
	      spowoduj± utratê danych w j±drze z w³±czon± opcj±
	      <acronym>PAE</acronym>. Tym samym odradza siê ich stosowanie.
	      Z tego w³a¶nie powodu plik konfiguracyjny j±dra z opcj±
	      <filename>PAE</filename> jest dostarczany w wersji &os; nie zawieraj±cej
	      ¿adnych ze sterowników, o których nie wiadomo, ¿e wspó³pracuj± poprawnie
	      z j±drem z w³±czon± opcj± <acronym>PAE</acronym>.</para>
	  </listitem>

	  <listitem>
	    <para>Niektóre narzêdzia dostrajania systemu okre¶laj± wykorzystanie
              zasobów pamiêci na podstawie ilo¶ci dostêpnej pamiêci fizycznej.
              Takie programy mog± niepotrzebnie przydzielaæ wiêcej pamiêci
              ni¿ powinny, z uwag na naturê du¿ego rozmiaru pamiêci systemu
              <acronym>PAE</acronym>. Przyk³adem mo¿e byæ opcja sysctl
              <option>kern.maxvnodes</option>, która kontroluje maksymaln± liczbê
              dopuszczalnych wêz³ów w j±drze.  Zaleca siê modyfikacjê tych
              i innych parametrów do rozs±dnych warto¶ci.</para>
	  </listitem>

	  <listitem>
	    <para>Mo¿e byæ potrzebnym zwiêkszenie rozmiaru przestrzeni adresów
              <acronym>KVA</acronym> b±d¼ redukcja ilo¶ci specyficznych zasobów
              j±dra czêsto wykorzystywanych (patrz wy¿ej) w celu unikniêcia
	      wyczerpania <acronym>KVA</acronym>.  Do zwiêkszenia przestrzeni
              <acronym>KVA</acronym> mo¿e byæ wykorzystania opcja j±dra
              <option>KVA_PAGES</option>.</para>
	  </listitem>
	</itemizedlist>

	<para>W przypadku uwag odno¶nie wydajno¶ci i stabilno¶ci pracy zaleca siê
          lekturê podrêcznika systemowego &man.tuning.7;.  Podrêcznik
          systemowy &man.pae.4; zawiera natomiast aktualne informacje odno¶nie obs³ugi
          <acronym>PAE</acronym> we &os;.</para>
    </sect2>
  </sect1>

  <sect1 id="kernelconfig-trouble">
    <title>Je¶li pojawi± siê k³opoty</title>

    <para>Istnieje piêæ kategorii problemów, które mo¿emy napotkaæ buduj±c
      j±dro.  Oto one:</para>

    <variablelist>
      <varlistentry>
	<term>B³±d <command>config</command>:</term>

	<listitem>
          <para>Je¶li program &man.config.8; zg³osi³ b³±d podczas przetwarzania
            naszego pliku konfiguracyjnego, najprawdopodobniej pope³nili¶my ma³y
            b³±d w postaci literówki.  Na szczê¶cie &man.config.8; wy¶wietli liniê,
            z któr± mia³ problem, dziêki czemu bêdziemy mogli szybko do niej
            dotrzeæ.  Na przyk³ad, je¶li widzimy:</para>

	  <screen>config: line 17: syntax error</screen>

          <para>Upewnijmy siê, ¿e s³owo kluczowe zosta³o poprawnie wprowadzone,
            porównuj±c z oryginalnym plikiem <filename>GENERIC</filename>
            lub z innym wiarygodnym ¼ród³em.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>B³±d <command>make</command>:</term>

	<listitem>
          <para>Je¶li pojawi³ siê b³±d podczas wykonywania polecenia <command>make</command>,
            zwykle wskazuje to na b³±d w naszym opisie j±dra.  Nie jest to jednak b³±d na tyle
            wyra¼ny, aby wykaza³ go &man.config.8;.  Jak poprzednio, musimy przejrzeæ plik
            konfiguracyjny j±dra.  Je¶li w dalszym ci±gu nie mo¿emy rozwi±zaæ problemu,
            mo¿emy wys³aæ nasz plik konfiguracyjny na &a.pl.questions.b; gdzie nasz problem
            zostanie rozwi±zany bardzo szybko.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
        <term>J±dro nie uruchamia siê ponownie:<anchor
	  id="kernelconfig-noboot"></term>

	<listitem>
          <para>Je¶li nasze nowe j±dro nie uruchamia siê ponownie, b±d¼ nie potrafi
            rozpoznaæ urz±dzeñ, nie panikujmy! Na szczê¶cie, &os; jest wyposa¿one
            we wspania³y mechanizm przywracania po instalacji niekompatybilnego j±dra.
            Po prostu musimy wybraæ w loaderze j±dro, które chcemy uruchomiæ.  Mo¿emy to zrobiæ,
            gdy system odlicza od 10 w dó³.  Wybieramy opcjê numer sze¶æ: <quote>Escape to a loader
	    prompt</quote>.  Wpisujemy <command>unload kernel</command> a nastêpnie
            <command>boot /boot/<replaceable>kernel.old</replaceable>/kernel</command>, lub
            jak±kolwiek inn± nazwê j±dra, które uruchomi siê poprawnie.  Je¶li rekonfigurujemy
            j±dro, jedno sprawne powinni¶my mieæ zawsze pod rêk±.</para>

          <para>Po uruchomieniu z dobrym j±drem, mo¿emy sprawdziæ nasz plik konfiguracyjny,
            a nastêpnie spróbowaæ zbudowaæ je ponownie.  Pomocny jest plik
            <filename>/var/log/messages</filename>, w którym, po¶ród innych rzeczy, znajduj±
            siê równie¿ zapisy z uruchomieñ j±dra.  Ponadto równie¿ &man.dmesg.8; wy¶wietla
            informacje z j±dra, pochodz±ce z bie¿±cego uruchomienia.</para>

	  <note>
            <para>Je¶li mamy problemy ze zbudowaniem j±dra, upewnijmy siê, ¿e posiadamy
              j±dro <filename>GENERIC</filename> lub inne dzia³aj±ce j±dro nazwane tak,
              by nie zosta³o nadpisane po kolejnym procesie budowy.  Nie mo¿emy polegaæ
              na <filename>kernel.old</filename>, poniewa¿ gdy instalujemy nowe j±dro,
              <filename>kernel.old</filename> jest nadpisywane przez ostatnio zainstalowane
              j±dro, które mo¿e byæ niedzia³aj±ce.  Ponadto, powinni¶my tak szybko, jak to tylko
              mo¿liwe, przenie¶æ dzia³aj±ce j±dro do w³a¶ciwej lokalizacji
              <filename class="directory">/boot/kernel</filename>, albo komendy takie jak &man.ps.1;
              nie bêd± dzia³a³y poprawnie.  By to zrobiæ wystarczy zmieniæ nazwê katalogu
              zawieraj±cego w³a¶ciwe j±dro:</para>

	    <screen>&prompt.root; <userinput>mv /boot/kernel /boot/kernel.bad</userinput>
&prompt.root; <userinput>mv /boot/<replaceable>kernel.good</replaceable> /boot/kernel</userinput></screen>

	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
        <term>J±dro dzia³a, ale przesta³o &man.ps.1;:</term>

	<listitem>
          <para>Je¶li zainstalowali¶my inn± wersjê j±dra, ni¿ t±, z któr± by³y budowane
            narzêdzia systemowe, na przyk³ad j±dro -CURRENT na systemie -RELEASE, wiele
            poleceñ pokazuj±cych stan systemu, jak &man.ps.1;, czy &man.vmstat.8; nie bêdzie
            dzia³a³o.  Musimy dokonaæ <link linkend="makeworld">rekompilacji i instalacji
            world</link> zbudowanych na podstawie tej samej wersji ¼róde³ co nasze j±dro.
            Jest to jeden z powodów, przez które nie jest najlepszym pomys³em instalowanie
            ró¿nych wersji j±dra i systemu operacyjnego.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>
</chapter>

<!-- 
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
