<!--
     The FreeBSD Documentation Project
     The FreeBSD Japanese Documentation Project

     Original revision: r10327
     $FreeBSD$
-->

<chapter id="linuxemu">
  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Jim</firstname>
	<surname>Mock</surname>
	<contrib>再構成と一部の更新: </contrib>
      </author>
      <!-- 22 Mar 2000 -->
    </authorgroup>
    <authorgroup>
      <author>
	<firstname>Brian N.</firstname>
	<surname>Handy</surname>
	<contrib>オリジナルの文書を執筆: </contrib>
      </author>
      <author>
	<firstname>Rich</firstname>
	<surname>Murphey</surname>
      </author>
    </authorgroup>
  </chapterinfo>

  <title>Linux バイナリ互換機能</title>

  <para><emphasis>訳: &a.jp.kiroh;、1996 年 9 月 24 日</emphasis></para>

  <sect1>
    <title>この章では</title>
    <indexterm><primary>Linux バイナリ互換機能</primary></indexterm>
    <indexterm>
      <primary>バイナリ互換機能</primary>
      <secondary>Linux</secondary>
    </indexterm>

    <para>FreeBSD は、Linux を含む Unix-like
      なオペレーティングシステムとのバイナリ互換機能を提供しています。
      現時点では、一体なぜ FreeBSD が Linux
      バイナリを実行できるようにならなければならないのか自問しているのではないでしょうか?
      答えはきわめて簡単です。
      Linux は現在コンピュータの世界では最も<quote>ホットなモノ</quote>なのでたくさんの会社や開発者たちが
      Linux のためだけに開発を行なっています。そのため、残された私たち
      FreeBSD ユーザは彼らに対して FreeBSD ネイティブなアプリケーションも出すように言うしかないのです。
      問題は、FreeBSD バージョンも出した場合にどれくらいの数のユーザーが使うのかわからない、
      ということであり、そのため Linux 版のみを開発しているということなのです。
      そこで FreeBSD では Linux バイナリ互換機能が役に立つのです。</para>

    <para>簡単に言ってしまえば、この機能により全ての Linux アプリケーションの
      90% が修正なしに FreeBSD 上で起動できます。
      この中には <application>Star Office</application> や Linux 版の
      <application>Netscape</application>、<application>Adobe Acrobat</application>、
      <application>RealPlayer</application> 5 と 7、
      <application>VMWare</application>、<application>Oracle</application>、
      <application>WordPerfect</application>、<application>Doom</application>、
      <application>Quake</application> などがあります。
      また、ある状況においては Linux バイナリを Linux で動かすよりも
      FreeBSD で動かすほうが良いパフォーマンスが出るという報告もあります。</para>
    <indexterm>
      <primary>Linux</primary>
      <secondary><filename>/proc</filename> ファイルシステム</secondary>
    </indexterm>

    <para>しかしながら、いくつかの Linux に特有な OS の機能は FreeBSD ではサポートされていません。
      例えば、Linux の <filename>/proc</filename> ファイルシステムを過度に使うような
      Linux バイナリは FreeBSD では動きません (FreeBSD の <filename>/proc</filename>
      ファイルシステムとは異なるのです) し、
      仮想 8086 モードを有効にするような i386 特有の呼び出しも動きません。</para>

    <para>この章を読むと、以下のことがわかります。</para>
    <itemizedlist>
      <listitem><para>Linux バイナリ互換機能を有効にする方法。</para></listitem>
      <listitem><para>Linux 共有ライブラリを追加する方法。</para></listitem>
      <listitem><para>Linux アプリケーションを
	  FreeBSD システムにインストールする方法</para></listitem>
      <listitem><para>FreeBSD における Linux
	  互換機能の実装の詳細。</para></listitem>
    </itemizedlist>

    <para>この章を読む前に、以下のことを理解しておく必要があります。</para>

    <itemizedlist>
      <listitem><para>サードパーティ製ソフトウェアのインストール方法 (<xref
        linkend="ports">)</para></listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="linuxemu-lbc-install">
    <title>インストール</title>

    <indexterm><primary>KLD (kernel loadable object)</primary></indexterm>

    <para>Linux バイナリ互換機能は、デフォルトでは有効ではありません。
      この機能を有効にする最も簡単な方法は、
      <literal>linux</literal> KLD オブジェクト
      (<quote>Kernel LoaDable object</quote>) を読み込むことです。
      コマンドプロンプトで <command>linux</command>
      と打つだけでモジュールを読み込むことができます。</para>

    <para>Linux 互換機能を常に有効にする場合には、
      <filename>/etc/rc.conf</filename> に以下の行を追加してください。

    <programlisting>linux_enable=<quote>YES</quote></programlisting>

    <para>この設定により、<filename>/etc/rc.i386</filename>
      では次のような操作が行なわれます。</para>

    <programlisting># Start the Linux binary compatibility if requested.
#
case ${linux_enable} in
[Yy][Ee][Ss])
	echo -n ' linux';	linux &gt; /dev/null 2&gt;&amp;1
	;;
esac
    </programlisting>

    <para>望みの KLD モジュールがロードされているか確認したい時には
      &man.kldstat.8; コマンドを利用します。</para>

    <screen>&prompt.user; <userinput>kldstat</userinput>
Id Refs Address    Size     Name
 1    2 0xc0100000 16bdb8   kernel
 7    1 0xc24db000 d000     linux.ko</screen>
    <indexterm>
      <primary>カーネルオプション</primary>
      <secondary>LINUX</secondary>
    </indexterm>

      <para>
      何らかの理由で Linux KLD をロードしたくない、
      あるいはロードできないような場合には、
      <literal>options  LINUX</literal>
      をカーネルの設定ファイルに指定して、
      Linux バイナリ互換機能をカーネルにスタティックリンクしてください。
      そして、<xref linkend="kernelconfig">
      の記述にしたがって新しいカーネルをインストールしてください。</para>

    <sect2>
      <title>Linux ランタイムライブラリのインストール</title>
      <indexterm>
        <primary>Linux</primary>
	<secondary>Linux ライブラリのインストール</secondary>
      </indexterm>

      <para>これは、<link linkend="linuxemu-libs-port">linux_base</link>
	port を用いるか、もしくは <link
	linkend="linuxemu-libs-manually">手動で</link> インストールします。</para>

      <sect3 id="linuxemu-libs-port">
	<title>linux_base の port を用いたインストール</title>
	<indexterm><primary>ports collection</primary></indexterm>

	<para>ランタイムライブラリをインストールするには最も簡単な方法です。
	  <ulink url="http://www.FreeBSD.org/ja/ports/">Ports Collection</ulink> から他の port
	  をインストールするのと全く同じようにできます。</para>

	<screen>&prompt.root; <userinput>cd /usr/ports/emulators/linux_base</userinput>
&prompt.root; <userinput>make install distclean</userinput></screen>

	<para>これで Linux バイナリ互換機能が使えるはずです。
	  いくつかのプログラムはシステムライブラリのマイナーバージョンが違うと文句を言うかもしれませんが一般的には大した問題ではありません。</para>
      </sect3>

      <sect3 id="linuxemu-libs-manually">
	<title>手動でのライブラリのインストール</title>

	<para><quote>ports</quote> コレクションをインストールしていない場合、
	  代わりに手動でライブラリをインストールすることができます。
	  プログラムが必要とする Linux のシェアードライブラリとランタイムリンカが必要です。
	  また Linux ライブラリ用の <quote>shadow root</quote> ディレクトリ、
	  <filename>/compat/linux</filename> を作成する必要があります。
	  FreeBSD で動作する Linux プログラムが使用するシェアードライブラリは、
	  まずこのファイルツリーから検索されます。例えば、
	  Linux のプログラムが <filename>/lib/libc.so</filename>
	  をロードしようとした場合には、FreeBSD はまず
	  <filename>/compat/linux/lib/libc.so</filename>
	  を開こうとします。これが存在しなかった場合には、次に
	  <filename>/lib/libc.so</filename> を試します。
	  シェアードライブラリは、Linux の <command>ld.so</command>
	  が報告するパスではなく、
	  <filename>/compat/linux/lib</filename>
	  以下にインストールする必要があります。</para>

	<para>Linux のプログラムが必要とする
	  シェアードライブラリを探す必要があるのは、FreeBSD
	  のシステムに Linux
	  のプログラムをインストールする最初の数回だけでしょう。
	  それが過ぎれば、十分な Linux のシェアードライブラリがシステムにインストールされ、
	  新しくインストールした Linux のバイナリも余計な作業をせずに動作させることができるようになります。</para>
      </sect3>

      <sect3>
	<title>シェアードライブラリの追加</title>
	<indexterm><primary>共有ライブラリ</primary></indexterm>

	<para><filename>linux_base</filename> port をインストールした後に、
	  アプリケーションが必要なライブラリが存在しないというエラーを出したらどうしたらよいでしょうか?
	  Linux のバイナリがどのシェアードライブラリを必要とし、
	  そしてどこで入手できるか、どのように探したらよいでしょうか?
	  基本的には、以下の 2 種類の方法があります (以下の手順に従う場合には、
	  必要なインストール作業をおこなう FreeBSD システム上で root
	  として作業をおこなう必要があります)。</para>

	<para>Linux システムにアクセス可能ならば、
	  そのアプリケーションがどういうシェアードライブラリを必要としているのか調べ、
	  単に FreeBSD にそのライブラリをコピーするだけです。
	  次の例を見てみましょう。</para>

	<informalexample>
	  <para>FTP を使って Doom の Linux バイナリを取ってきて、
	    アクセスできる Linux システムに置いたとしましょう。
	    次のように <command>ldd linuxdoom</command> とするだけでどのシェアードライブラリが必要かチェックできます。</para>

	<screen>&prompt.user; <userinput>ldd linuxxdoom</userinput>
libXt.so.3 (DLL Jump 3.1) =&gt; /usr/X11/lib/libXt.so.3.1.0
libX11.so.3 (DLL Jump 3.1) =&gt; /usr/X11/lib/libX11.so.3.1.0
libc.so.4 (DLL Jump 4.5pl26) =&gt; /lib/libc.so.4.6.29</screen>

	  <indexterm><primary>シンボリックリンク</primary></indexterm>
	<para>最後のカラムに表示されているすべてのファイルを持って来て、
	  <filename>/compat/linux</filename> の下に置き、
	  最初のカラムに示されるファイル名にシンボリックリンクを張ります。
	  すなわち、FreeBSD システムでは以下のようなファイルが必要となります。</para>

	  <screen>/compat/linux/usr/X11/lib/libXt.so.3.1.0
/compat/linux/usr/X11/lib/libXt.so.3 -&gt; libXt.so.3.1.0
/compat/linux/usr/X11/lib/libX11.so.3.1.0
/compat/linux/usr/X11/lib/libX11.so.3 -&gt; libX11.so.3.1.0
/compat/linux/lib/libc.so.4.6.29 /compat/linux/lib/libc.so.4 -&gt; libc.so.4.6.29</screen>

	  <blockquote>
	    <note>
	      <para>最初のカラムに表示されているファイルとメジャーバージョンが同じ
	        Linux シェアードライブラリを既にインストールしている場合は、
		新たにコピーする 必要はありません。
		既にあるライブラリで動作するはずです。
		ただ、新しいバージョンのものをコピーすることをお奨めします。
		新しいライブラリにシンボリックリンクを変更したら、
		古いライブラリは削除してかまいません。</para>

	      <screen>/compat/linux/lib/libc.so.4.6.27
/compat/linux/lib/libc.so.4 -&gt; libc.so.4.6.27</screen>

	      <para>従って、以上のようなライブラリがインストールされており、
	        新しいバイナリに対する <command>ldd</command>
	        の出力が以下のようになる場合を考えます。</para>

	      <screen>libc.so.4 (DLL Jump 4.5pl26) -&gt; libc.so.4.6.29</screen>

	      <para>このように最後の番号が 1 つか 2 つ古いだけならば、普通は
	        <filename>/lib/libc.so.4.6.29</filename>
	        をコピーする必要はありません。わずかに古いライブラリでもプログラムは動作するはずだからです。
	        もちろん、以下のように新しいライブラリと置き換えても構いません。</para>

	      <screen>/compat/linux/lib/libc.so.4.6.29
/compat/linux/lib/libc.so.4 -&gt; libc.so.4.6.29</screen>
	    </note>
	  </blockquote>

	  <blockquote>
	    <note>
	      <para>シンボリックリンクのメカニズムは Linux
	      バイナリに<emphasis>のみ</emphasis>必要なことに注意してください。
	      FreeBSD のランタイムリンカはメジャーリビジョン番号の一致したライブラリを検索するので、
	      ユーザが気にする必要はありません。</para>
	    </note>
	  </blockquote>
	</informalexample>
      </sect3>
    </sect2>

    <sect2>
      <title>Linux の ELF バイナリのインストール</title>
      <indexterm>
        <primary>Linux</primary>
	<secondary>ELF バイナリ</secondary>
      </indexterm>

      <para>ELF のバイナリを使うためには、
	<quote>マークをつける (branding)</quote> 作業が必要になります。
	マークのない ELF バイナリを実行しようとすると以下のようなエラーメッセージを受けとってしまうことでしょう。</para>

      <screen>&prompt.user; <userinput>./my-linux-elf-binary</userinput>
ELF binary type not known
Abort</screen>

      <para>カーネルが FreeBSD の ELF バイナリと Linux のバイナリとを
	見分けられるようにするためには、&man.brandelf.1;
	ユーティリティを以下のようにして使ってください。</para>

      <screen>&prompt.user; <userinput>brandelf -t Linux my-linux-elf-binary</userinput></screen>

      <indexterm><primary>GNU ツールチェイン</primary></indexterm>
      <para>今では GNU のツールたちが
	ELF バイナリに自動的に適切なマークを付加するようになったので、
	今後はこの作業もだんだんと必要なくなってゆくでしょう。</para>
    </sect2>

    <sect2>
      <title>ホストネームリゾルバの設定</title>

      <para>DNS がうまく動作しなかったり、
	以下のようなエラーメッセージが表示され
	る場合は、<filename>/compat/linux/etc/host.conf</filename>
	ファイルを設定する必要があります。</para>

      <screen>resolv+: "bind" is an invalid keyword resolv+:
"hosts" is an invalid keyword</screen>

      <para>ファイルの内容を以下のように設定してください。</para>

	<programlisting>order hosts, bind
multi on</programlisting>

      <para>ここで、order は <filename>/etc/hosts</filename> を最初に検索し、
	次に DNS を検索するように指定します。
	<filename>/compat/linux/etc/host.conf</filename>
	がインストールされていない場合、
	Linux アプリケーションは FreeBSD の
	<filename>/etc/host.conf</filename> を使用しようとして、
	文法の違いによる警告を出力します。
	<filename>/etc/resolv.conf</filename> を利用してネームサーバの設定をしていない場合には、
	<literal>bind</literal> を削除してください。</para>
    </sect2>
  </sect1>

  <sect1 id="linuxemu-mathematicau">
    <title>Mathematica のインストール</title>

    <para><emphasis><application>Mathematica</application> 4.X 用に &a.murray;
      がアップデートし、Bojan Bistrovic <email>bojanb@physics.odu.edu</email>
      がマージしました。</emphasis></para>
    <indexterm>
      <primary>アプリケーション</primary>
      <secondary><application>Mathematica</application></secondary>
    </indexterm>

    <para>この章では、<application>Mathematica</application> 4.X Linux 版の FreeBSD
      へのインストールについて説明します。</para>

    <para>Linux 版の <application>Mathematica</application> は
      FreeBSD においても完璧に動きます。
      ただ、実行する際に Linux ABI を用いる必要があることを
      FreeBSD に教えるために、Wolfram によって出荷されているバイナリにマーク付け
      (branded) をする必要があります。</para>

    <para><application>Mathematica</application> や
      <application>Mathematica for Students</application> の Linux 版は Wolfram
      (<ulink url="http://www.wolfram.com/">http://www.wolfram.com/</ulink>)
      から直接注文することができます。</para>

    <sect2>
      <title>Linux バイナリへのマーク付け (branding)</title>

      <para>Linux 用バイナリは Wolfram の <application>Mathematica</application>
	CD-ROM の <filename>Unix</filename> ディレクトリにあります。
	インストーラーを起動する前にこのディレクトリをローカルディスクにコピーし、
	&man.brandelf.1; により Linux バイナリにマークを付けます。</para>

      <screen>&prompt.root; <userinput>mount /cdrom</userinput>
&prompt.root; <userinput>cp -rp /cdrom/Unix/ /localdir/</userinput>
&prompt.root; <userinput>brandelf -t Linux /localdir/Files/SystemFiles/Kernel/Binaries/Linux/*</userinput>
&prompt.root; <userinput>brandelf -t Linux /localdir/Files/SystemFiles/FrontEnd/Binaries/Linux/*</userinput>
&prompt.root; <userinput>brandelf -t Linux /localdir/Files/SystemFiles/Installation/Binaries/Linux/*</userinput>
&prompt.root; <userinput>brandelf -t Linux /localdir/Files/SystemFiles/Graphics/Binaries/Linux/*</userinput>
&prompt.root; <userinput>brandelf -t Linux /localdir/Files/SystemFiles/Converters/Binaries/Linux/*</userinput>
&prompt.root; <userinput>brandelf -t Linux /localdir/Files/SystemFiles/LicenseManager/Binaries/Linux/mathlm</userinput>
&prompt.root; <userinput>cd /localdir/Installers/Linux/</userinput>
&prompt.root; <userinput>./MathInstaller</userinput></screen>

       <para>また以下のようにすると、マーク付けされていない
	 ELF バイナリすべての扱いを、デフォルトで Linux
	 バイナリとすることが可能です。</para>

       <screen>&prompt.root; <userinput>sysctl -w kern.fallback_elf_brand=3</userinput></screen>

       <para>これは FreeBSD システムに対して、
	 マーク付けされていない ELF バイナリが
	 Linux ABI を利用するように設定します。こうすることで、
	 CDROM から直接インストーラを実行することが可能になります。</para>
    </sect2>

    <sect2>
      <title>Mathematica パスワードの取得</title>

      <para><application>Mathematica</application> を起動する前に Wolfram から自分の
	<quote>マシン ID</quote> に対応したパスワードを取得しなければいけません。</para>
      <indexterm>
        <primary>イーサネット</primary>
        <secondary>MAC アドレス</secondary>
      </indexterm>

      <para>一旦 Linux 互換ランタイムライブラリをインストールし、
	<application>Mathematica</application> を展開すれば Install ディレクトリにある
	<command>mathinfo</command> プログラムを起動して
	<quote>マシン ID</quote> を得ることができます。
	このマシン ID は、最初に見つかったイーサネットカードの MAC アドレスをベースに生成されます。</para>

      <screen>&prompt.root; <userinput>cd /localdir/Files/SystemFiles/Installation/Binaries/Linux</userinput>
&prompt.root; <userinput>mathinfo</userinput>
disco.example.com 7115-70839-20412</screen>

      <para>電子メールや電話、FAX などで Wolfram に登録する時にはこの
	<quote>マシン ID</quote> を渡します。
	するといくつかの数字から構成されるパスワードが返されるので、
	他の <application>Mathematica</application>
	プラットホームでするのと全く同じように最初に
	<application>Mathematica</application>
	を立ち上げる時にその情報を入力します。</para>
    </sect2>

    <sect2>
      <title>ネットワーク経由での Mathematica フロントエンドの起動</title>

      <para><application>Mathematica</application>
	は標準フォントセットにない特別な記号
	(積分記号、総和記号、ギリシャ文字など)
	を表示するために特殊なフォントを使用します。
	X プロトコルは、これらのフォントが
	<emphasis>ローカルマシンに</emphasis>
	インストールされていることを要求します。
	これはつまり、ローカルマシンに (CD-ROM や <application>Mathematica</application>
	がインストールされているホストマシンから)
	そのフォントをコピーしなければならないということです。
	これらのフォントは通常、CD-ROM の
	<filename>/cdrom/Unix/Files/SystemFiles/Fonts</filename> か、もしくはハードディスクの
	<filename>/usr/local/mathematica/SystemFiles/Fonts</filename>
	に置かれており、実際に使用されるフォントは <filename>Type1</filename> と
	<filename>X</filename> のサブディレクトリに格納されています。
	これらを利用するには次のような二つ方法があります。</para>

      <para>一つは、フォントファイルをすべて
	<filename>/usr/X11R6/lib/X11/fonts/</filename>
	以下にある既存のフォントディレクトリにコピーする方法です。
	この場合、<filename>fonts.dir</filename> にフォント名を追加し、
	先頭行のフォント総数を変更することも必要になります。
	あるいは、フォントをコピーしたディレクトリで
	<command>mkfontdir</command> を実行するだけでもかまいません。</para>

      <para>もう一つの方法は、
	<filename>/usr/X11R6/lib/X11/fonts/</filename>
	にフォントディレクトリごとコピーする方法です。</para>

      <screen>&prompt.root; <userinput>cd /usr/X11R6/lib/X11/fonts</userinput>
&prompt.root; <userinput>mkdir X</userinput>
&prompt.root; <userinput>mkdir MathType1</userinput>
&prompt.root; <userinput>cd /cdrom/Unix/Files/SystemFiles/Fonts</userinput>
&prompt.root; <userinput>cp X/* /usr/X11R6/lib/X11/fonts/X</userinput>
&prompt.root; <userinput>cp Type1/* /usr/X11R6/lib/X11/fonts/MathType1</userinput>
&prompt.root; <userinput>cd /usr/X11R6/lib/X11/fonts/X</userinput>
&prompt.root; <userinput>mkfontdir</userinput>
&prompt.root; <userinput>cd ../MathType1</userinput>
&prompt.root; <userinput>mkfontdir</userinput></screen>

      <para>そして、フォントパスに新しいフォントディレクトリを追加します。</para>

      <screen>&prompt.root; <userinput>xset fp+ /usr/X11R6/lib/X11/fonts/X</userinput>
&prompt.root; <userinput>xset fp+ /usr/X11R6/lib/X11/fonts/MathType1</userinput>
&prompt.root; <userinput>xset fp rehash</userinput></screen>

      <para>XFree86 サーバを使用しているなら、
	<filename>/etc/XF86Config</filename>
	に加えることでこれらのフォントを自動的に読み込むことができます。</para>
      <indexterm><primary>フォント</primary></indexterm>

      <para>
	<filename>/usr/X11R6/lib/X11/fonts/Type1</filename> という
	ディレクトリが<emphasis>存在していない</emphasis>場合には、
	上記例の <filename>MathType1</filename> を
	<filename>Type1</filename>
	とすることができます。</para>
    </sect2>
  </sect1>

  <sect1 id="linuxemu-oracle">
    <sect1info>
      <authorgroup>
	<author>
	  <firstname>Marcel</firstname>
	  <surname>Moolenaar</surname>
	  <contrib>寄贈: </contrib>
	</author>
	<!-- marcel@cup.hp.com -->
      </authorgroup>
    </sect1info>
    <title>Oracle のインストール</title>

    <indexterm>
      <primary>アプリケーション</primary>
      <secondary><application>Oracle</application></secondary>
    </indexterm>

    <sect2>
      <title>はじめに</title>
      <para>このドキュメントでは Oracle 8.0.5 と Oracle 8.0.5.1 Enterprise Edition
	の Linux 版を FreeBSD にインストールするための手順を解説します。</para>
    </sect2>

    <sect2>
      <title>Linux 環境のインストール</title>

      <para>まずは Ports Collection から <filename>linux_base</filename> と
	<filename>linux_devtools</filename> をインストールしてください。
	これらの ports は FreeBSD 3.2 のリリース後にコレクションに加えられました。
	もし FreeBSD 3.2 もしくはそれよりも古いものを使っている場合は
	ports コレクションをアップデートしましょう。ついでに FreeBSD
	をアップデートするのもいいでしょう。もし <filename>linux_base-6.1</filename>
	や <filename>linux_devtools-6.1</filename> でうまくいかなければ
	5.2 を試してみてください。</para>

      <para>もし賢いエージェント (intelligent agent) を起動したいなら
	Red Hat Tcl パッケージ <filename>tcl-8.0.3-20.i386.rpm</filename>
	もインストールする必要があるでしょう。
	公式の RPM パッケージをインストールするには一般的に次のようにします。</para>

      <screen>&prompt.root; <userinput>rpm -i --ignoreos --root /compat/linux --dbpath /var/lib/rpm <replaceable>package</replaceable></userinput></screen>

      <para>パッケージのインストール時にエラーが出てはいけません。</para>
    </sect2>

    <sect2>
      <title>Oracle 環境の構築</title>

      <para>Oracleをインストールする前に、適切な環境を設定する必要があります。
	このドキュメントでは、
	Oracle のインストールガイドに書いてあるようなことではなく
	FreeBSD で Linux 用 Oracle
	を動かすために<emphasis>特別に</emphasis>必要なことのみを解説します。</para>

      <sect3 id="linuxemu-kernel-tuning">
	<title>カーネルのチューニング</title>
	<indexterm><primary>カーネルのチューニング</primary></indexterm>

	<para>Oracle インストールガイドにあるように、
	  シェアードメモリーの最大サイズを設定しなければいけません。
	  FreeBSD では <literal>SHMMAX</literal> を使わないようにしてください。
	  <literal>SHMMAX</literal> は単に <literal>SHMMAXPGS</literal>
	  と <literal>PGSIZE</literal> から計算されるだけなのです。
	  従って、<literal>SHMMAXPGS</literal> を使うようにしましょう。
	  インストールガイドに記述されている他のオプションは使えます。
	  例えば以下のようにします。</para>

	<programlisting>options SHMMAXPGS=10000
options SHMMNI=100
options SHMSEG=10
options SEMMNS=200
options SEMMNI=70
options SEMMSL=61</programlisting>

	<para>これらのオプションを意図した Oracle
	  の使い方に合わせて設定してください。</para>

	<para>また、
	  次のオプションがカーネルのコンフィギュレーションファイルにあることも確認します。</para>

<programlisting>options SYSVSHM #SysV shared memory
options SYSVSEM #SysV semaphores
options SYSVMSG #SysV interprocess communication</programlisting>
      </sect3>

      <sect3 id="linuxemu-oracle-account">

	<title>Oracle 用アカウント</title>

	<para>他のアカウントを作るのと同じように Oracle 用のアカウントを作ります。
	  Oracle 用のアカウントに特別なのは Linux のシェルを割り当てるところだけです。
	  <filename>/etc/shells</filename> に <literal>/compat/linux/bin/bash</literal>
	  を加え、Oracle 用のアカウントに設定します。</para>
      </sect3>

      <sect3 id="linuxemu-environment">
	<title>環境設定</title>

	<para><envar>ORACLE_HOME</envar> や <envar>ORACLE_SID</envar>
	  といった通常の Oracle 用の変数の他に次の変数も設定しなければなりません。</para>

	<informaltable frame="none">
	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry>変数</entry>

		<entry>値</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry><envar>LD_LIBRARY_PATH</envar></entry>

		<entry><literal>$ORACLE_HOME/lib</literal></entry>
	      </row>

	      <row>
		<entry><envar>CLASSPATH</envar></entry>

		<entry><literal>$ORACLE_HOME/jdbc/lib/classes111.zip</literal></entry>
	      </row>

	      <row>
		<entry><envar>PATH</envar></entry>

		<entry><literal>/compat/linux/bin
/compat/linux/sbin
/compat/linux/usr/bin
/compat/linux/usr/sbin
/bin
/sbin
/usr/bin
/usr/sbin
/usr/local/bin
$ORACLE_HOME/bin</literal></entry>
	      </row>
	    </tbody>
	  </tgroup>
	</informaltable>

	<para>全ての環境変数は <filename>.profile</filename>
	  で設定することをお勧めします。
	  完璧なサンプルは以下の通りです。</para>

<programlisting>ORACLE_BASE=/oracle; export ORACLE_BASE
ORACLE_HOME=/oracle; export ORACLE_HOME
LD_LIBRARY_PATH=$ORACLE_HOME/lib
export LD_LIBRARY_PATH
ORACLE_SID=ORCL; export ORACLE_SID
ORACLE_TERM=386x; export ORACLE_TERM
CLASSPATH=$ORACLE_HOME/jdbc/lib/classes111.zip
export CLASSPATH
PATH=/compat/linux/bin:/compat/linux/sbin:/compat/linux/usr/bin:/compat/linux/usr/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:$ORACLE_HOME/bin
export PATH</programlisting>
      </sect3>
    </sect2>

    <sect2>
      <title>Oracle のインストール</title> 

      <para>インストーラーを起動する前に、<filename>/var/tmp</filename>
	に <filename>.oracle</filename>
	という名前のディレクトリを作る必要がありますが、
	これは Linux エミュレーターにおけるちょっとした不整合のためです。
	このディレクトリは誰でもが書けるか、もしくは oracle ユーザーのものにしておきます。
	これで特に問題なく Oracle がインストールできるでしょう。
	もし問題が起こったら、まずは Oracle の配布物や設定をチェックしてください。
	Oracle のインストールが終わったら次の二つのサブセクションで解説するパッチを当てます。</para>

      <para>よくあるトラブルは、TCP プロトコルアダプターが正しくインストールされていないことです。
	そのため、一切 TCP リスナーを起動することができないのです。
	次の操作はこの問題を解決するのに役立ちます。</para>

      <screen>&prompt.root; <userinput>cd $ORACLE_HOME/network/lib</userinput>
&prompt.root; <userinput>make -f ins_network.mk ntcontab.o</userinput>
&prompt.root; <userinput>cd $ORACLE_HOME/lib</userinput>
&prompt.root; <userinput>ar r libnetwork.a ntcontab.o</userinput>
&prompt.root; <userinput>cd $ORACLE_HOME/network/lib</userinput>
&prompt.root; <userinput>make -f ins_network.mk install</userinput></screen>

      <para>もう一度 <filename>root.sh</filename> を起動するのを忘れないように!</para>

    <sect3 id="linuxemu-patch-root">
      <title>root.sh へのパッチ</title>

	<para>Oracle をインストールする時、<username>root</username>
	  で行なう必要のあるいくつかの操作は <filename>root.sh</filename>
	  と呼ばれるシェルスクリプトに記録されます。
	  <filename>root.sh</filename> は <filename>orainst</filename>
	  ディレクトリにあります。次のパッチを root.sh に当てて
	  正しい場所にある <command>chown</command> コマンドを使うようにするか、
	  代わりに Linux ネイティブなシェルのもとでスクリプトを走らせましょう。</para>

	<programlisting>*** orainst/root.sh.orig Tue Oct 6 21:57:33 1998
--- orainst/root.sh Mon Dec 28 15:58:53 1998
***************
*** 31,37 ****
# This is the default value for CHOWN
# It will redefined later in this script for those ports
# which have it conditionally defined in ss_install.h
! CHOWN=/bin/chown
#
# Define variables to be used in this script
--- 31,37 ----
# This is the default value for CHOWN
# It will redefined later in this script for those ports
# which have it conditionally defined in ss_install.h
! CHOWN=/usr/sbin/chown
#
# Define variables to be used in this script</programlisting>

	<para>CD-ROM からのインストールでない場合は <filename>root.sh</filename>
	  のソースにパッチを当ててもいいでしょう。
	  <filename>rthd.sh</filename> という名前でソースツリーの
	  <filename>orainst</filename> というディレクトリにあります。</para>
      </sect3>

      <sect3 id="linuxemu-patch-tcl">
	<title>genclntsh へのパッチ</title>

	<para><command>genclntsh</command>
	  スクリプトは一つの共有クライアントライブラリを生成するのに用いられます。
	  これはデモを作る時に使われます。
	  PATH の定義をコメントアウトするために次のパッチを当ててください。</para>

	<programlisting>*** bin/genclntsh.orig Wed Sep 30 07:37:19 1998
--- bin/genclntsh Tue Dec 22 15:36:49 1998
***************
*** 32,38 ****
#
# Explicit path to ensure that we're using the correct commands
#PATH=/usr/bin:/usr/ccs/bin export PATH
! PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin export PATH
#
# each product MUST provide a $PRODUCT/admin/shrept.lst
--- 32,38 ----
#
# Explicit path to ensure that we're using the correct commands
#PATH=/usr/bin:/usr/ccs/bin export PATH
! #PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin export PATH
#
# each product MUST provide a $PRODUCT/admin/shrept.lst</programlisting>
      </sect3>
    </sect2>

    <sect2>
      <title>Oracle の起動</title>

      <para>インストラクションに従えば、Linux でと同じように
	<application>Oracle</application> を起動できるでしょう。</para>
    </sect2>
  </sect1>

  <sect1 id="sapr3">
    <sect1info>
      <authorgroup>
	<author>
	  <firstname>Holger</firstname>
	  <surname>Kill</surname>
	  <contrib>寄稿: </contrib>
	</author>
      </authorgroup>
      <!-- holger.kipp@alogis.com -->
      <authorgroup>
	<author>
	  <firstname>Valentino</firstname>
	  <surname>Vaschetto</surname>
	  <contrib>SGML への変換: </contrib>
	</author>
      </authorgroup>
    </sect1info>

    <title>SAP R/3 (4.6B - IDES) のインストール</title>

    <indexterm>
      <primary>アプリケーション</primary>
      <secondary><application>SAP R/3</application></secondary>
    </indexterm>

    <sect2 id="preface">
      <title>まえがき</title>

      <para>この文書は、<application>SAP R/3 4.6B IDES-System</application>
	with <application>Oracle 8.0.5</application> for
	Linux を FreeBSD 4.3 上にインストールする方法を、FreeBSD
	4.3-STABLE と <application>Oracle 8.0.5</application>
	のインストール方法と一緒に説明しています。</para>

      <para>この文書では、重要な手順をすべて詳しく説明しようとしていますが、
	<application>Oracle</application> および <application>SAP R/3</application>
	のインストールの手引きを置き換えるものではありません。</para>

      <para><application>SAP</application> や <application>Oracle</application>
	に特有の質問については、<application>SAP R/3</application> の
	Linux 版についてくる文書や <application>Oracle</application> と
	<application>SAP OSS</application>
	が出している資料をご覧ください。</para>
    </sect2>

    <sect2 id="software">
      <title>ソフトウェア</title>

      <para>SAP のインストールには以下の CDROM を使いました。</para>
      <informaltable>
	<tgroup cols=3>
	<thead>
	<row>
	  <entry>名称</entry> <entry>番号</entry> <entry>説明</entry>
	</row>
	</thead>
	<tbody>
	<row>
	  <entry>KERNEL</entry> <entry>51009113</entry> <entry>SAP Kernel Oracle /
	  Installation / AIX, Linux, Solaris</entry>
	</row>
	<row>
	  <entry>RDBMS</entry> <entry>51007558</entry> <entry>Oracle / RDBMS 8.0.5.X /
	  Linux</entry>
	</row>
	<row>
	  <entry>EXPORT1</entry> <entry>51010208</entry> <entry>IDES / DB-Export / Disc
	  1 of 6</entry>
	</row>
	<row>
	  <entry>EXPORT2</entry> <entry>51010209</entry> <entry>IDES / DB-Export / Disc
	  2 of 6</entry>
	</row>
	<row>
	  <entry>EXPORT3</entry> <entry>51010210</entry> <entry>IDES / DB-Export /
	  Disc3 of 6</entry>
	</row>
	<row>
	  <entry>EXPORT4</entry> <entry>51010211</entry> <entry>IDES / DB-Export /
	  Disc4 of 6</entry>
	</row>
	<row>
	  <entry>EXPORT5</entry> <entry>51010212</entry> <entry>IDES / DB-Export /
	  Disc5 of 6</entry>
	</row>
	<row>
	  <entry>EXPORT6</entry> <entry>51010213</entry> <entry>IDES / DB-Export /
	  Disc6 of 6</entry>
	</row>
	</tbody>
	</tgroup>
      </informaltable>

      <para>更に、<application>Oracle 8 Server</application>
	(Pre-production バージョン 8.0.5 for Linux, カーネルバージョン
	2.0.33) の CD も使いましたが、これは必ずしも必要ではありません。
	また、もちろん FreeBSD 4.3-STABLE
	(4.3-RELEASE から間もない時期のものです) も利用しました。</para>
    </sect2>

    <sect2 id="sap-notes">
      <title>SAP ノート</title>

      <para>以下のノートは、<application>SAP R/3</application>
	をインストールする前に読んでおくべき、
	もしくはインストールの際に役立つことが分かっているものです。</para>

      <informaltable>
	<tgroup cols="2">
	<thead>
	<row>
	  <entry>番号</entry>
	  <entry>題名</entry>
	</row>
	</thead>
	<tbody>
	<row>
	  <entry>0171356</entry> <entry>SAP Software auf Linux: grundlegenden
	  Anmerkungen</entry>
	</row>
	<row>
	  <entry>0201147</entry> <entry>INST: 4.6C R/3 Inst. on UNIX -
	  Oracle</entry>
	</row>
	<row>
	  <entry>0373203</entry> <entry>Update / Migration Oracle 8.0.5 -->
	  8.0.6/8.1.6 LINUX</entry>
	</row>
	<row>
	  <entry>0072984</entry> <entry>Release of Digital UNIX 4.0B for
	  Oracle</entry>
	</row>
	<row>
	  <entry>0130581</entry> <entry>R3SETUP step DIPGNTAB terminates</entry>
	</row>
	<row>
	  <entry>0144978</entry> <entry>Your system has not been installed
	  correctly</entry>
	</row>
	<row>
	  <entry>0162266</entry> <entry>Questions and tips for R3SETUP on Windows
	  NT / W2K</entry>
	</row>
	</tbody>
	</tgroup>
      </informaltable>

    </sect2>

    <sect2 id="hardware-requirements">
      <title>ハードウェア要件</title>

      <para>以下の機器であれば <application>SAP R/3
	System</application> (4.6B) を動かすのに十分です。</para>

      <informaltable>
	<tgroup cols="3">
	<thead>
	<row>
	  <entry>構成部品</entry>
	  <entry>4.6B</entry>
	  <entry>4.6C</entry>
	</row>
	</thead>
	<tbody>
	<row>
	  <entry>プロセッサ</entry>
	  <entry>2 × 800MHz Pentium III</entry>
	  <entry>2 × 800MHz Pentium III</entry>
	</row>
	<row>
	  <entry>メモリ</entry>
	  <entry>1GB ECC</entry>
	  <entry>2GB ECC</entry>
	</row>
	<row>
	  <entry>ハードディスク容量</entry>
	  <entry>50-60GB (IDES)</entry>
	  <entry>50-60GB (IDES)</entry>
	</row>
	</tbody>
	</tgroup>
      </informaltable>

      <para>業務で利用するなら、大容量キャッシュメモリを備えた Xeon
	プロセッサ、高速なディスク (SCSI, ハードウェア RAID コントローラ)、
	USV および ECC-RAM を推奨します。
	ハードディスク容量が大きいのは、設定済みの IDES システムが、
	インストール時に 27 GB のデータベースファイルを作成するためです。
	通常、インストール後には一部のテーブル領域を拡張する必要があります。</para>

      <para>私は、800MHz の Pentium III を 2 個、Adaptec 29160
	Ultra160 SCSI アダプタ (40/80 GB DLT テープドライブと CDROM
	にアクセスするため)、Mylex AcelleRAID
	(2 チャンネル、ファームウェアバージョン 6.00-1-00、32MB RAM)
	を積んだデュアルプロセッサボードを使いました。Mylex RAID
	コントローラには 17GB のハードディスク 2 台 (ミラー) と
	36GB のハードディスク (RAID 5) 4 台が接続されています。</para>

    </sect2>

    <sect2 id="installation">
      <title>FreeBSD 4.3-STABLE のインストール</title>

      <para>まず、FreeBSD 4.3-STABLE をインストールしました。FTP
	経由のデフォルトインストールを行いました。</para>

      <sect3 id="install-via-ftp">
	<title>FTP 経由のインストール</title>
	<para>ディスクイメージ kern.flp と mfsroot.flp を入手して、
	  フロッピーディスクに書き込んでください (私は
	  ftp7.de.freebsd.org から入手しました。
	  適切なミラーサイトを選んでください)。</para>

	<screen>&prompt.root; <userinput>dd if=kern.flp of=/dev/fd0</userinput> 
&prompt.root; <userinput>dd if=mfsroot.flp of=/dev/fd0</userinput> </screen>

	<para>2 つのイメージファイルそれぞれについて、
	  別のディスクを使うようにしてください。それから kern.flp
	  を書き込んだフロッピーディスクで起動して、指示に従ってください。
	  私は、次のようにディスクを分割しました。</para>

	<informaltable>
	  <tgroup cols="4">
	  <thead>
	  <row>
	    <entry>ファイルシステム</entry>
	    <entry>容量 (1kB ブロック)</entry>
	    <entry>容量 (GB)</entry>
	    <entry>マウントポイント</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>/dev/da0s1a</entry>
	    <entry>1.016.303</entry>
	    <entry>1</entry>
	    <entry>/</entry>
	  </row>
	  <row>
	    <entry>/dev/da0s1b</entry>
	    <entry> </entry>
	    <entry>6</entry>
	    <entry>&lt;swap&gt;</entry>
	  </row>
	  <row>
	    <entry>/dev/da0s1e</entry>
	    <entry>2.032.623</entry>
	    <entry>2</entry>
	    <entry>/var</entry>
	  </row>
	  <row>
	    <entry>/dev/da0s1f</entry>
	    <entry>8.205.339</entry>
	    <entry>8</entry>
	    <entry>/usr</entry>
	  </row>
	  <row>
	    <entry>/dev/da1s1e</entry>
	    <entry>45.734.361</entry>
	    <entry>45</entry>
	    <entry>/compat/linux/oracle</entry>
	  </row>
	  <row>
	    <entry>/dev/da1s1f</entry>
	    <entry>2.032.623</entry>
	    <entry>2</entry>
	    <entry>/compat/linux/sapmnt</entry>
	  </row>
	  <row>
	    <entry>/dev/da1s1g</entry>
	    <entry>2.032.623</entry>
	    <entry>2</entry>
	    <entry>/compat/linux/usr/sap</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para>はじめに、Mylex のソフトウェアで論理ドライブ
	  2 台を設定して初期化しなければなりませんでした。
	  このソフトウェアはボードに組み込まれていて、
	  PC 起動時に動かせます。</para>

	<para>このディスクの割り当て方は SAP
	  の推奨と少し異なることに注意してください。SAP は oracle (その他)
	  サブディレクトリを別途マウントするように提案していますが、
	  私は簡便であることを優先して、
	  実際にサブディレクトリとして作成するだけにしました。</para>

      </sect3>

      <sect3 id="getlatestsources">
	<title>最新の STABLE のソースコードの入手</title>

	<para>FreeBSD 4.3-STABLE 以降では、
	  最新のソースコードは楽に手に入ります。それより前のバージョンの
	  FreeBSD では、/etc/cvsup
	  に自分で書いたスクリプトを置いていました。FreeBSD 4.3 で
	  <application>CVSup</application> を設定するのは簡単です。
	  <username>root</username> で以下を実行してください。</para>

	<screen>&prompt.root; <userinput>cp /etc/defaults/make.conf /etc/make.conf</userinput>
&prompt.root; <userinput>vi /etc/make.conf</userinput> </screen>

	<para><filename>/etc/make.conf</filename> ファイルで、
	  以下の項目を有効にしておかねばなりません。</para>

	<programlisting>SUP_UPDATE=    yes
SUP=           /usr/local/bin/cvsup
SUPFLAGS=      -g -L 2
SUPHOST=       cvsup8.FreeBSD.org
SUPFILE=       /usr/share/examples/cvsup/stable-supfile 
PORTSSUPFILE=  /usr/share/examples/cvsup/ports-supfile 
DOCSUPFILE=    /usr/share/examples/cvsup/doc-supfile</programlisting>

	<para><emphasis>SUPHOST</emphasis>
	  の値は適切なものに変更してください。
	  <filename>/usr/share/examples/cvsup</filename>
	  にある supfile で十分でしょう。
	  もしもすべてのドキュメントを持ってくるのが嫌なら、
	  <emphasis>DOCSUPFILE</emphasis>
	  の項は無効なままにしておいてください。
	  ここまでくれば、<application>cvsup</application>
	  を起動して stable
	  の最新のソースコードを入手するのはたやすいことです。</para>

	<screen>&prompt.root; <userinput>cd /usr/src</userinput>
&prompt.root; <userinput>make update</userinput> </screen>

      </sect3>


      <sect3 id="makeworldandnewkernel">
	<title><command>make world</command> と新しいカーネル</title>

	<para>最初にすべきことは、ソースコードのインストールです。root
	  ユーザで次の作業を行ってください。</para>

	<screen>&prompt.root; <userinput>cd /usr/src</userinput>
&prompt.root; <userinput>make world</userinput> </screen>

	<para>最後まで実行できたら、
	  新しいカーネルの作成と設定を行えます。
	  通常はここでカーネルコンフィグレーションファイルをカスタマイズします。
	  コンピュータに <hostid>troubadix</hostid> という名前をつけているので、
	  コンフィグレーションファイルを <filename>troubadix</filename>
	  という名称にするのが自然です。</para>

	<screen>&prompt.root; <userinput>cd /usr/src/sys/i386/conf</userinput>
&prompt.root; <userinput>cp GENERIC TROUBADIX</userinput>
&prompt.root; <userinput>vi TROUBADIX</userinput> </screen>

	<para>この段階で、どのドライバを使うか、
	  使わないかといったことを決定できます。詳しい説明は、適当な文書や
	  <filename>LINT</filename> ファイルをご覧ください。</para>

	<para>また、後述するパラメータをいれることもできます。
	  新しいカーネルを作成するには次のようにしてください。</para>

	<screen>&prompt.root; <userinput>cd /usr/src/sys/i386/conf</userinput>
&prompt.root; <userinput>config TROUBADIX</userinput>
&prompt.root; <userinput>cd /usr/src/sys/compile/TROUBADIX</userinput>
&prompt.root; <userinput>make depend</userinput>
&prompt.root; <userinput>make</userinput>
&prompt.root; <userinput>make install</userinput> </screen>


	<para><command>make install</command> が無事終わったら、
	  コンピュータを再起動して新しいカーネルを動かしてください。</para>

      </sect3>
    </sect2>

    <sect2 id="installingthelinuxenviornment">
      <title>Linux 環境のインストール</title>

      <para>(2001 年 5 月 2 日時点の 4.3-STABLE 用に) 必要な
	RPM ファイルをダウンロードするのに多少問題があったので、
	以下の場所も (他がすべてだめで、ここが古くなってしまっていなければ)
	試してみるとよいかもしれません。</para>

      <itemizedlist>
	<listitem><para>ftp7.de.freebsd.org/pub/FreeBSD/distfiles/rpm</para></listitem>
	<listitem><para>ftp.redhat.com/pub/redhat/linux/6.1/en/os/i386/RedHat/RPMS</para></listitem>
      </itemizedlist>

      <sect3 id="installinglinuxbase-system">
	<title>Linux ベースシステムのインストール</title>
	<para>まず、Linux のベースシステムを (root で)
	  インストールしなければなりません。</para>

	<screen>&prompt.root; <userinput>cd /usr/ports/emulators/linux_base</userinput>
&prompt.root; <userinput>make package</userinput> </screen>
      </sect3>


      <sect3 id="installinglinuxdevelopment">
	<title>Linux 開発環境のインストール</title>

	<para>次に、必要なら Linux 開発環境をインストールします。</para>

	<screen>&prompt.root; <userinput>cd /usr/ports/devel/linux_devtools</userinput>
&prompt.root; <userinput>make package</userinput> </screen>

      </sect3>


      <sect3 id="installingnecessaryrpms">
	<title>必要な RPM のインストール</title>
	<indexterm><primary>RPMs</primary></indexterm>

	<para>R3SETUP プログラムを動かすには、pam
	  サポートが必要になります。
	  これが更に他の package を必要としているので、
	  私は結局いくつもの package をインストールすることになりました。
	  それでも、pam は足りない package があると文句をいうので、
	  強制的にインストールしたら動きました。
	  pam 以外にインストールした package が本当に必要なのか、pam
	  package をインストールするのに十分だったのかよくわかっていません。</para>

	<para>なんにせよ、これが私がインストールした package 一覧です。</para>

	<itemizedlist>
	  <listitem><para>cracklib-2.7-5.i386.rpm</para></listitem>
	  <listitem><para>cracklib-dicts-2.7-5.i386.rpm</para></listitem>
	  <listitem><para>pwdb-0.60-1.i386.rpm</para></listitem>
	  <listitem><para>pam-0.68-7.i386.rpm</para></listitem>
	</itemizedlist>

	<para>これらの package は、
	  以下のコマンドでインストールしました。</para>

	<screen>&prompt.root; <userinput>rpm -i --ignoreos --root /compat/linux --dbpath /var/lib/rpm &lt;package_name&gt;</userinput> </screen>

	<para>ただし、pam
	  パッケージは次のようにして強制的にインストールしました。</para>

	<screen>&prompt.root; <userinput>rpm -i --ignoreos --nodeps --root /compat/linux --dbpath /var/lib/rpm pam-0.68-7.i386.rpm</userinput> </screen>

	<para><application>Oracle</application> が intelligent agent
	  を動作させるには、次の RedHat Tcl package を (FreeBSD
	  ハンドブックにあるように) インストールしなければなりませんでした。
	  <filename>tcl-8.0.5-30.i386.rpm</filename> (そうしないと、
	  <application>Oracle</application>
	  インストール中の再リンクがうまくゆきません)。
	  <application>Oracle</application>
	  の再リンクについては他にも問題がありますが、
	  私が理解している限りでは Oracle-Linux の問題で、FreeBSD
	  に特有のものではありません。</para>

      </sect3>
    </sect2>

    <sect2 id="creatingsapr3env">
      <title>SAP/R3 環境の構築</title>

      <sect3 id="filesystemsandmountpoints">
	<title>必要となるファイルシステムとマウントポイントの作成</title>

	<para>単純なインストールでは、
	  次のファイルシステムを作成すれば事足ります。</para>

	<informaltable>
	  <tgroup cols="2">
	  <thead>
	  <row>
	    <entry>マウントポイント</entry>
	    <entry>サイズ (GB)</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>/compat/linux/oracle</entry>
	    <entry>45 GB</entry>
	  </row>
	  <row>
	    <entry>/compat/linux/sapmnt</entry>
	    <entry>2 GB</entry>
	  </row>
	  <row>
	    <entry>/compat/linux/usr/sap</entry>
	    <entry>2 GB</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para>また、私は FreeBSD が正しいパスを見付けられるように、
	  いくつかリンクを作成しました。</para>

	<screen>&prompt.root; <userinput>ln -s /compat/linux/oracle /oracle</userinput>
&prompt.root; <userinput>ln -s /compat/linux/sapmnt /sapmnt</userinput>
&prompt.root; <userinput>ln -s /compat/linux/usr/sap /usr/sap</userinput> </screen>
      </sect3>

      <sect3 id="creatingusersanddirectories">
	<title>ユーザとディレクトリの作成</title>

	<para><application>SAP R/3</application> には、
	  2 名のユーザと 3 つのグループが必要です。
	  ユーザ名は 3 文字からなる <application>SAP</application> システム ID (SID)
	  に準じています。SID の中には <application>SAP</application>
	  が予約しているものがあります
	  (たとえば <emphasis>SAP</emphasis> や <emphasis>NIX</emphasis>
	  です。すべて網羅した一覧は SAP のドキュメントをご覧ください)。
	  IDES のインストールでは、<emphasis>IDS</emphasis> を使いました。
	  したがって、次のグループができます (グループ ID
	  は異なっていてもかまいません。
	  これは単に私がインストールした時に使用した値です)。</para>

	<informaltable>
	  <tgroup cols="3">
	  <thead>
	  <row>
	    <entry>グループ ID</entry>
	    <entry>グループ名</entry>
	    <entry>説明</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>100</entry>
	    <entry>dba</entry>
	    <entry>データベース管理者</entry>
	  </row>
	  <row>
	    <entry>101</entry>
	    <entry>sapsys</entry>
	    <entry>SAP システム</entry>
	  </row>
	  <row>
	    <entry>102</entry>
	    <entry>oper</entry>
	    <entry>データベースオペレータ</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para>デフォルトの Oracle のインストールでは、
	  <groupname>dba</groupname> グループだけが使われます。
	  <groupname>oper</groupname> グループとして、
	  <groupname>dba</groupname> を使う人もいます。(詳しくは Oracle と
	  SAP のドキュメントを参照してください)。</para>

	<para>以下のユーザも必要になります。</para>

	<informaltable>
	  <tgroup cols="6">
	  <thead>
	  <row>
	    <entry>ユーザ ID</entry>
	    <entry>ユーザ名</entry>
	    <entry>一般名称</entry>
	    <entry>グループ</entry>
	    <entry>追加グループ</entry>
	    <entry>説明</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>1000</entry>
	    <entry>idsadm</entry>
	    <entry>&lt;sid&gt;adm</entry>
	    <entry>sapsys</entry>
	    <entry>oper</entry>
	    <entry>SAP 管理者</entry>
	  </row>
	  <row>
	    <entry>1002</entry>
	    <entry>oraids</entry>
	    <entry>ora&lt;sid&gt;</entry>
	    <entry>dba</entry>
	    <entry>oper</entry>
	    <entry>DB 管理者</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para><command>adduser</command> でユーザを追加するには、
	  以下の項目が必要になります
	  (シェルとホームディレクトリを控えてください)。
	  SAP 管理者については、</para>

	<programlisting>Name: idsadm            &lt;sid&gt;adm
Password: ******
Fullname: SAP IDES Administrator
Uid: 1000
Gid: 101 (sapsys)
Class:
Groups: sapsys dba
HOME: /home/idsadm      /home/&lt;sid&gt;adm
Shell: /bin/sh</programlisting>

	<para>そしてデータベース管理者については、</para>

	<programlisting>Name: oraids          ora&lt;sid&gt; 
Password: ****** 
Fullname: Oracle IDES Administrator 
Uid: 1002 
Gid: 100 (dba) 
Class: 
Groups: dba 
HOME: /oracle/IDS     /oracle/&lt;sid&gt; 
Shell: /bin/sh</programlisting>

	<para>あなたが <groupname>dba</groupname> と
	  <groupname>oper</groupname> の両方のグループを使っていたら、
	  ここには <groupname>oper</groupname>
	  グループもいれるべきです。</para>

      </sect3>

      <sect3 id="creatingdirectories">
        <title>ディレクトリ作成</title>

	<para>以下のディレクトリは、
	  普通は別のファイルシステムとして作成します。
	  どうするかは、あなたの要件に応じて決めてください。
	  結局はすべてが同じ RAID 5 におかれるので、
	  私は単なるディレクトリにしました。</para>

        <para>まず、一部のディレクトリに (<username>root</username>
	  ユーザで) 所有者と権限を設定しましょう。</para>

	<screen>&prompt.root; <userinput>chmod 775 /oracle</userinput>
&prompt.root; <userinput>chmod 777 /sapmnt</userinput>
&prompt.root; <userinput>chown root:dba /oracle</userinput>
&prompt.root; <userinput>chown idsadm:sapsys /compat/linux/usr/sap</userinput>
&prompt.root; <userinput>chmow 775 /compat/linux/usr/sap</userinput> </screen>

	<para>第二に、ユーザ ora&lt;sid&gt;
	  権限でディレクトリを作成します。
	  すべて /oracle/IDS のサブディレクトリになります。</para>

	<screen>&prompt.root; <userinput>su - oraids</userinput>
&prompt.root; <userinput>mkdir mirrlogA mirrlogB origlogA origlogB</userinput>
&prompt.root; <userinput>mkdir sapdata1 sapdata2 sapdata3 sapdata4 sapdata5 sapdata6</userinput>
&prompt.root; <userinput>mkdir saparch sapreorg</userinput>
&prompt.root; <userinput>exit</userinput> </screen>

	<para>第三段階では、<username>idsadm</username> (&lt;sid&gt;adm)
	  ユーザ権限でディレクトリを作成します。</para>

	<screen>&prompt.root; <userinput>su - idsadm</userinput>
&prompt.root; <userinput>cd /usr/sap</userinput>
&prompt.root; <userinput>mkdir IDS</userinput>
&prompt.root; <userinput>mkdir trans</userinput>
&prompt.root; <userinput>exit</userinput> </screen>
      </sect3>

      <sect3 id="entriesinslashetcslashservices">
	<title>/etc/services 内の項目</title>

	<para>SAP R/3 は、<filename>/etc/services</filename>
	  にいくつか項目を必要としますが、FreeBSD
	  にインストールする場合は正しく設定されません。
	  次の項目を追加してください
	  (少なくとも、インスタンス番号に対応する項目が必要で、
	  この場合は <emphasis>00</emphasis> です。
	  <emphasis>dp</emphasis>, <emphasis>gw</emphasis>,
	  <emphasis>sp</emphasis> および <emphasis>ms</emphasis>
	  について
	  <emphasis>00</emphasis> から <emphasis>99</emphasis>
	  まで項目を追加してもなんの問題もないでしょう)。</para>

	<programlisting>sapdp00  3200/tcp # SAP Dispatcher.      3200 + インスタンス番号
sapgw00  3300/tcp # SAP Gateway.         3300 + インスタンス番号
sapsp00  3400/tcp #                      3400 + インスタンス番号
sapms00  3500/tcp #                      3500 + インスタンス番号
sapmsIDS 3600/tcp # SAP Message Server.  3600 + インスタンス番号</programlisting>
      </sect3>

      <sect3 id="necessarylocales">
	<title>必要となるロケール</title>
	<indexterm><primary>ロケール</primary></indexterm>

	<para>SAP は、デフォルトの RedHat
	  のインストールでは入らないロケールを少なくとも
	  2 つ必要とします。
	  SAP は、必要な RPM を FTP
	  サーバからダウンロードする形で提供しています
	  (OSS アクセス契約している顧客でなければアクセスできません)。
	  必要な RPM の一覧は note 0171356 をご覧ください。</para>

	<para>適切なリンクを (たとえば <emphasis>de_DE</emphasis> と
	  <emphasis>en_US</emphasis> から) 作成するという手もありますが、
	  業務用システムでそうすることはお勧めしません
	  (いまのところ、IDES システムで問題なく動いてはいますが)。
	  必要なのは、次のロケールです。</para>

	<programlisting>de_DE.ISO-8859-1
en_US.ISO-8859-1</programlisting>

	<para>このロケールがないと、
	  インストール時になんらかの問題が起きるでしょう。
	  それを (たとえば CENTRDB.R3S ファイルで問題の段階を
	  OK にして) 無視してしまうと、追加でなにかしないと
	  SAP システムにログオンできないでしょう。</para>
      </sect3>

      <sect3 id="kerneltuning">
	<title>カーネルのチューニング</title>
	<indexterm><primary>カーネルのチューニング</primary></indexterm>

	<para>SAP R/3 システムには多くのリソースが必要です。
	  そのため、私はカーネルコンフィグレーションファイルに
	  以下のパラメータを追加しました。

	<programlisting># Set these for memory pigs (SAP and Oracle):
options MAXDSIZ="(1024*1024*1024)"
options DFLDSIZ="(1024*1024*1024)" # System V options needed.
options SYSVSHM #SYSV-style shared memory
options SHMMAXPGS=262144 #max amount of shared mem. pages
options SHMMNI=256 #max number of shared memory ident if.
options SHMSEG=100 #max shared mem.segs per process
options SYSVMSG #SYSV-style message queues 
options MSGSEG=32767 #max num. of mes.segments in system 
options MSGSSZ=32 #size of msg-seg. MUST be power of 2
options MSGMNB=65535 #max char. per message queue
options MSGTQL=2046 #max amount of msgs in system
options SYSVSEM #SYSV-style semaphores 
options SEMMNU=256 #number of semaphore UNDO structures
options SEMMNS=1024 #number of semaphores in system
options SEMMNI=520 #number of semaphore indentifiers
options SEMUME=100 #number of UNDO keys</programlisting></para>

	<para>SAP についてくる文書に最小値が指定されています。Linux
	  に関する記述はないので、詳しいことは HP-UX (32-bit)
	  の節を参照してください。</para>
      </sect3>
    </sect2>

    <sect2 id="installingsapr3">
      <title>SAP R/3 のインストール</title>

      <sect3 id="preparingsapcdroms">
	<title>SAP CDROM の準備</title>

	<para>インストールの際にマウントしてアンマウントしなければならない
	  CDROM が山ほどあります。十分な数の
	  CDROM ドライブを持っていれば、
	  すべてマウントしてしまえばよいでしょう。私は、CDROM
	  の中身をそれぞれに対応するディレクトリにコピーすることにしました。</para>

	<programlisting>/oracle/IDS/sapreorg/&lt;cd-name&gt;</programlisting>

	<para>ここで、&lt;cd-name&gt; は <filename>KERNEL</filename>,
	  <filename>RDBMS</filename>, <filename>EXPORT1</filename>,
	  <filename>EXPORT2</filename>, <filename>EXPORT3</filename>,
	  <filename>EXPORT4</filename>, <filename>EXPORT5</filename>
	  および <filename>EXPORT6</filename>
	  のいずれかです。すべてのファイル名を大文字にするか、
	  さもなければ、マウントする際に -g オプションをつけるべきです。
	  次のコマンドを使ってください。</para>

	<screen>&prompt.root; <userinput>mount_cd9660 -g /dev/cd0a /mnt</userinput>
&prompt.root; <userinput>cp -R /mnt/* /oracle/IDS/sapreorg/&lt;cd-name&gt;</userinput>
&prompt.root; <userinput>umount /mnt</userinput> </screen>
      </sect3>

      <sect3 id="runningtheinstall-script">
	<title>インストールスクリプトの実行</title>

	<para>まず、インストールディレクトリを用意しなければなりません。</para>

	<screen>&prompt.root; <userinput>cd /oracle/IDS/sapreorg</userinput>
&prompt.root; <userinput>mkdir install</userinput>
&prompt.root; <userinput>cd install</userinput> </screen>

	<para>その後、インストールスクリプトを起動すると、
	  関連するファイルがほぼすべてインストールディレクトリにコピーされます。</para>

	<para><filename>/oracle/IDS/sapreorg/KERNEL/UNIX/INSTTOOL.SH</filename></para>

	<para>これは、完全にカスタマイズされた SAP R/3
	  デモシステム付きの IDES のインストールなので、EXPORT CD は
	  3 枚ではなく 6 枚あります。この時点では、
	  インストールテンプレート CENTRDB.R3S
	  は標準の中心インスタンス (R/3 とデータベース)
	  をインストールするためのもので、
	  IDES 中心インスタンスをインストールするためのものではありません。
	  ですから、それに対応する CENTRDB.R3S ファイルを
	  EXPORT1 ディレクトリからコピーしてください。さもないと、
	  R3SETUP は EXPORT CD を 3 枚しか要求しません。</para>
      </sect3>

      <sect3 id="startr3setup">
	<title>R3SETUP の起動</title>

	<para>LD_LIBRARY_PATH
	  が正しく設定されていることを確認してください。</para>

	<screen>&prompt.root; <userinput>export LD_LIBRARY_PATH=/oracle/IDS/lib:/sapmnt/IDS/exe:/oracle/805_32/lib</userinput> </screen>

	<para>インストールディレクトリから root ユーザで
	  R3SETUP を起動してください。</para>

	<screen>&prompt.root; <userinput>cd /oracle/IDS/sapreorg/install</userinput>
&prompt.root; <userinput>./R3SETUP -f CENTRDB.R3S</userinput> </screen>

	<para>スクリプトがいくつか質問してきます
	  (デフォルトが括弧に囲まれて表示され、
	  その後に実際に入力します)。</para>

	<informaltable>
	  <tgroup cols="3">
	  <thead>
	  <row>
	    <entry>質問</entry>
	    <entry>デフォルト</entry>
	    <entry>入力</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>Enter SAP System ID
	      (SAP システム ID を入力してください)</entry>
	    <entry>[C11]</entry>
	    <entry>IDS&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter SAP Instance Number
	      (SAP インスタンス番号を入力してください)</entry>
	    <entry>[00]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter SAPMOUNT Directory
	      (SAPMOUNT ディレクトリを入力してください)</entry>
	    <entry>[/sapmnt]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter name of SAP central host
	      (SAP 中心ホストの名称を入力してください)</entry>
	    <entry>[troubadix.domain.de]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter name of SAP db host
	      (SAP データベースホストの名称を入力してください)</entry>
	    <entry>[troubadix]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Select character set
	      (文字集合を選択してください)</entry>
	    <entry>[1] (WE8DEC)</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter Oracle server version
	      (Oracle サーバのバージョンを入力してください)
	      (1) Oracle 8.0.5, (2) Oracle 8.0.6, (3) Oracle 8.1.5, (4) Oracle 8.1.6</entry>
	    <entry> </entry>
	    <entry>1&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Extract Oracle Client archive
	      (Oracle クライアントアーカイブを展開しますか)</entry>
	    <entry>[1] (はい、展開します)</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter path to KERNEL CD
	      (KERNEL CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/KERNEL</entry>
	  </row>
	  <row>
	    <entry>Enter path to RDBMS CD
	      (RDBMS CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/RDBMS</entry>
	  </row>
	  <row>
	    <entry>Enter path to EXPORT1 CD
	      (EXPORT1 CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/EXPORT1</entry>
	  </row>
	  <row>
	    <entry>Directory to copy EXPORT1 CD
	      (EXPORT1 CD をコピーするディレクトリ)</entry>
	    <entry>[/oracle/IDS/sapreorg/CD4_DIR]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter path to EXPORT2 CD
	      (EXPORT2 CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/EXPORT2</entry>
	  </row>
	  <row>
	    <entry>Directory to copy EXPORT2 CD
	      (EXPORT2 CD をコピーするディレクトリ)</entry>
	    <entry>[/oracle/IDS/sapreorg/CD5_DIR]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter path to EXPORT3 CD
	      (EXPORT3 CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/EXPORT3</entry>
	  </row>
	  <row>
	    <entry>Directory to copy EXPORT3 CD
	      (EXPORT3 CD をコピーするディレクトリ)</entry>
	    <entry>[/oracle/IDS/sapreorg/CD6_DIR]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter path to EXPORT4 CD
	      (EXPORT4 CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/EXPORT4</entry>
	  </row>
	  <row>
	    <entry>Directory to copy EXPORT4 CD
	      (EXPORT4 CD をコピーするディレクトリ)</entry>
	    <entry>[/oracle/IDS/sapreorg/CD7_DIR]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter path to EXPORT5 CD
	      (EXPORT5 CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/EXPORT5</entry>
	  </row>
	  <row>
	    <entry>Directory to copy EXPORT5 CD
	      (EXPORT5 CD をコピーするディレクトリ)</entry>
	    <entry>[/oracle/IDS/sapreorg/CD8_DIR]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter path to EXPORT6 CD
	      (EXPORT6 CD へのパスを入力してください)</entry>
	    <entry>[/sapcd]</entry>
	    <entry>/oracle/IDS/sapreorg/EXPORT6</entry>
	  </row>
	  <row>
	    <entry>Directory to copy EXPORT6 CD
	      (EXPORT6 CD をコピーするディレクトリ)</entry>
	    <entry>[/oracle/IDS/sapreorg/CD9_DIR]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter amount of RAM for SAP + DB
	      (SAP + DB に割り当てる RAM の合計を入力してください)</entry>
	    <entry> </entry>
	    <entry>850&lt;ret&gt; (MB)</entry>
	  </row>
	  <row>
	    <entry>Service Entry Message Server</entry>
	    <entry>[3600]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter Group-ID of sapsys
	      (sapsys のグループ ID を入力してください)</entry>
	    <entry>[101]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter Group-ID of oper
	      (oper のグループ ID を入力してください)</entry>
	    <entry>[102]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter Group-ID of dba
	      (dba のグループ ID を入力してください)</entry>
	    <entry>[100]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter User-ID of &lt;sid&gt;adm
	      (&lt;sid&gt;adm のユーザ ID を入力してください)</entry>
	    <entry>[1000]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter User-ID of ora&lt;sid&gt;
	      (ora&lt;sid&gt; のユーザ ID を入力してください)</entry>
	    <entry>[1002]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Number of parallel procs
	      (並列プロセスの数)</entry>
	    <entry>[2]</entry>
	    <entry>&lt;ret&gt;</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para>CD をそれぞれ別の場所にコピーしないと、SAP
	  インストーラは (CD 内の <filename>LABEL.ASC</filename>
	  ファイルで識別される) 必要な CD を見つけられず、CD
	  を挿入 / マウントして承認するかマウントパスを入力するよう求めてくるでしょう。</para>

	<para><filename>CENTRDB.R3S</filename>
	  ファイルには、間違いがないわけではありません。
	  私の場合は、EXPORT4 を再度要求されました
	  (が、正しいキーを表示していたので
	  (6_LOCATION、それから 7_LOCATION など))、
	  正しい値を入力して進めて問題ありませんでした。
	  いらいらしないようにしてください。</para>

	<para>後で触れるいくつかの問題を除けば、Oracle
	  データベースソフトウェアをインストールするところまでは
	  素直に進むはずです。</para>
      </sect3>
    </sect2>

    <sect2 id="installingoracle805">
      <title>Oracle 8.0.5 のインストール</title>

      <para>Linux と Oracle DB で起こりうる問題についての SAP-Notes と
	Oracle の Readme を読むようにしてください。
	すべてではないにしても、
	ほとんどは互換性のないライブラリに起因しています。</para>

      <para>Oracle のインストールについて詳しいことは、<ulink
	url="linuxemu-oracle.html">Oracle のインストール</ulink>
	の章をご覧ください。</para>

      <sect3 id="installingtheoracle805withorainst">
	<title>orainst による Oracle 8.0.5 のインストール</title>

	<para><application>Oracle 8.0.5</application>
	  を利用する予定なら、
	  無事に再リンクするのにライブラリがいくつか追加で必要です。
	  なぜなら、Oracle 8.0.5 は古い glibc (RedHat 6.0)
	  とリンクされていますが、RedHat 6.1 は新しい glibc
	  を利用しているからです。
	  ですから、リンクが行われることを保証するには、
	  次の追加パッケージをインストールしなければなりません。</para>

	<para><filename>compat-libs-5.2-2.i386.rpm</filename></para>
	<para><filename>compat-glibc-5.2-2.0.7.2.i386.rpm</filename></para>
	<para><filename>compat-egcs-5.2-1.0.3a.1.i386.rpm</filename></para>
	<para><filename>compat-egcs-c++-5.2-1.0.3a.1.i386.rpm</filename></para>
	<para><filename>compat-binutils-5.2-2.9.1.0.23.1.i386.rpm</filename></para>

	<para>詳しくは、対応する SAP-Note や Oracle Readme
	  をご覧ください。他に選択肢がなければ
	  (私がインストールした時は、確認している暇がありませんでした)、
	  元のバイナリまたは再リンクされたバイナリを、
	  元の RedHat システムから持ってきて使うこともできるでしょう。</para>

	<para>インテリジェントエージェントをコンパイルするために、
	  RedHat Tcl パッケージがインストールされていなければなりません。
	  <filename>tcl-8.0.3-20.i386.rpm</filename>
	  が入手できないなら、RedHat 6.1 用の
	  <filename>tcl-8.0.5-30.i386.rpm</filename>
	  など新しいものでも構いません。</para>

	<para>再リンク以外は、インストールは簡単です。</para>

	<screen>&prompt.root; <userinput>su - oraids</userinput>
&prompt.root; <userinput>export TERM=xterm</userinput>
&prompt.root; <userinput>export ORACLE_TERM=xterm</userinput>
&prompt.root; <userinput>export ORACLE_HOME=/oracle/IDS</userinput>
&prompt.root; <userinput>cd /ORACLE_HOME/orainst_sap</userinput>
&prompt.root; <userinput>./orainst</userinput> </screen>

	<para>ソフトウェアのインストールが終わるまで、すべての画面で
	  Enter を押して承認してください。ただし、
	  <emphasis>Oracle On-Line Text Viewer</emphasis>
	  は現時点では Linux 版がないので選択を外してください。
	  その後、Oracle は利用可能な
	  <command>gcc</command>, <command>egcs</command> や
	  <command>i386-redhat-linux-gcc</command> ではなく、
	  <command>i386-glibc20-linux-gcc</command>
	  で再リンクしようとします。</para>

	<para>時間が限られていたので、私は
	  <application>Oracle 8.0.5 PreProduction</application>
	  リリースのバイナリを利用することにしました。
	  最初 RDBMS-CD 収録のバージョンを動かそうとして失敗し、
	  その時点では正しい RPM
	  を見つけて利用するのはまるで悪夢のようだったからです。</para>

      </sect3>

      <sect3 id="installingtheoracle805preproduction">
	<title>Linux (Kernel 2.0.33) 用の
	  Oracle 8.0.5 Pre-Production リリースのインストール</title>

	<para>これをインストールするのは簡単です。
	  CD をマウントして、インストーラを起動してください。
	  インストーラが Oracle ホームディレクトリの位置をたずねて、
	  そこにすべてのバイナリをコピーします。
	  もっとも、私はその前の RDBMS
	  インストールを試した時の残りを削除していませんでした。</para>

	<para>この後、Oracle データベースは問題なく起動できました。</para>
      </sect3>
    </sect2>

    <sect2 id="continuewithsapr4installation">
      <title>SAP R/3 のインストールの続行</title>

      <para>まず、<username>idsamd</username> (&lt;sid&gt;adm) ユーザと
	<username>oraids</username> (ora&lt;sid&gt;) ユーザの環境設定を確認してください。
	両者とも、<filename>.profile</filename>,
	<filename>.login</filename> と <filename>.cshrc</filename>
	をもっていて、いずれも <command>hostname</command>
	を使っているはずです。
	そのシステムのホスト名が完全修飾名であれば、すべてのファイルで
	<command>hostname</command> を
	<command>hostname -s</command> に変更する必要があります。</para>

      <sect3 id="databaseload">
	<title>データベースの読み込み</title>

	<para>その後、(exit を選択したかどうかによって) R3SETUP
	  を再起動または継続実行します。R3SETUP
	  は、テーブル領域を作成し、EXPORT1 から EXPORT6
	  までデータを R3load でデータベースに読み込みます
	  (これは IDES システムです。違う場合は、EXPORT1 から EXPORT3
	  だけになります)。</para>

	<para>データベースの読み込みが完了したら
	  (数時間に渡るかもしれません)、何かパスワードを要求されます。
	  テスト用にインストールしたのであれば、
	  周知のデフォルトパスワードを使ってもよいでしょう
	  (セキュリティが問題になるなら、異なるものを使ってください!)。</para>

	<informaltable>
	  <tgroup cols="2">
	  <thead>
	  <row>
	    <entry>質問</entry>
	    <entry>入力</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>Enter Password for sapr3
	      (sapr3 のパスワードを入力してください)</entry>
	    <entry>sap&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Confirum Password for sapr3
	      (sapr3 のパスワードを再入力してください)</entry>
	    <entry>sap&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter Password for sys
	      (sys のパスワードを入力してください)</entry>
	    <entry>change_on_install&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Confirm Password for sys
	      (sys のパスワードを再入力してください)</entry>
	    <entry>change_on_install&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Enter Password for system
	      (system のパスワードを入力してください)</entry>
	    <entry>manager&lt;ret&gt;</entry>
	  </row>
	  <row>
	    <entry>Confirm Password for system
	      (system のパスワードを再入力してください)</entry>
	    <entry>manager&lt;ret&gt;</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para>ここで、<literal>dipgntab</literal> で少し問題がありました。</para>
      </sect3>

      <sect3 id="listener">
	<title>Listener</title>

	<para>次のように、Oracle-Listener を <username>oraids</username>
	  (ora&lt;sid&gt;) ユーザで起動してください。</para>

	<programlisting>umask 0; lsnrctl start</programlisting>

	<para>そうしないと、ソケットが正しいパーミッションにならないので、
	  ORA-12546 が発生するかもしれません。SAP note 072984
	  をご覧ください。</para>
      </sect3>
    </sect2>

    <sect2 id="postinstallationsteps">
      <title>インストール後の手順</title>

      <sect3 id="requestsapr3licensekey">
	<title>SAP R/3 ライセンスキーの要求</title>

	<para>一時ライセンスは
	  4 週間だけ有効なので、これが必要になります。
	  オペレーティングシステムを正しく入力するようにしてください:
	  (X) Other (その他): <emphasis>FreeBSD 4.3 Stable</emphasis>。
	  まず、ハードウェアキーを入手してください。
	  <username>idsadm</username> ユーザでログオンし、
	  <command>saplicense</command> を呼び出してください。</para>

	<screen>&prompt.root; <userinput>/sapmnt/IDS/exe/saplicense -get</userinput></screen>

	<para><command>saplicense</command>
	  をオプションなしで起動すると、オプション一覧を出力します。
	  ライセンスキーを受け取ったら、
	  次のようにしてインストールできます。</para>

	<screen>&prompt.root; <userinput>/sapmnt/IDS/exe/saplicense -install</userinput></screen>

	<para>そうしたら、次の値を入力します。</para>

	<programlisting>SAP SYSTEM ID   = &lt;SID, 3 chars&gt;
CUSTOMER KEY    = &lt;hardware key, 11 chars&gt;
INSTALLATION NO = &lt;installation, 10 digits&gt;
EXPIRATION DATE = &lt;yyyymmdd, usually "99991231"&gt;
LICENSE KEY     = &lt;license key, 24 chars&gt;</programlisting>
      </sect3>

      <sect3 id="creatingusers">
	<title>ユーザの作成</title>

	<para>クライアント 000 内でユーザを作成します
	  (クライアント 000 内で行わなければなりませんが、
	  ユーザ <username>sap*</username> や <username>ddic</username>
	  以外のユーザでなければならないタスクのためです)。
	  ユーザ名として、私は通常
	  <replaceable>wartung</replaceable> (または
	  英語で <replaceable>service</replaceable>)
	  を選択しています。必要となるプロファイルは
	  <emphasis>sap_new</emphasis> と <emphasis>sap_all</emphasis>
	  です。セキュリティを高めるため、
	  すべてのクライアントのデフォルトユーザのパスワードを変更すべきです
	  (ユーザ <username>sap*</username> と <username>ddic</username>
	  を含みます)。</para>
      </sect3>

      <sect3 id="configtranssysprofileopermodesetc">
	<title>トランスポートシステム、プロファイル、操作モードなどの設定</title>

	<para>クライアント 000 内で、<username>ddic</username> と sap*
	  以外のユーザについて、少なくとも次のことを行ってください。</para>

	<informaltable>
	  <tgroup cols="2">
	  <thead>
	  <row>
	    <entry>作業</entry>
	    <entry>トランザクション</entry>
	  </row>
	  </thead>
	  <tbody>
	  <row>
	    <entry>トランスポートシステムの設定。たとえば、
	      <emphasis>スタンドアロントランスポートエンティティ</emphasis></entry>
	    <entry>STMS</entry>
	  </row>
	  <row>
	    <entry>システム用のプロファイルの作成・編集</entry>
	    <entry>RZ10</entry>
	  </row>
	  <row>
	    <entry>操作モードとインスタンスの維持管理</entry>
	    <entry>RZ04</entry>
	  </row>
	  </tbody>
	  </tgroup>
	</informaltable>

	<para>これらのインストール後の手順は、それ以外も含めて
	  SAP インストールガイドにすべて書かれています。</para>
      </sect3>

      <sect3 id="editintsidsap">
	<title>Edit init&lt;sid&gt;.sap (initIDS.sap)</title>

	<para><filename>/oracle/IDS/dbs/initIDS.sap</filename>
	  ファイルには
	  SAP バックアッププロファイルが含まれます。ここで、
	  使用するテープの容量、
	  圧縮の種類などを定義しなければなりません。
	  <command>sapdba</command> や <command>brbackup</command>
	  と共に動かすため、以下の値を変更しました。</para>

	<programlisting>compress = hardware
archive_function = copy_delete_save
cpio_flags = "-ov --format=newc --block-size=128 --quiet"
cpio_in_flags = "-iuv --block-size=128 --quiet"
tape_size = 38000M
tape_address = /dev/nsa0
tape_address_rew = /dev/sa0</programlisting>

	<para>説明:</para>

	<para><emphasis>compress</emphasis> 私が使っているテープは
	  HP DLT1 で、ハードウェア圧縮を行います。</para>

	<para><emphasis>archive_function</emphasis>
	  この変数は、Oracle
	  のアーカイブログを保存する際のデフォルトの振る舞いを定義します。
	  新規のログファイルはテープに保存され、
	  保存済みのログファイルは再度保存された後、削除されます。
	  これは、もし、データベースを復旧しなければならなくなったのに、
	  アーカイブテープのどれかが駄目になっていたという場合にも問題を回避します。</para>

	<para><emphasis>cpio_flags</emphasis>
	  デフォルトはブロックサイズを 5120 バイトに設定する -B
	  が使われます。DLT テープについては、HP はブロックサイズに
	  32 キロバイト以上を推奨していますので、64 キロバイトに設定する
	  --block-size=128 を用いました。65535 より多くの
	  inode 番号があるので、--format=newc が必要になります。
	  最後のオプション --quiet は、<command>cpio</command>
	  が保存したブロック数を出力すると
	  <command>brbackup</command> が文句をいうので必要になります。</para>

	<para><emphasis>cpio_in_flags</emphasis>
	  は、データをテープから読み込むのに必要となるフラグです。
	  データ形式は自動的に認識されます。</para>

	<para><emphasis>tape_size</emphasis>
	  これは通常、テープの raw (生の) 容量を表します。
	  (ハードウェア圧縮を利用しているので) 安全のため、</para>

	<para><emphasis>value</emphasis>
	  は実際の値よりもわずかに小さくしています。</para>

	<para><emphasis>tape_address</emphasis>
	  <command>cpio</command> と組み合わせて用いる巻き戻し不可なデバイス。</para>

	<para><emphasis>tape_address_rew</emphasis>
	  cpio と組み合わせて用いる巻き戻し可能なデバイス。</para>
      </sect3>
    </sect2>

    <sect2 id="problemsduringinstallation">
      <title>インストール中の問題</title>

      <sect3 id="indoraduringduringr3setup">
	<title>R3SETUP 中の OSUSERSIDADM_IND_ORA エラー</title>

	<para>この段階で R3SETUP がエラーを報告したら、CENTRDB.R3S
	  ファイルを編集します。[OSUSERSIDADM_IND_ORA]
	  という項目を探して、以下の値を変更します。</para>

	<programlisting>HOME=/home/idsadm (was empty)
STATUS=OK (had status ERROR)</programlisting>

	<para>以下のように、R3SETUP を再起動します。</para>

	<screen>&prompt.root; <userinput>./R3SETUP -f CENTRDB.R3S</userinput></screen>
      </sect3>

      <sect3 id="indoraduringr3setup">
	<title>R3SETUP 中の OSUSERDBSID_IND_ORA</title>

	<para>この段階で R3SETUP がエラーを報告する可能性もあります。
	  CENTRDB.R3S を編集して、[OSUSERDBSID_IND_ORA]
	  という項目を探し、その項目内の次の値を変更してください。</para>

	<programlisting>STATUS=OK</programlisting>

	<para>その後、R3SETUP を再起動します。</para>

	<screen>&prompt.root; <userinput>./R3SETUP -f CENTRDB.R3S</userinput></screen>
      </sect3>

      <sect3 id="oraviewvrffilenotfound">
	<title>Oracle のインストール中に oraview.vrf
	  ファイルがみつからないという (FILE NOT FOUND) エラー</title>

	<para>インストールを開始する前に
	  <emphasis>Oracle On-Line Text Viewer</emphasis>
	  の選択を外すのを忘れています。この選択肢は現在 Linux
	  にはないにもかかわらず、インストール対象に選ばれています。
	  Oracle のインストールメニューでこの製品を選択しているのを外して、
	  インストールを再開してください。</para>
      </sect3>

      <sect3 id="textenvincalid">
	<title>R3SETUP, RFC または SAPGUI 起動時に
	  TEXTENV_INVALID エラー</title>

	<para>このエラーが起きた場合は、正しいロケールがありません。
	  SAP note 0171356 にインストールしておかなければならない
	  RPM が挙げられています (たとえば、RedHat 6.1 なら
	  <emphasis>saplocales-1.0-3</emphasis>,
	  <emphasis>saposcheck-1.0-1</emphasis>)。R3SETUP
	  がこれに関係するエラーを出してもすべて無視して、対応する状態を
	  ERROR から OK に (CENTRDB.R3S で) 変更して R3SETUP
	  を再起動していると、SAP システムは正しく設定されず、
	  システムを起動できたとしても、<literal>sapgui</literal>
	  でシステムに接続することはできません。古い Linux 版 <literal>sapgui</literal>
	  で接続しようとすると、次のメッセージがでます。</para>

	<programlisting>Sat May 5 14:23:14 2001
*** ERROR => no valid userarea given [trgmsgo. 0401]
Sat May 5 14:23:22 2001
*** ERROR => ERROR NR 24 occured [trgmsgi. 0410]
*** ERROR => Error when generating text environment. [trgmsgi. 0435]
*** ERROR => function failed [trgmsgi. 0447]
*** ERROR => no socket operation allowed [trxio.c 3363]
Speicherzugriffsfehler</programlisting>

	<para>これは、SAP R/3 がロケールを割り当てられないか、
	  正しく設定されていない
	  (データベーステーブルの一部の項目が不足している)
	  ためです。SAP に接続するためには、次の項目をファイル
	  DEFAULT.PFL に追加してください (note 0043288 参照)。</para>

	<programlisting>abap/set_etct_env_at_new_mode =0
install/collate/active =0
rscp/TCP0B =TCP0B</programlisting>

	<para>SAP システムを再起動してください。
	  地域特有の言語設定が期待どおりに動かないかもしれませんが、
	  システムに接続できるはずです。
	  地域設定を修正 (して、適切なロケールを提供) したら、
	  これらの項目を DEFAULT.PFL から削除して
	  SAP システムを再起動してかまいません。</para>

      </sect3>

      <sect3 id="ora-12546">
	<title>ORA-12546 エラー。リスナーの適切なパーミッションによる操作</title>

	<para>次のコマンドを実行して、Oracle リスナーをユーザ
          <username>oraids</username> で起動してください。</para>

	<screen>&prompt.root; <userinput>umask 0; lsnrctl start</userinput></screen>

	<para>そうしないと、
	  ソケットが正しいパーミッションになっていないという
	  ORA-12546 エラーを受け取るかもしれません。
	  SAP note 0072984 をご覧ください。</para>
      </sect3>

      <sect3 id="dipgntabindind">
        <title>R3SETUP 中の [DIPGNTAB_IND_IND] エラー</title>

	<para>一般的なことは SAP note 0130581 (R3SETUP の
	  <literal>DIPGNTAB</literal> 段階での終了) をご覧ください。
	  この特定のインストール段階において、
	  なぜかインストールプロセスは、適切な SAP システム名
	  "IDS" を使うかわりに、空文字列 "" を使います。
	  ディレクトリにアクセスするのにパスを &lt;sid&gt;
	  (この場合は IDS) を使って生成するので、
	  これはちょっとした問題を起こすことがあります。</para>

	<programlisting>/usr/sap/IDS/SYS/...
/usr/sap/IDS/DVMGS00</programlisting>

	<para>にアクセスするかわりに、
	  つぎのパスを使います。</para>

	<programlisting>/usr/sap//SYS/...
/usr/sap/D00i</programlisting>

	<para>インストールを続けるため、
	  リンクと追加のディレクトリを作成します。</para>

	<screen>&prompt.root; pwd
/compat/linux/usr/sap
&prompt.root; ls -l
total 4
drwxr-xr-x 3  idsadm sapsys 512 May 5 11:20 D00
drwxr-x--x 5  idsadm sapsys 512 May 5 11:35 IDS
lrwxr-xr-x 1  root   sapsys 7 May 5 11:35 SYS -> IDS/SYS
drwxrwxr-x 2  idsadm sapsys 512 May 5 13:00 tmp
drwxrwxr-x 11 idsadm sapsys 512 May 4 14:20 trans </screen>

	<para>この現象を解説している SAP notes (0029227 and 0008401)
	  があります。</para>
      </sect3>

      <sect3 id="rfcrswboiniindind">
	<title>R3SETUP 中の [RFCRSWBOINI_IND_IND] エラー</title>

	<para>(ファイル <filename>CENTRDB.R3S</filename> で)
	  問題の段階の状態 (STATUS) を ERROR から OK に設定して
	  R3SETUP を再起動してください。
	  インストール後、レポート <literal>RSWBOINS</literal>
	  をトランザクション SE38 から実行しなければなりません。
	  <literal>RFCRSWBOINI</literal> および <literal>RFCRADDBDIF</literal>
	  段階の詳細については
	  SAP note 0162266 をご覧ください。</para>
      </sect3>

      <sect3 id="rfcraddbdifindind">
	<title>R3SETUP 中の [RFCRADDBDIF_IND_IND] エラー</title>

	<para>(ファイル <filename>CENTRDB.R3S</filename> で)
	  問題の段階の状態 (STATUS) を ERROR から OK に設定して
	  R3SETUP を再起動してください。
	  インストール後、レポート <literal>RADDBDIF</literal> をトランザクション SE38
	  から実行しなければなりません。詳しくは
	  SAP note 0162266 をご覧ください。</para>
      </sect3>
    </sect2>
  </sect1>

  <sect1>
    <title>高度なトピックス</title>

    <para>Linux バイナリ互換機能がどのような仕組みなのか興味がある人はこのセクションを読んでください。
      以下の文章で説明されていることのほとんどは &a.chat; に投稿された
      Terry Lambert (<email>tlambert@primenet.com</email>) 氏のメール
      (Message ID: <literal>&lt;199906020108.SAA07001@usr09.primenet.com&gt;</literal>)
      をもとにしています。</para>

    <sect2>
      <title>どのように動くのでしょう?</title>
      <indexterm><primary>execution class loader</primary></indexterm>

    <para>FreeBSD は、&ldquo;実行クラスローダ (execution class loader) &rdquo;
      と呼ばれる抽象的な機構を持っています。これは &man.execve.2
      システムコールへの楔という形で実装されています。
    </para>

    <para>FreeBSD は、シェルインタプリタやシェルスクリプトを実行するための
      <literal>#!</literal> ローダを持った単一のプログラムローダではなく、
      ローダのリストを持っているのです。
    </para>

    <para>歴史的には、Unix プラットフォーム上の唯一のローダーがマジックナンバー
      (一般的にはファイルの先頭の 4 ないし 8 バイトの部分)
      の検査を行ないシステムで実行できるバイナリかどうかを検査し、
      もしそうならバイナリローダーを呼び出すというようになっていました。</para>

    <para>もし、そのシステム用のバイナリでない場合には、
      &man.execve.2; システムコールの呼び出しは失敗の戻り値を返し、
      シェルがシェルコマンドとして実行しようと試みていたわけです。
    </para>

    <para>この仮定は<quote>現在利用しているシェルがどのようなものであっても</quote>変わりません。</para>

    <para>後に &man.sh.1; に変更が加えられ、先頭の 2 バイトを検査した結果
      <literal>:\n</literal> であれば代わりに &man.csh.1; を呼び出す、
      というようになりました (この変更は SCO が最初に行なったと思われます)。</para>

    <para>現在の FreeBSD は、プログラムローダリストを走査します。
      その際、空白文字までの文字列をインタプリタとして認識する、
      通常の <literal>#!</literal> ローダを用いるため、
      該当するものが存在しなければ最終的に /bin/sh がロードされます。</para>
      <indexterm><primary>ELF</primary></indexterm>

    <para>Linux ABI をサポートするため、FreeBSD は
      ELF バイナリを示すマジックナンバを確認します。
      (ただし、この段階では FreeBSD、Solaris、Linux、そしてその他の
      ELF イメージ形式を使っている OS を区別することはできません)。</para>
      <indexterm><primary>Solaris</primary></indexterm>

    <para>ELF ローダは、特殊な<emphasis>マーク (brand)</emphasis> があるかどうか探します。
      このマークとは、ELF イメージのコメントセクションのことです。
      SVR4/Solaris の ELF バイナリには、このセクションは存在しません。</para>

    <para>Linux バイナリを実行するためには、
      ELF バイナリに &man.brandelf.1; で説明されている
      <literal>Linux</literal> のマークが<emphasis>付けられて</emphasis>いなければなりません。</para>

    <screen>&prompt.root; <userinput>brandelf -t Linux file</userinput></screen>

    <para>上のようにすることで、指定されたファイルは
	<literal>Linux</literal> のマークが付けられ、
	ELF ローダが認識できるようになります。</para>
      <indexterm>
        <primary>ELF</primary>
	<secondary>branding</secondary>
      </indexterm>

    <para>ELF ローダが <literal>Linux</literal> マークを確認すると、
      ローダは <literal>proc</literal> 構造体内の
      ある一つのポインタを置き換えます。システムコールは全て、
      このポインタ (伝統的な Unix システムではこれは構造体の配列 <literal>sysent[]</literal>
      で、システムコールが含まれています) を通してインデックスされます。
      さらに、そのプロセスには Linux カーネルモジュールに必要な
      シグナルトランポリンコード (訳注:
      シグナルの伝播を実現するコード) 用の特殊なトラップベクタの設定や、
      他の (細かな) 調整のための設定が行なわれます。</para>

    <para>Linux システムコールベクタは、
      さまざまなデータに加えて <literal>sysent[]</literal>
      エントリーのリストを含んでおり、それらのアドレスはカーネルモジュール内にあります。</para>

    <para>Linux バイナリがシステムコールを発行する際、トラップコードは
      <literal>proc</literal> 構造体を用いてシステムコール関数ポインタを 
      解釈します。そして FreeBSD ではなく
      Linux 用のシステムコールエントリポイントを得るわけです。</para>

    <para>さらに、Linux モードは状況に応じて<emphasis>ファイルシステム本来のルートマウントポイントを置き換えて</emphasis>ファイルの参照を行ないます。
      これは、<literal>union</literal> オプションを指定してマウントされたファイルシステム
      (unionfs では<emphasis>ありません!</emphasis>)が行なっていることと同じです。
      ファイルを検索する際にはまず
      <filename>/compat/linux/<replaceable>original-path</replaceable></filename>
      ディレクトリを、<emphasis>それから</emphasis>見つけられなかったときにのみ、
      <filename>/<replaceable>original-path</replaceable></filename>
      を調べます。
      こうすることで、他のバイナリを要求するバイナリの実行を可能にしています
      (したがって、Linux 用プログラムツールは Linux ABI サポート環境下で完全に動作するわけです)。
      またこれは、もし対応する Linux バイナリが存在しない場合に
      Linux バイナリが FreeBSD バイナリをロードしたり、実行したりすることが可能であること、
      その Linux バイナリに自分自身が Linux 上で実行されていないことを
      気付かせないようにする目的で、&man.uname.1; コマンドを
      <filename>/compat/linux</filename> ディレクトリに置くことができる、
      ということを意味します。
    </para>

    <para>要するに、Linux カーネルが FreeBSD カーネルの内部に存在しているわけです。
      カーネルによって提供されるサービス全ての実装の基礎となるさまざまな関数は
      FreeBSD システムコールテーブルエントリと
      Linux システムコールテーブルエントリの両方で共通に利用されています。
      これらにはファイルシステム処理、仮想メモリ処理、シグナル伝送、System V IPC
      などが含まれますが、
      FreeBSD バイナリは FreeBSD <emphasis>グルー</emphasis> (訳注: glue;
      二者の間を仲介するという意味) 関数群、
      そして Linux バイナリは Linux <emphasis>グルー</emphasis>関数群を用いる、
      という点だけが異なります (過去に存在したほとんどの OS は、
      自分自身のための<emphasis>グルー</emphasis>関数群しか備えていません。
      前述したように、システムコールを発行する際、
      各々のプロセスの <literal>proc</literal> 構造体内にある、
      ローダによって動的に初期化されるポインタを参照してアドレスを得る代わりに、
      静的でグローバルな <literal>sysent[]</literal> 構造体の配列に
      システムコール関数のアドレスが直接格納されているのです)。</para>

    <para>さて、どちらを本来の FreeBSD ABI (訳注: Applications Binary Interface;
      同じ CPU を利用したコンピュータ間でバイナリを共有するための規約のこと)
      と呼ぶべきなのでしょうか?
      実は、どちらが本来のものであるかということを論ずることに意味はありません。
      基本的に、FreeBSD <emphasis>グルー</emphasis>関数群はカーネルの中に静的にリンクされていて、
      Linux <emphasis>グルー</emphasis>関数群は静的にリンクすることも、
      カーネルモジュールを介して利用することもできるようになっている、
      という違いがあるだけ (ただしこれは現時点においての話であり、
      将来のリリースで変更される可能性がありますし、
      おそらく実際に変更されるでしょう) です。</para>

    <para>あ、「でもこれは本当にエミュレーションと呼べるのか」って?
      答えは「いいえ」です。これは ABI の実装であり、
      エミュレーションとは異なります。エミュレータが呼び出されているわけではありません
      (シミュレータでもないことをあらかじめ断っておきましょう)。</para>

    <para>では、これがよく <quote>Linux エミュレーション</quote>と呼ばれるのは何故でしょうか?
     それはもちろん FreeBSD の売りにするためでもあるのですが、
     実際には、次のような理由によります。
     この機能が初めて実装された頃、
     動作原理を説明する以外にこの機能を表現する言葉はありませんでした。
     しかし、コードをコンパイルしたりモジュールをロードしない場合、
     「FreeBSD 上で Linux バイナリを実行する」という表現は、
     厳密に考えると適切ではありません。
     そこで、その際にロードされているもの自身を表現する言葉 &mdash; すなわち
     <quote>Linux エミュレータ</quote>が必要だったのです。</para>
    </sect2>
  </sect1>
</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
