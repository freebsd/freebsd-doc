.\" groff_mdoc.man
.\"
.\"   A complete reference of the mdoc macro package for GNU troff.
.\"
.\" Based on NetBSD's mdoc.samples.7, version 1.21.
.\"
.\"
.\"   Warning: You can't format this file with the old mdoc macros!
.\"
.\"
.\" Copyright (c) 1990, 1993
.\"     The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by the University of
.\"      California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)mdoc.samples.7 8.2 (Berkeley) 12/30/93
.\"
.\" This reference invokes every macro in the package several
.\" times and is guaranteed to give a worst case performance
.\" for an already extremely slow package.
.\"
.\" $FreeBSD$
.\" Copyright (c) 2001 FreeBSD jpman project
.\" This is for Japanese translation done by FreeBSD jpman project.
.\" WORD: epoch           基準時点 (協定世界時 1970年1月1日 00:00:00)
.\" WORD: display         ディスプレイ
.\" WORD: bracket         角括弧 []
.\" WORD: brace           中括弧 ()
.\" WORD: angle bracket   山括弧 <>
.\" WORD: acronym         頭字語
.\" WORD: keep            キープ
.\" WORD: literal         リテラル
.\" WORD: content macro   コンテントマクロ
.\" WORD: command modifier        コマンド修飾子
.\" WORD: enclosure       囲い
.\" WORD: quoting         クォート
.\" WORD: nest            入れ子
.\" WORD: block ragged    凹凸ブロック
.\" WORD: constant width character        定幅文字
.\" WORD: scale indicator スケール指示子
.\" WORD: hanging tag     ぶら下がりタグ
.\" WORD: overhanging tag オーバハングタグ
.\" WORD: parsed          構文解析される
.\" WORD: callable        呼び出し可能
.
.Dd July 8, 2004
.Os
.Dt GROFF_MDOC 7
.
.
.Sh 名称
.
.Nm groff_mdoc
.Nd groff mdoc の実装に関するリファレンス
.
.
.Sh 書式
.
.Nm groff Fl m Ns Cm doc Ar
.
.
.Sh 解説
.
.Tn GNU
.Xr troff 1
用の
.Em コンテントベース
でかつ
.Em 領域ベース
な整形用パッケージである
.Nm \-mdoc
マクロパッケージを使って
.Ux
マニュアルページを書くための完全なリファレンスです。
前身である
.Xr \-man 7
パッケージは、フォントの操作や他の写植方法の詳細は個々の作者に任せ、
ページのレイアウトを取り扱ってきました。
.Nm \-mdoc
では、ページレイアウトマクロは
タイトル、セクションのヘッダ、ディスプレイ、リストのマクロからなる
.Em "ページ構造領域"
を形成しています。
本質的にこれらの要素は整形されたページにおける
テキストの物理的位置に影響を与えます。
ページ構造領域に加え、さらに
.Em マニュアル
領域および
.Em 一般
テキスト領域の 2 つの領域があります。
一般テキスト領域は、テキストの一部をクォートしたり強調したりと
いったような作業を実行するマクロとして定義されています。
マニュアル領域はコマンドやルーチン、それに
.Ux
の関連ファイルを記述するための日常使用されるインフォーマルな言葉の
サブセットであるマクロとして定義されています。
マニュアル領域のマクロはコマンド名、コマンド行の引数とオプション、
関数名、関数のパラメータ、パス名、変数名、他のマニュアルページへの
クロスリファレンスなどを扱います。
これらの領域の項目は作者とマニュアルページの将来のユーザの両者に
とって価値のあるものです。
マニュアル間で一貫性を高めることによって将来のドキュメントツールへの
移行が容易になることが期待されます。
.Pp
.Ux
マニュアルページ全体を通して、マニュアルのエントリは単純に
マニュアルページ (a man page) とみなされます。
これは実際のページ数と関係ありませんし、性差別をする意図もありません。
.\" 訳注: a man page -- 1 ページ (a page) と男 (man) の意味
.
.
.Sh "さあ、始めよう"
.
このドキュメントの残りの部分で説明されている題材は以下のような構成に
なっています。
.
.Bl -enum -width 3n -offset indent
.  It
.  Tn "TROFF に特有な表現"
.
.  Bl -tag -width 2n -compact
.    It "マクロの使用方法"
.    It "引数に空白文字を指定する"
.    It "行末の空白文字"
.    It "特殊文字のエスケープ"
.    It "その他の注意点"
.  El
.
.  It
.  Tn "マニュアルページのテンプレート"
.
.  It
.  Tn "使用法"
.
.  It
.  Tn "タイトルマクロ"
.
.  It
.  Tn "マニュアル領域および一般テキスト領域の紹介"
.
.  Bl -tag -width 2n -compact
.    It "この名前には何が" Ns ...
.    It "一般的な構文"
.  El
.
.  It
.  Tn "マニュアル領域"
.
.  Bl -tag -width 2n -compact
.    It "アドレス"
.    It "作者名"
.    It "引数"
.    It "コンフィギュレーション宣言 (セクション 4 のみ)"
.    It "コマンド修飾子"
.    It "定義済みの変数"
.    It "errno  (セクション 2 のみ)"
.    It "環境変数"
.    It "フラグ"
.    It "関数の宣言"
.    It "関数の型"
.    It "関数 (ライブラリルーチン)"
.    It "関数の引数"
.    It "戻り値"
.    It "終了ステータス"
.    \" .It "ヘッダファイル (ソースコードを含む)"
.    It "対話的なコマンド"
.    It "ライブラリ名"
.    It "リテラル"
.    It "名称"
.    It "オプション"
.    It "パス名"
.    It "標準"
.    It "変数の型"
.    It "変数"
.    It "マニュアルページのクロスリファレンス"
.  El
.
.  It
.  Tn "一般テキスト領域"
.
.  Bl -tag -width 2n -compact
.    It "AT&T マクロ"
.    It "BSD マクロ"
.    It "NetBSD マクロ"
.    It "FreeBSD マクロ"
.    It "OpenBSD マクロ"
.    It "BSD/OS マクロ"
.    It "UNIX マクロ"
.    It "強調マクロ"
.    It "フォントモード"
.    It "囲い/クォート マクロ"
.    It "無操作もしくは通常テキストマクロ"
.    It "空白なしマクロ"
.    It "セクションのクロスリファレンス"
.    It "記号"
.    It "数式記号"
.    It "参考文献と引用"
.    It "商標名 (頭字語とタイプ名)"
.    It "拡張引数"
.  El
.
.  It
.  Tn "ページ構造領域"
.
.  Bl -tag -width 2n -compact
.    It "セクションヘッダ"
.    It "サブセクションヘッダ"
.    It "段落と行スペース"
.    It "キープ"
.    It "例示とディスプレイ"
.    It "リストとカラム"
.  El
.
.  It
.  Tn "その他のマクロ"
.
.  It
.  Tn "定義済みの文字列"
.
.  It
.  Tn "診断"
.
.  It
.  Tn "GROFF, TROFF および NROFF を使用した整形"
.
.  It
.  Tn "関連ファイル"
.
.  It
.  Tn "関連項目"
.
.  It
.  Tn "バグ"
.El
.
.\" XXX
.if t \
.  ne 7
.
.
.Sh "TROFF に特有な表現"
.
.Nm \-mdoc
パッケージは、マニュアルページを記述するプロセスを簡単にすることを
目的としています。
.Nm \-mdoc
を使うために
.Tn GNU
.Xr troff 1
のゴタゴタした詳細を学ぶ必要がないのが理想ですが、
いくつか片付けるべき避けられない制限事項があります。
また、このパッケージは高速で
.Em ない
ということも予め警告しておきます。
.
.Ss "マクロの使用方法"
.
.Tn GNU
.Xr troff 1
のように、マクロは
.Ql .\&
(ドット)
を行頭に置き、それに続けて 2 文字 (または 3 文字) からなる
マクロの名称を指定することによって呼び出されます。
ドットとマクロの間にはスペースかタブを置くことができます。
引数はマクロの後にスペースで区切って指定することができます
(タブは使用
.Em できません )
。
行頭にドットを指定することによって
.Tn GNU
.Xr troff 1
にそれに続く 2 文字 (あるいはそれより多い文字) を
マクロ名として解釈するよう指示しています。
最初にドット 1 文字をとり、その後ろに何も来ない場合は
無視されます。
マクロを起動させたくないような文脈で、入力行の先頭に
.Ql .\&
(ドット)
を置くためには、
.Ql .\&
(ドット) の前にエスケープシーケンス
.Ql \e&
を指定します。
.Ql \e&
は文字通りスペース幅が 0 として解釈され、出力には現れません。
.Pp
一般的に
.Tn GNU
.Xr troff 1
マクロは取り得る引数の数に制限はありません (9 つ以上の
引数を扱うことのできない他のバージョンの troff とは違います)。
限られた場合ではありますが、引数を次の行に続けたり、拡張したり
することができます
(後述の
.Sx 拡張引数
のセクションを参照)。
ほとんどすべてのマクロで引用符に囲まれた引数を扱うことができます
(後述の
.Sx 引数に空白文字を指定する
のセクションを参照)。
.Pp
.Nm \-mdoc
での一般テキスト領域とマニュアル領域のほとんどのマクロは、
呼び出し可能なマクロ名を決定するためにその引数のリストが
.Em 構文解析
されるという点で特別なものです。
これはつまり、一般テキスト領域またはマニュアル領域のマクロ名に一致し
(かつ、呼び出し可能であると定義された) 引数リスト中の引数は、
処理される時に実行されるか、もしくは呼び出されるということです。
この場合、引数がマクロの名前であっても
.Ql .\&
(ドット)
で前置されません。
このようにしてたくさんのマクロを入れ子にすることができます。
例えばオプションマクロ
.Ql .Op
はフラグマクロおよび引数マクロ
.Ql \&Fl
と
.Ql \&Ar
を
.Em 呼び出し
て、オプションのフラグを引数とともに指定することができます:
.
.Bl -tag -width ".Op Fl s Ar bytes" -offset indent
.It Op Fl s Ar bytes
は
.Ql ".Op Fl s Ar bytes"
で生成されます。
.El
.
.Pp
文字列がマクロ名と解釈されないようにするには、
その文字列の前にエスケープシーケンス
.Ql \e&
を指定します。
.
.Bl -tag -width ".Op \&Fl s \&Ar bytes" -offset indent
.It Op \&Fl s \&Ar bytes
は
.Ql ".Op \e&Fl s \e&Ar bytes"
で生成されます。
.El
.
.Pp
ここで文字列
.Ql \&Fl
と
.Ql \&Ar
はマクロとして解釈されていません。
このドキュメントを通じて、
呼び出し可能な引数を調べるために引数リストが構文解析されるマクロは
.Em 構文解析される
マクロとして参照し、
引数リストから呼び出されることができるマクロは
.Em 呼び出し可能
なマクロとして参照します。
.Nm \-mdoc
のマクロはほとんどすべてが構文解析されるのですから、これは技術的には
.Em 適当でない
表現ですが、常にマクロを「呼び出し可能である」とか「他のマクロを
呼び出すことができる」と表現するのは面倒なことであるため、
「構文解析される」という用語を使います。
.
.Pp
以降、この区別が必要な場合、行頭 (でドットで開始する)
.Nm \-mdoc
マクロを
.Em コマンド
と呼びます。
.
.Ss "引数に空白文字を指定する"
.
1 つ以上の空白文字を含む文字列を引数として指定したい
場合があります。
引数リスト中の要素が特定の並びをしていることを
期待しているコマンドに引数を指定する時に必要になることがあります。
さらに、こうすると
.Nm \-mdoc
が速く実行されるようになるのです。
例えば、関数コマンド
.Ql .Fn
では第 1 引数は関数名であり、残りの引数が関数のパラメータであると
想定されています。
.Tn ANSI\~C
では、関数のパラメータ宣言を括弧で囲まれたパラメータリスト中に
明示することを規定しているので、
各パラメータは最低でも 2 語の文字列となります。
例えば、
.Fa int foo
のようになります。
.Pp
空白を含む引数を指定するには 2 通りの方法があります。
1 つは、空白を含む文字列を渡すのに、固定の空白、
つまりパディングされない空白文字
.Ql \e\ 
を使う方法です。
すなわち、空白の前にエスケープ文字
.Ql \e
を指定します。
この方法はどのマクロでも使うことができますが、1 行が長くなり過ぎた
テキストを調整するときの邪魔になるという副作用があります。
.Xr troff
では、固定の空白は他の印刷可能な文字と同様に扱われ、通常期待されるように
その箇所で文字列を空白や改行で分けることは行われなくなります。
この方法は文字列が行の境界にまたがることが好ましくない場合に有用です。
代替案としては、
パディング可能 (すなわち伸長可能) で分割不可能な空白
.Ql \e~
を使うことがあります (これは、
.Tn GNU
.Xr troff 1
拡張です)。
2 つ目の方法は、文字列をダブルクォートで括ることです。
.Pp
例えば、次のようにします:
.
.Bl -tag -width ".Fn fetch char\ *str" -offset indent
.It Fn fetch char\ *str
は
.Ql ".Fn fetch char\e *str"
で生成されます。
.It Fn fetch "char *str"
は、また
.Ql ".Fn fetch \*[q]char *str\*[q]"
でも生成することができます。
.El
.
.Pp
もし、最初の例の空白の前もしくは次の例のダブルクォートの前の
.Ql \e
が省略されていた場合には
.Ql .Fn
は引数が 3 つであるとみなし、その結果は
.Pp
.Dl Fn fetch char *str
.Pp
となります。
.\" For an example of what happens when the parameter list overlaps a newline
.\" boundary, see the
.\" .Sx BUGS
.\" section.
.
.Ss "行末の空白文字"
.
.Xr troff
は行末に空白文字があると混乱してしまうことがあります。
.Ao 空白 Ac Ns Ao 行末 Ac
の文字の並びからすべての空白文字を取り除くのは良い予防策です。
どうしても行末に空白文字をおく必要性が出てきた場合は、
パディングされない空白とエスケープ文字
.Ql \e&
を使用することによって対応できます。
例えば、
.Ql string\e\ \e&
のようにします。
.
.Ss "特殊文字のエスケープ"
.
改行
.Ql \en
のような特殊文字は、バックスラッシュを保存するために
.Ql \e
を
.Ql \ee
で置き換え
(たとえば
.Ql \een
とする) て扱います。
.
.Ss "その他の注意点"
.
表示領域外で空の入力行が見つかった場合には警告が発生します
(後述)。
代わりに
.Ql .sp
を使用してください
.Pf ( Nm \-mdoc
マクロを使用して、低レベルコマンドを使用しないようにすると
ずっと良いです)。
.Pp
先頭に空白を置くと行分割が生じ、そのまま出力されてしまいます。
可能ならばこうなることを避けてください。
同様に、通常のテキスト行において単語間に 2 つ以上の空白文字を
使用しないでください。
これは、他のテキストフォーマッタとは対照的です。
空白文字を 2 つ以上置いても 1 つの空白文字に置き換わり
.Em ません
。
.Pp
引数として
.Ql \*[q]
を直接渡すことはできません。
代わりに
.Ql \e*[q]
(あるいは
.Ql \e*q )
を使用してください。
.Pp
デフォルトでは、
.Xr troff 1
は文を終了させる句読点の後に空白文字を 2 つ挿入します。
つまり、
.Ql \&)
あるいは
.Ql \&'
などの文字はそのまま扱われ、文の終了には影響を与えません。
この動作を変更するには、
ドットの前あるいは後に
.Ql \e&
を挿入してください。
.
.Bd -literal -offset indent
The
\&.Ql .
character.
\&.Pp
The
\&.Ql \e&.
character.
\&.Pp
\&.No test .
test
\&.Pp
\&.No test.
test
.Ed
.Pp
.
は、
.
.Bd -filled -offset indent
The
.Ql .
character.
.Pp
The
.Ql \&.
character.
.Pp
.No test .
test
.Pp
.No test.
test
.Ed
.\" 次の .sp は翻訳で追加。
.sp
となります。
.Pp
.
1 行目および 3 行目にみられるように、
.Nm \-mdoc
はマクロ引数の中では句読点を特別に扱います。
これについては、後述の
.Sx 一般的な構文
の節で述べます。
同様の方法で、幅 0 の空白を続けることで、
省略形の後に続いたピリオドを保護しなくてはなりません。
例えば
.Ql e.g.\e&
のようにします。
.Pp
マニュアルページのソースファイル中のコメントは、
独立した行では
.Ql .\e"
、何らかの入力があった後では
.Ql \e"
を、あるいはどのような場所でも使いたい場合は
.Ql \e#
を使うことができます
(後者は
.Tn GNU
.Xr troff 1
拡張です)。
このような行の残りの部分は無視されます。
.
.
.Sh "マニュアルページのテンプレート"
.
マニュアルページの中身は次のような基本的なテンプレートから
簡単に作成できます。
.
.Bd -literal -offset indent
\&.\e" 以下のコマンドはすべてのマニュアルページで必要な項目です。
\&.Dd 月 日, 年
\&.Os [オペレーティングシステム] [バージョン/リリース]
\&.Dt ドキュメントタイトル [セクション番号] [アーキテクチャ/ボリューム]
\&.Sh NAME
\&.Nm 名称
\&.Nd 名称についての 1 行での説明
\&.\e" 次のコマンドはセクション 2, 3 でのみ必要なものです。
\&.\e" .Sh LIBRARY
\&.Sh SYNOPSIS
\&.Sh DESCRIPTION
\&.\e" 以下のコマンドについては、必要に応じてコメントをはずして使用して
\&.\e" ください。
\&.\e" .Sh IMPLEMENTATION NOTES
\&.\e" この次のコマンドはセクション 2, 3, 9 でのみ必要な、関数の
\&.\e" 戻り値です。
\&.\e" .Sh RETURN VALUES
\&.\e" 次のコマンドはセクション 1, 6, 7, 8, 9 でのみ必要なものです。
\&.\e" .Sh ENVIRONMENT
\&.\e" .Sh FILES
\&.\e" .Sh EXAMPLES
\&.\e" 次のコマンドはセクション 1, 6, 7, 8, 9 でのみ必要なものです。
\&.\e"     ((シェルへの)コマンドの戻り値と
\&.\e"       fprintf/stderr タイプの診断です)
\&.\e" .Sh DIAGNOSTICS
\&.\e" .Sh COMPATIBILITY
\&.\e" 次のコマンドはセクション 2, 3, 9 でのみ必要な、
\&.\e"     エラーハンドリングとシグナルハンドリングです。
\&.\e" .Sh ERRORS
\&.\e" .Sh SEE ALSO
\&.\e" .Sh STANDARDS
\&.\e" .Sh HISTORY
\&.\e" .Sh AUTHORS
\&.\e" .Sh BUGS
.Ed
.Pp
.
このテンプレートにおける最初のコマンドはマクロ
.Ql .Dd ,
.Ql .Os ,
および
.Ql .Dt
であり、それぞれドキュメントの日付、
マニュアルページもしくは題材となっているソースの開発や変更の
対象となったオペレーティングシステム、そして
マニュアルページのタイトルを属するマニュアルのセクション番号と
ともに
.Pf ( Em 大文字で )
指定したもの、となっています。
これらのコマンドはそのページを識別するものであり、後述の
.Sx タイトルマクロ
で解説されます。
.Pp
テンプレート中の残りの項目はセクションのヘッダ
.Pf ( Li .Sh )
であり、それらのうち
.Sx NAME ,
.Sx SYNOPSIS ,
および
.Sx DESCRIPTION
は必須項目です。
これらのヘッダについては
.Sx "マニュアル領域"
を説明した後、
.Sx "ページ構造領域"
で解説されます。
いくつかのコンテントマクロはページレイアウトマクロの説明に
使用されていますので、ページレイアウトマクロの前にコンテントマクロに
ついて読むことを推奨します。
.
.
.Sh 使用法
.
次に説明するマクロはすべて、オプションの引数は
角括弧 ([]) で括られます。
省略符号
.Pf ( Sq ... )
はさらに 0 個以上の引数があることを表しています。
パラメータの代替値は
.Ql |
で区切って示します。
必須パラメータに代替値がある場合は、
.Pf ( Ql |
と一緒に)
中括弧 ({}) を用い、値の組を括ります。
メタ変数は山括弧 (<>) の中で指定されます。
.Pp
例:
.
.Bl -tag -width 6n -offset indent
.It Li .Xx Xo
.Aq foo
.Brq bar1 | bar2
.Op \-test1 Op \-test2 | \-test3
.No ...
.Xc
.El
.
.Pp
とくに明示しない限り、すべてのマクロは
構文解析され、呼び出し可能なものです。
.Pp
マクロの効果が持続するのは、
次のネストしたマクロまでであることに注意してください。
例えば
.Ql ".Ic foo Aq bar"
は
.Sq Ic "foo <bar>"
とはならず
.Sq Ic foo Aq bar
となります。
この結果、最初の引数がマクロである場合、
ほとんどのコマンドに対して警告が出力されます。
マクロがコマンド呼び出しの効果を完全に打ち消してしまうからです。
また、マクロをクォートしても、文字通りのクォートは挿入されないことは重要です。
.Sq Ic "foo <bar>"
は
.Ql ".Ic \*[q]foo <bar>\*[q]"
から生成されます。
.Pp
大部分のマクロはデフォルトの幅の値を持っており、これを
.Ql .Bl
および
.Ql .Bd
マクロ用にラベル
width
.Pf ( Fl width )
あるいは offset
.Pf ( Fl offset )
を指定するのに使用することができます。
.Nm \-mdoc
パッケージのローカルな変更に依存することのないように、
このとても曖昧な機能は使わないことを推奨します。
.
.
.Sh "タイトルマクロ"
.
タイトルマクロはページ構造領域の一部ですが、
マニュアルページを昨日書き始めようと思ったという人のために、
最初に、他のとは別に記述されています。
3 つのヘッダマクロでドキュメントまたはマニュアルページのタイトル、
オペレーティングシステム、および原著の日付を指定します。
これらのマクロはドキュメントの最初で一度だけ呼び出されるもので、
ヘッダとフッタを構成するためだけに使用されます。
.
.Bl -tag -width 6n
.It Li .Dt Xo
.Op Aq ドキュメントタイトル
.Op Aq セクション番号
.Op Aq ボリューム
.Xc
ドキュメントタイトルはマニュアルページの主題であり、
troff の制限により
.Tn 大文字
でなければいけません。
省略された場合、
.Sq Tn UNTITLED
が使われます。
セクション番号は
.No 1,\~ Ns ... Ns ,\~9
の範囲の番号もしくは
.Ql unass ,
.Ql draft ,
.Ql paper
のいずれかを取ることができます。
セクション番号が指定されており、ボリューム名が与えられていない
場合には、デフォルトのボリューム名が使用されます。
.
.Pp
.Tn \*[operating-system]
では、次のセクションが定義されています:
.Pp
.Bl -column LOCAL -offset indent -compact
.It Li 1   Ta "\*[volume-operating-system] \*[volume-ds-1]"
.It Li 2   Ta "\*[volume-operating-system] \*[volume-ds-2]"
.It Li 3   Ta "\*[volume-operating-system] \*[volume-ds-3]"
.It Li 4   Ta "\*[volume-operating-system] \*[volume-ds-4]"
.It Li 5   Ta "\*[volume-operating-system] \*[volume-ds-5]"
.It Li 6   Ta "\*[volume-operating-system] \*[volume-ds-6]"
.It Li 7   Ta "\*[volume-operating-system] \*[volume-ds-7]"
.It Li 8   Ta "\*[volume-operating-system] \*[volume-ds-8]"
.It Li 9   Ta "\*[volume-operating-system] \*[volume-ds-9]"
.El
.Pp
.
ボリューム名は任意であるか、もしくは次のものを
取ることができます:
.
.Pp
.Bl -column LOCAL -offset indent -compact
.It Li USD   Ta "\*[volume-ds-USD]"
.It Li PS1   Ta "\*[volume-ds-PS1]"
.It Li AMD   Ta "\*[volume-ds-AMD]"
.It Li SMM   Ta "\*[volume-ds-SMM]"
.It Li URM   Ta "\*[volume-ds-URM]"
.It Li PRM   Ta "\*[volume-ds-PRM]"
.It Li KM    Ta "\*[volume-ds-KM]"
.It Li IND   Ta "\*[volume-ds-IND]"
.It Li LOCAL Ta "\*[volume-ds-LOCAL]"
.It Li CON   Ta "\*[volume-ds-CON]"
.El
.Pp
.
互換性を保つため、
.Ql IND
の代わりに
.Ql MMI
を使用することができ、
.Ql LOCAL
の代わりに
.Ql LOC
を使用できます。
先の表の値は、新しいボリューム名を指定します。
第 3 パラメータがコンピュータアーキテクチャを表すキーワードで
ある場合、その値は第 2 パラメータで指定したボリューム名の
前に追加されます。
デフォルトでは次のアーキテクチャに関するキーワードが定義されています:
.
\# we use `No' to avoid hyphenation
.Bd -ragged -offset indent
.No alpha , acorn26 , acorn32 , algor , amd64 , amiga , arc , arm26 ,
.No arm32 , atari , bebox , cats , cesfic , cobalt , dreamcast , evbarm ,
.No evbmips , evbppc , evbsh3 , hp300 , hp700 , hpcmips , i386 , luna68k ,
.No m68k , mac68k , macppc , mips , mmeye , mvme68k , mvmeppc , netwinder ,
.No news68k , newsmips , next68k , ofppc , pc532 , pmax , pmppc , powerpc ,
.No prep , sandpoint , sgimips , sh3 , shark , sparc , sparc64 , sun3 ,
.No tahoe , vax , x68k , x86_64
.Ed
.Pp
.
セクション番号が 1 から 9 の範囲の数値ではなく、
また前述のキーワードでない場合、
第 3 パラメータがそのままボリューム名として使用されます。
.Pp
次の例では、マニュアルページのヘッダの左側 (これは右側と同じものです) と
中央に書かれる文字列を示しています。
.Ql \e&
が数値 7 を正当な数値として解釈されないようにしている点に注意してください。
.
.Bd -ragged
.Bl -tag -width ".Li .Dt\ FOO\ 2\ i386" -compact -offset indent
.It Li ".Dt FOO 7"
.Ql FOO(7)
.Ql \*[volume-operating-system] \*[volume-ds-7]
.It Li ".Dt FOO 7 bar"
.Ql FOO(7)
.Ql \*[volume-operating-system] \*[volume-ds-7]
.It Li ".Dt FOO \e&7 bar"
.Ql FOO(7)
.Ql bar
.It Li ".Dt FOO 2 i386"
.Ql FOO(2)
.Ql \*[volume-operating-system]/\*[volume-as-i386] \*[volume-ds-2]
.It Li ".Dt FOO \*[q]\*[q] bar"
.Ql FOO
.Ql bar
.El
.Ed
.Pp
.
ローカルな追加項目や OS に特化した追加項目が、ファイル
.Pa mdoc.local
にあるかもしれません。
このファイル中で
.Ql volume-ds-XXX
(前者のタイプについて) および
.Ql volume-as-XXX
(後者のタイプについて)
という名前の文字列を検索してください。
ここで
.Ql XXX
は
.Ql .Dt
マクロで使用されるキーワードを表しています。
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
.
.It Li .Os Xo
.Op Aq オペレーティングシステム
.Op Aq リリース番号
.Xc
第 1 パラメータが空の場合、
デフォルト値
.Sq Tn "\*[operating-system]"
が使用されます。
これは、ローカルの設定ファイル
.Pa mdoc.local
で上書きできます。
一般的には、
オペレーティングシステムの名称には一般的な頭字語 (略称) を
使わなければなりません。
例えば
.Tn BSD
や
.Tn ATT
といったものです。
リリース番号は、各システムでの標準のリリースの命名法を使用します。
次の表では、いくつか事前に定義されているオペレーティングシステムに
対して取り得る第 2 引数をリストしています。
.Ql .Dt
と同じように、ローカルな追加項目が
.Pa mdoc.local
に定義されているかもしれません。
このファイル中で
.Ql operating-system-XXX-YYY
という名前の文字列を検索してください。
ここで
.Ql XXX
はオペレーティングシステムの頭字語 (略称) そして
.Ql YYY
がリリース ID です。
.
.Bd -ragged -compact
.Bl -tag -width ".No FreeBSD" -offset indent
.It ATT
7th, 7, III, 3, V, V.2, V.3, V.4
.It BSD
3, 4, 4.1, 4.2, 4.3, 4.3t, 4.3T, 4.3r, 4.3R, 4.4
.It NetBSD
0.8, 0.8a, 0.9, 0.9a, 1.0, 1.0a, 1.1, 1.2, 1.2a, 1.2b, 1.2c, 1.2d, 1.2e,
1.3, 1.3a, 1.4, 1.4.1, 1.4.2, 1.4.3, 1.5, 1.5.1, 1.5.2, 1.5.3, 1.6, 1.6.1,
1.6.2, 2.0, 2.1
.It FreeBSD
1.0, 1.1, 1.1.5, 1.1.5.1, 2.0, 2.0.5, 2.1, 2.1.5, 2.1.6, 2.1.7, 2.2, 2.2.1,
2.2.2, 2.2.5, 2.2.6, 2.2.7, 2.2.8, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 4.0, 4.1,
4.1.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.6.2, 4.7, 4.8, 4.9, 4.10, 5.0, 5.1, 5.2,
5.2.1, 5.3
.El
.Ed
.Pp
.
.Tn ATT
に関しては、判別できない第 2 パラメータがある時には
それを文字列
.Tn UNIX
に置き換えます。
事前に定義されているその他の頭字語 (略称) に
ついては、そのようなパラメータは無視され、警告メッセージが
出力されます。
認識できない引数は、ページフッタ中に記述された通りに
表示されます。
例えば、典型的なフッタは次のようになるでしょう:
.Pp
.Dl .Os BSD 4.3
.Pp
は
.Ql 4.3\~Berkeley Distribution
となります。
また、ローカルで作られたセットの例では、
.Pp
.Dl .Os CS Department
.Pp
は
.Ql CS\~Department
となります。
.Pp
.Ql .Os
マクロがない場合、ページの左下隅は見苦しくなってしまうでしょう。
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
.
.It Li .Dd Oo
.Aq 月
.Aq 日 ,
.Aq 年
.Oc
.Ql Dd
に引数がない場合は、日付には
.Ql "基準時点 (協定世界時 1970年1月1日 00:00:00)"
が使用されます。
ちょうど 3 つ引数がある場合には、それらは連結され、
分割できない空白で分けられたものになります。
.Pp
.Dl .Dd January 25, 2001
.Pp
それ以外の場合は現在の日付が使用され、パラメータは無視されます。
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
.El
.
.
.Sh "マニュアル領域および一般テキスト領域の紹介"
.
.Ss "この名前には何が" Ns ...
.
マニュアル領域のマクロ名はコマンドやサブルーチン、それに関連ファイルを
説明するために使われている日常のインフォーマルな言葉から取られています。
この言葉と少し違うバリエーションのものがマニュアルページを書く上での
3 つの異なった側面を記述するのに使われます。
最初のものは、
.Nm \-mdoc
マクロコマンド使用方法の説明です。
2 番目は
.Nm \-mdoc
マクロを
.Em 用いた
.Ux
コマンドの記述です。
3 番目はコマンドを通常の言葉の感覚でユーザに示したものです。
これはすなわち、マニュアルページのテキスト中でのコマンドの
説明となります。
.Pp
最初のケースでは、
.Xr troff 1
マクロはそれ自身、一種のコマンドとなっています。
troff コマンドは一般的に以下のような形式をとります。
.
.Bd -filled -offset indent
.Li ".Xx argument1 argument2" ...
.Ed
.Pp
.
.Ql .Xx
はマクロコマンドを示しており、それに続くものは
すべて処理されるべき引数として処理されます。
2 番目のケースでは、コンテントマクロを使用する
.Ux
コマンドの記述がもう少し含まれます。
典型的な
.Sx SYNOPSIS
コマンド行はこのように表示されます。
.
.Bd -filled -offset indent
.Nm filter
.Op Fl flag
.Ao Ar infile Ac Ao Ar outfile Ac
.Ed
.Pp
.
ここで
.Nm filter
はコマンド名であり、角括弧で囲まれた文字列
.Fl flag
は
.Em フラグ
引数で、これは角括弧で囲むことによってオプションであることを
示しています。
.Nm \-mdoc
の用語では、
.Ao Ar infile Ac
および
.Ao Ar outfile Ac
は
.Em メタ引数
と称されています。
この例では、ユーザは山括弧 (<>) の中で与えられたメタ引数を
実際のファイル名に置き換えなくてはなりません。
このドキュメントでは、メタ引数は
.Nm \-mdoc
コマンドを記述するのに使用していることに注意してください。
多くのマニュアルページでは、メタ変数はわざわざ山括弧を使って
書かれていません。
上の例を整形したマクロは以下のものです。
.
.Bd -literal -offset indent
\&.Nm filter
\&.Op Fl flag
\&.Ao Ar infile Ac Ao Ar outfile Ac
.Ed
.Pp
.
3 番目のケースでは、コマンドの説明や構文に上記の例の両方が使われ、
さらに細かい記述が追加されるでしょう。
上の例での引数
.Ao Ar infile Ac
および
.Ao Ar outfile Ac
は
.Em オペランド
もしくは
.Em ファイル引数
として参照されます。
コマンド行の引数のリストはかなり長くなる場合もあります。
.
.Bd -ragged
.Bl -tag -width ".Nm make" -offset indent -compact
.It Nm make
.Op Fl eiknqrstv
.Op Fl D Ar variable
.Op Fl d Ar flags
.Op Fl f Ar makefile
.Op Fl I Ar directory
.Op Fl j Ar max_jobs
.Op Ar variable Ns = Ns Ar value
.Bk
.Op Ar target ...
.Ek
.El
.Ed
.Pp
.
ここではコマンド
.Nm make
について記述しており、
.Ar makefile
をフラグ
.Fl f
の引数としています。
またオプションのファイルオペランドである
.Ar target
についても言及しています。
言葉での説明では、こういった詳細な記述が混乱を防いでくれますが、
.Nm \-mdoc
パッケージにはフラグ
.Em への
引数のためのマクロがありません。
その代わりに
.Ar target
のようなオペランドやファイル引数に使われる引数マクロ
.Ql \&Ar
が
.Ar variable
のようなフラグへの引数と同様に使われます。
この make コマンド行は次の指定により生成されています。
.
.Bd -literal -offset indent
\&.Nm make
\&.Op Fl eiknqrstv
\&.Op Fl D Ar variable
\&.Op Fl d Ar flags
\&.Op Fl f Ar makefile
\&.Op Fl I Ar directory
\&.Op Fl j Ar max_jobs
\&.Op Ar variable Ns = Ns Ar value
\&.Bk
\&.Op Ar target ...
\&.Ek
.Ed
.Pp
.
マクロ
.Ql .Bk
および
.Ql .Ek
は
.Sx キープ
セクションにおいて解説されています。
.
.Ss "一般的な構文"
.
マニュアル領域のマクロと一般テキスト領域のマクロとはいくつか
小さな違いがあるものの、同様な構文を使用しています。
とりわけ、
.Ql .Ar ,
.Ql .Fl ,
.Ql .Nm ,
および
.Ql .Pa
は引数なしで呼び出された時の違いしかありません。
また、
.Ql .Fn
および
.Ql .Xr
は引数のリストの順番が異なります。
すべてのコンテントマクロが句読点を認識し、それを正しく扱うには、
各々の句読点文字が先行する空白で分離されている必要があります。
次のようにコマンドが指定されている場合、
.Pp
.Dl \&.Ar sptr, ptr),
.Pp
その結果は以下のようになります。
.Pp
.Dl Ar sptr, ptr),
.Pp
ここでは句読点は認識されず、すべての出力は
.Ql .Ar
で使用されるフォントで行われています。
句読点が空白文字で区切られている場合、
.Pp
.Dl \&.Ar "sptr , ptr ) ,"
.Pp
結果は以下のようになります。
.Pp
.Dl Ar sptr , ptr ) ,
.Pp
今度は句読点が認識され、出力はデフォルトのフォントで行われ
引数文字列とは区別されています。
句読点文字の特別な意味を取り除くには、
.Ql \e&
でエスケープしてください。
.Pp
.Nm \-mdoc
は次の句読点文字を認識します。
.
.Bl -column -offset indent-two XXXXXX XXXXXX XXXXXX XXXXXX
.It Li .\& Ta Li ,\& Ta Li :\& Ta Li ;\& Ta Li (\&
.It Li )\& Ta Li [\& Ta Li ]\& Ta Li ?\& Ta Li !\&
.El
.Pp
.
.Xr troff
はマクロ言語としての限界から、以下のような、数学、論理学、引用符の
集合のメンバを含んだ文字列を表現するのは困難です。
.
.Bd -literal -offset indent-two
{+,\-,/,*,%,<,>,<=,>=,=,==,&,`,',"}
.Ed
.Pp
.
問題なのは、文字によって示唆されている操作もしくは評価が、
実行されるべきであると
.Xr troff
が仮定する場合があることです。
これらの文字が予期しない形で評価されないようにするには、
.Ql \e&
でこれらをエスケープしてください。
最初のコンテントマクロは、以下の
.Ql .Ad
において、その典型的な構文が示されています。
.
.
.Sh "マニュアル領域"
.
.Ss "アドレス"
.
アドレスマクロはアドレスの構成を識別します。
.Pp
.Dl 使い方: .Ad Ao アドレス Ac ...
.Pp
.Bl -tag -width ".Li .Ad\ f1\ ,\ f2\ ,\ f3\ :" -compact -offset 15n
.It Li ".Ad addr1"
.Ad addr1
.It Li ".Ad addr1 ."
.Ad addr1 .
.It Li ".Ad addr1 , file2"
.Ad addr1 , file2
.It Li ".Ad f1 , f2 , f3 :"
.Ad f1 , f2 , f3 :
.It Li ".Ad addr ) ) ,"
.Ad addr ) ) ,
.El
.Pp
.
デフォルトの文字幅は 12n です。
.
.Ss "作者名"
.
.Ql .An
コマンドは文書化されている項目の作者の名前、もしくは実際の
マニュアルページの作者の名前を指定するために使われます。
.Pp
.Dl 使い方: .An Ao 作者名 Ac ...
.Pp
.Bl -tag -width ".Li .An\ \*[q]Joe\ Author\*[q]\ )\ )\ ," -offset 15n
.It Li ".An \*[q]Joe Author\*[q]"
.An "Joe Author"
.It Li ".An \*[q]Joe Author\*[q] ,"
.An "Joe Author" ,
.It Li ".An \*[q]Joe Author\*[q] Aq nobody@FreeBSD.org"
.An "Joe Author" Aq nobody@FreeBSD.org
.It Li ".An \*[q]Joe Author\*[q] ) ) ,"
.An "Joe Author" ) ) ,
.El
.Pp
.
デフォルトの文字幅は 12n です。
.Pp
.Sx AUTHORS
セクションでは、
.Ql .An
リクエストは改行を引き起こし、新しい名前がそれぞれの行に表示されます。
この動作が望ましくない場合、
.
.Bd -literal -offset indent
\&.An -nosplit
.Ed
.Pp
.
を呼び出すことで無効にできます。
それぞれの行に表示させる動作に戻したい場合は、
.
.Bd -literal -offset indent
\&.An -split
.Ed
.\" 次の .sp は翻訳で追加。
.sp
と記述します。
.
.Ss "引数"
.
引数マクロ
.Li .Ar
はコマンド行の引数を参照する際にはいつでも使用することができます。
引数なしで呼ばれた場合、
.Sq Ar
が出力になります。
.Pp
.Dl 使い方: .Ar Oo Ao 引数 Ac Oc ...
.Pp
.Bl -tag -width ".Li .Ar\ file1\ file2" -compact -offset 15n
.It Li .Ar
.Ar
.It Li ".Ar file1"
.Ar file1
.It Li ".Ar file1 ."
.Ar file1 .
.It Li ".Ar file1 file2"
.Ar file1 file2
.It Li ".Ar f1 f2 f3 :"
.Ar f1 f2 f3 :
.It Li ".Ar file ) ) ,"
.Ar file ) ) ,
.El
.Pp
.
デフォルト幅は 12n です。
.
.Ss "コンフィギュレーション宣言 (セクション 4 のみ)"
.
.Ql .Cd
コマンドはセクション 4 のマニュアルにおいて、デバイスインタフェースの
.Xr config 8
による宣言の説明に使われます。
.Pp
.Dl 使い方: .Cd Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Cd\ Xdevice\ le0\ at\ scode?X" -offset 15n
.It Li ".Cd \*[q]device le0 at scode?\*[q]"
.Cd "device le0 at scode?"
.El
.Pp
.Sx SYNOPSIS
セクションでは
.Ql .Cd
リクエストはその引数が表示される前後で改行を入れます。
.Pp
.
デフォルト幅は 12n です。
.
.Ss "コマンド修飾子"
.
コマンド修飾子は
.Ql .Cm
マクロがすべての引数の前にダッシュ文字を付けないことを除いて、
.Ql .Fl
(フラグ) コマンドと同じです。
伝統的にフラグはダッシュ文字に引き続いて指定されますが、
この方法を使わないコマンドやコマンドのサブセットもあります。
コマンド修飾子はエディタコマンドのような対話的なコマンドでも
指定されることがあります。
.Sx フラグ
セクションを参照してください。
.Pp
デフォルト幅は 10n です。
.
.Ss "定義済みの変数"
.
インクルードファイルにおいて定義されている変数 (もしくは定数) は
マクロ
.Ql .Dv
によって指定します。
.Pp
.Dl 使い方: .Dv Ao 定義済みの変数 Ac ...
.Pp
.Bl -tag -width ".Li .Dv\ MAXHOSTNAMELEN" -compact -offset 15n
.It Li ".Dv MAXHOSTNAMELEN"
.Dv MAXHOSTNAMELEN
.It Li ".Dv TIOCGPGRP )"
.Dv TIOCGPGRP )
.El
.Pp
.
デフォルト幅は 12n です。
.
.Ss errno
.
.Ql .Er
errno マクロは、セクション 2, 3, 9 のライブラリルーチンにおける
エラーの戻り値を指定します。
下記の 2 番目の例では
.Ql .Er
は一般テキスト領域マクロである
.Ql .Bq
(これはセクション 2 のマニュアルページで使われています) と共に
使われています。
.Pp
.Dl 使い方: .Er Ao errno のタイプ Ac ...
.Pp
.Bl -tag -width ".Li .Bq\ Er\ ENOTDIR" -compact -offset 15n
.It Li ".Er ENOENT"
.Er ENOENT
.It Li ".Er ENOENT ) ;"
.Er ENOENT ) ;
.It Li ".Bq Er ENOTDIR"
.Bq Er ENOTDIR
.El
.Pp
.
デフォルト幅は 17n です。
.
.Ss "環境変数"
.
.Ql .Ev
マクロは環境変数を指定します。
.Pp
.Dl 使い方: .Ev Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Ev\ PRINTER\ )\ )\ ," -compact -offset 15n
.It Li ".Ev DISPLAY"
.Ev DISPLAY
.It Li ".Ev PATH ."
.Ev PATH .
.It Li ".Ev PRINTER ) ) ,"
.Ev PRINTER ) ) ,
.El
.Pp
.
デフォルト幅は 15n です。
.
.Ss "フラグ"
.
.Ql .Fl
マクロはコマンド行のフラグを扱います。
フラグの前にはダッシュ
.Ql \-
が挿入されます。
ダッシュがつかない対話的なコマンドのために
.Ql .Cm
(コマンド修飾子)
マクロが用意されています。
これはダッシュを付けないことを除いて同じ働きをします。
.Pp
.Dl 使い方: .Fl Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Fl\ xyz\ )\ ," -compact -offset 15n
.It Li .Fl
.Fl
.It Li ".Fl cfv"
.Fl cfv
.It Li ".Fl cfv ."
.Fl cfv .
.It Li ".Cm cfv ."
.Cm cfv .
.It Li ".Fl s v t"
.Fl s v t
.It Li ".Fl \- ,"
.Fl \- ,
.It Li ".Fl xyz ) ,"
.Fl xyz ) ,
.It Li ".Fl |"
.Fl |
.El
.Pp
引数なしで
.Ql .Fl
マクロを指定すると、標準入力/標準出力を意味するダッシュとなります。
.Ql .Fl
マクロにダッシュを 1 つ与えると、2 つのダッシュとなることに
注意して下さい。
.Pp
デフォルト幅は 12n です。
.
.Ss "関数の宣言"
.
.Ql .Fd
コマンドは
.Sx SYNOPSIS
セクションにおいて、セクション 2 または 3 の関数の説明で使われます。
このマクロは呼び出し不可能であり、構文解析もされせん。
.Pp
.Dl 使い方: .Fd Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Fd\ X#include\ <sys/types.h>X" -compact -offset 15n
.It Li ".Fd \*[q]#include <sys/types.h>\*[q]"
.Fd "#include <sys/types.h>"
.El
.Pp
.Sx SYNOPSIS
セクションでは、
関数がすでに示されており、改行がまだされていない場合には
.Ql .Fd
リクエストは改行を入れます。
これによって前の関数呼び出しと次の関数の宣言の間に
最適な行間が設定されます。
.
.Pp
.Ql .In
マクロは、
.Sx SYNOPSIS
セクションで使用すると、
.Li #include
文を表現するものであり、以上の例を短く記述したものです。
このマクロは C プログラム中でインクルードされる
C ヘッダファイルを指定します。
このマクロも改行を挿入します。
.Pp
.Sx SYNOPSIS
セクション以外で使用すると、
山括弧で括られたヘッダファイルを表現します。
.Pp
.Dl 使い方: .In Ao ヘッダファイル Ac
.Pp
.Bl -tag -width ".Li .In\ stdio.h" -compact -offset 15n
.nr in-synopsis-section 1
.It Li ".In stdio.h"
.In stdio.h
.nr in-synopsis-section 0
.It Li ".In stdio.h"
.In stdio.h
.El
.
.Ss "関数の型"
.
このマクロは
.Sx SYNOPSIS
セクションで使うものです。
マニュアルページ中の他の場所でも問題なく使うことができますが、
セクション 2 と 3 の
.Sx SYNOPSIS
セクションにおいてカーネルの通常の形式で関数の型を示すことが
このマクロの目的です
(このマクロは関数名が次の行に置かれるように改行を挿入します)。
.Pp
.Dl 使い方: .Ft Ao 型 Ac ...
.Pp
.Bl -tag -width ".Li .Ft\ struct\ stat" -compact -offset 15n
.It Li ".Ft struct stat"
.Ft struct stat
.El
.
.Ss "関数 (ライブラリルーチン)"
.
.Ql .Fn
マクロは
.Tn ANSI\~C
の記法を規範としています。
.Pp
.Dl 使い方: .Fn Ao 関数 Ac Oo Ao パラメータ Ac Oc ...
.Pp
.Bl -tag -width ".Li .Fn\ align\ Xchar\ *ptrX\ ," -compact -offset 15n
.It Li ".Fn getchar"
.Fn getchar
.It Li ".Fn strlen ) ,"
.Fn strlen ) ,
.It Li ".Fn align \*[q]char *ptr\*[q] ,"
.Fn align "char *ptr" ,
.El
.Pp
他のマクロを呼び出すと
.Ql .Fn
呼び出しの終了を意味することに注意してください
(閉じ括弧がその箇所に挿入されます)。
.Pp
多くのパラメータをとる関数 (これは滅多にないことですが) では、
.Ql .Fo
マクロ (関数マクロの開始) と
.Ql .Fc
マクロ (関数マクロの終了) を
.Ql .Fa
(関数の引数) と共に使って、この制限を回避することができます。
.Pp
使用例:
.
.Bd -literal -offset indent
\&.Ft int
\&.Fo res_mkquery
\&.Fa "int op"
\&.Fa "char *dname"
\&.Fa "int class"
\&.Fa "int type"
\&.Fa "char *data"
\&.Fa "int datalen"
\&.Fa "struct rrec *newrr"
\&.Fa "char *buf"
\&.Fa "int buflen"
\&.Fc
.Ed
.Pp
.
生成結果:
.
.Bd -ragged -offset indent
.Ft int
.Fo res_mkquery
.Fa "int op"
.Fa "char *dname"
.Fa "int class"
.Fa "int type"
.Fa "char *data"
.Fa "int datalen"
.Fa "struct rrec *newrr"
.Fa "char *buf"
.Fa "int buflen"
.Fc
.Ed
.Pp
.
.Sx SYNOPSIS
セクションでは、関数は常に行の先頭から開始されます。
.Sx SYNOPSIS
セクションにおいて複数の関数が示されており、関数の型が
示されない場合、改行が挿入され、現在の関数名とその前の
関数名の間に最適な改行量が設定されます。
.Pp
.Ql .Fn
および
.Ql .Fo
のデフォルト幅の値はそれぞれ 12n と 16n です。
.
.Ss "関数の引数"
.
.Ql .Fa
マクロは関数の引数 (パラメータ) を
マニュアルの
.Sx SYNOPSIS
のセクション外で参照する場合、あるいは
.Ql .Fn
の代わりに
.Ql .Fo
および
.Ql .Fc
囲いマクロを使用した場合には
.Sx SYNOPSIS
のセクション内で参照する場合にも使われます。
.Ql .Fa
は構造体のメンバを参照する場合にも使われます。
.Pp
.Dl 使い方: .Fa Ao 関数の引数 Ac ...
.Pp
.Bl -tag -width ".Li .Fa\ d_namlen\ )\ )\ ," -compact -offset 15n
.It Li ".Fa d_namlen ) ) ,"
.Fa d_namlen ) ) ,
.It Li ".Fa iov_len"
.Fa iov_len
.El
.Pp
.
デフォルト幅は 12n です。
.
.Ss "戻り値"
.
.Ql .Rv
マクロは
.Sx RETURN VALUES
のセクションで使うテキストを生成します。
.Pp
.Dl 使い方: .Rv Oo -std Oc Op Ao 関数 Ac ...
.Pp
例えば、
.Ql ".Rv -std atexit"
は次のテキストを生成します。
.
.Bd -ragged -offset -indent
\# a small hack to suppress a warning message
.ds section-old "\*[section]
.ds section 3
.\" --- 追加 START ---
.\" following part came from doc.tmac workaround the effect of
.\" -dlang=ja_JP.eucJP
.ds str-Rv-std-prefix "The
.ds str-Rv-std-suffix "function returns the value\~0 if successful;
.as str-Rv-std-suffix " otherwise the value\~-1 is returned and
.as str-Rv-std-suffix " the global variable \*[Va-font]errno\f[P]
.as str-Rv-std-suffix " is set to indicate the error.
.ds str-Rv-stds-prefix "The
.ds str-Rv-stds-and    "and
.ds str-Rv-stds-suffix "functions return the value\~0 if successful;
.as str-Rv-stds-suffix " otherwise the value\~-1 is returned and
.as str-Rv-stds-suffix " the global variable \*[Va-font]errno\f[P]
.as str-Rv-stds-suffix " is set to indicate the error.
.ds str-Rv-std0 "Upon successful completion, the value\~0 is returned;
.as str-Rv-std0 " otherwise the value\~-1 is returned and
.as str-Rv-std0 " the global variable \*[Va-font]errno\f[P]
.as str-Rv-std0 " is set to indicate the error.
.\" --- 追加 END ---
.Rv -std atexit
.ds section "\*[section-old]
.Ed
.Pp
.
.Fl std
オプションはセクション 2 と 3 のマニュアルページでのみ有効です。
現在のところ、このマクロは
.Fl std
フラグなしで使用しても何も起こりません。
.
.Ss "終了ステータス"
.
.Ql .Ex
マクロは
.Sx DIAGNOSTICS
のセクションで使うテキストを生成します。
.Pp
.Dl 使い方: .Ex Oo -std Oc Op Ao ユーティリティ Ac ...
.Pp
例えば
.Ql ".Ex -std cat"
は次のテキストを生成します。
.
.Bd -ragged -offset -indent
\# a small hack to suppress a warning message
.ds section-old "\*[section]
.ds section 1
.\" --- 追加 START ---
.\" following part came from doc.tmac workaround the effect of
.\" -dlang=ja_JP.eucJP
.ds str-Ex-std-prefix "The
.ds str-Ex-std-suffix "utility exits\~0 on success,
.as str-Ex-std-suffix " and\~>0 if an error occurs.
.ds str-Ex-stds-prefix "The
.als str-Ex-stds-and str-Rv-stds-and
.ds str-Ex-stds-suffix "utilities exit\~0 on success,
.as str-Ex-stds-suffix " and\~>0 if an error occurs.
.\" --- 追加 END ---
.Ex -std cat
.ds section "\*[section-old]
.Ed
.Pp
.
.Fl std
オプションはセクション 1 と 6 と 8 のマニュアルページでのみ有効です。
現在のところ、このマクロは
.Fl std
フラグなしで使用しても何も起こりません。
.
.Ss "対話的なコマンド"
.
.Ql .Ic
マクロは対話的なコマンド、もしくは内部コマンドを指定します。
.Pp
.Dl 使い方: .Ic Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Ic\ setenv\ ,\ unsetenv" -compact -offset 15n
.It Li ".Ic :wq"
.Ic :wq
.It Li ".Ic \*[q]do while {...}\*[q]"
.Ic "do while {...}"
.It Li ".Ic setenv , unsetenv"
.Ic setenv , unsetenv
.El
.Pp
.
デフォルト幅は 12n です。
.
.Ss "ライブラリ名"
.
.Ql .Lb
マクロは、関数がどのライブラリに組み込まれるかを指定します。
.Pp
.Dl 使い方: .Lb Ao 引数 Ac ...
.Pp
.Ql .Lb
マクロに対して使用可能な引数と結果は次の通りです:
.
.Pp
.Bl -tag -width ".Li libossaudio" -compact -offset indent
.It Li libarm
.Lb libarm
.It Li libarm32
.Lb libarm32
.It Li libc
.Lb libc
.It Li libcdk
.Lb libcdk
.It Li libcompat
.Lb libcompat
.It Li libcrypt
.Lb libcrypt
.It Li libcurses
.Lb libcurses
.It Li libedit
.Lb libedit
.It Li libevent
.Lb libevent
.It Li libform
.Lb libform
.It Li libi386
.Lb libi386
.It Li libintl
.Lb libintl
.It Li libipsec
.Lb libipsec
.It Li libkvm
.Lb libkvm
.It Li libm
.Lb libm
.It Li libm68k
.Lb libm68k
.It Li libmagic
.Lb libmagic
.It Li libmenu
.Lb libmenu
.It Li libossaudio
.Lb libossaudio
.It Li libpam
.Lb libpam
.It Li libpcap
.Lb libpcap
.It Li libpci
.Lb libpci
.It Li libpmc
.Lb libpmc
.It Li libposix
.Lb libposix
.It Li libpthread
.Lb libpthread
.It Li libresolv
.Lb libresolv
.It Li librt
.Lb librt
.It Li libtermcap
.Lb libtermcap
.It Li libusbhid
.Lb libusbhid
.It Li libutil
.Lb libutil
.It Li libx86_64
.Lb libx86_64
.It Li libz
.Lb libz
.El
.Pp
.
ローカルな追加項目や OS 特有の追加項目が、ファイル
.Pa mdoc.local
にあるかもしれません。
.Ql str-Lb-XXX
という名前の文字列を検索してください。
ここで
.Ql XXX
は
.Ql .Lb
マクロとともに使用されるキーワードを示しています。
.Pp
.Sx ライブラリ
のセクションでは、
.Ql .Lb
コマンドは、引数の表示の前後でラインブレークを引き起こします。
.Pp
.
.Ss リテラル
.
リテラルマクロ
.Ql .Li
は特殊文字や変数定数、その他タイプされた通りに表示する必要があるものに
使用することができます。
.Pp
.Dl 使い方: .Li Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Li\ cntrl-D\ )\ ,"  -compact -offset 15n
.It Li ".Li \een"
.Li \en
.It Li ".Li M1 M2 M3 ;"
.Li M1 M2 M3 ;
.It Li ".Li cntrl-D ) ,"
.Li cntrl-D ) ,
.It Li ".Li 1024 ..."
.Li 1024 ...
.El
.Pp
.
デフォルト幅は 16n です。
.
.Ss 名称
.
.Ql .Nm
マクロは文書のタイトルやサブジェクト名を指定するために使われます。
このマクロは呼び出された時の第 1 引数を覚えておくという
変わった特性を持っており、
それは常にそのページのサブジェクト名であるべきです。
引数なしで呼び出されると
.Ql .Nm
は作者のために最低限の仕事をするという意味で、
この初期化された名称を出力します。
注:
セクション 2 または 3 のドキュメントの関数名は
.Sx NAME
セクションにおいて
.Ql .Nm
で指定され、
.Sx SYNOPSIS
セクションや残りのセクションでは
.Ql .Fn
で指定されます。
.Xr csh 1
での
.Ql while
コマンドのキーワードのような対話的なコマンドでは
.Ql .Ic
マクロを使う必要があります。
.Ql .Ic
はほとんど
.Ql .Nm
と同一ですが、
それが使われたときの第 1 引数を記憶することはできません。
.Pp
.Dl 使い方: .Nm Oo Ao 引数 Ac Oc ...
.Pp
.Bl -tag -width ".Li .Nm\ groff_mdoc" -compact -offset 15n
.It Li ".Nm groff_mdoc"
.Nm groff_mdoc
.It Li ".Nm \e-mdoc"
.Nm \-mdoc
.It Li ".Nm foo ) ) ,"
.Nm foo ) ) ,
.It Li ".Nm :"
.Nm :
.El
.Pp
.
デフォルト幅は 10n です。
.
.Ss オプション
.
.Ql .Op
マクロはコマンド行の残りのすべての引数を
オプションであることを示す角括弧で囲み、
末尾の句読点は角括弧の外に置きます。
.Ql .Oo
マクロと
.Ql .Oc
マクロ (それぞれ開き角括弧と閉じ角括弧を生成します) は
複数行に渡って使うことができ、また閉じ括弧の正確な位置を
指定するのに使うことができます。
.Pp
.Dl 使い方: .Op Oo Ao オプション Ac Oc ...
.Pp
.Bl -tag -width ".Li .Op\ Fl\ c\ Ar\ objfil\ Op\ Ar\ corfil\ ," -compact -offset 15n
.It Li .Op
.Op
.It Li ".Op Fl k"
.Op Fl k
.It Li ".Op Fl k ) ."
.Op Fl k ) .
.It Li ".Op Fl k Ar kookfile"
.Op Fl k Ar kookfile
.It Li ".Op Fl k Ar kookfile ,"
.Op Fl k Ar kookfile ,
.It Li ".Op Ar objfil Op Ar corfil"
.Op Ar objfil Op Ar corfil
.It Li ".Op Fl c Ar objfil Op Ar corfil ,"
.Op Fl c Ar objfil Op Ar corfil ,
.It Li ".Op word1 word2"
.Op word1 word2
.It Li ".Li .Op Oo Ao option Ac Oc ..."
.Li .Op Oo Ao options Ac Oc ...
.El
.Pp
これは、
.Ql .Oo
マクロと
.Ql .Oc
マクロを使った典型的な例です:
.
.Bd -literal -offset indent
\&.Oo
\&.Op Fl k Ar kilobytes
\&.Op Fl i Ar interval
\&.Op Fl c Ar count
\&.Oc
.Ed
.Pp
.
出力結果:
.
.Bd -filled -offset indent
.Oo
.Op Fl k Ar kilobytes
.Op Fl i Ar interval
.Op Fl c Ar count
.Oc
.Ed
.Pp
.
.Ql .Op
マクロおよび
.Ql .Oo
マクロのデフォルト幅はそれぞれ
14n と 10n です。
.
.Ss パス名
.
.Ql .Pa
マクロはパス名もしくはファイル名を整形します。
引数なしで呼ばれた場合、
.Sq Pa
文字列が出力となり、これは現在のユーザのホームディレクトリを
表しています。
.Pp
.Dl 使い方: .Pa Oo Ao パス名 Ac Oc ...
.Pp
.Bl -tag -width ".Li .Pa\ /tmp/fooXXXXX\ )\ ." -compact -offset 15n
.It Li .Pa
.Pa
.It Li ".Pa /usr/share"
.Pa /usr/share
.It Li ".Pa /tmp/fooXXXXX ) ."
.Pa /tmp/fooXXXXX ) .
.El
.Pp
.
デフォルト幅は 32n です。
.
.Ss 規格
.
.Ql .St
マクロは、規格の短縮名称を正式名称に置換します。
.Pp
.Dl 使い方: .St Ao 短縮名称 Ac ...
.Pp
使用可能な
.Dq 短縮名称/正式名称
の組は次の通りです:
.
.Pp
.Tn ANSI/ISO C
.Pp
.Bl -tag -width ".Li -iso9945-1-90" -compact -offset indent
.It Li -ansiC
.St -ansiC
.It Li -ansiC-89
.St -ansiC-89
.It Li -isoC
.St -isoC
.It Li -isoC-90
.St -isoC-90
.It Li -isoC-99
.St -isoC-99
.El
.Pp
.
.Tn POSIX
パート 1: System API
.Pp
.Bl -tag -width ".Li -p1003.1g-2000" -compact -offset indent
.It Li -iso9945-1-90
.St -iso9945-1-90
.It Li -iso9945-1-96
.St -iso9945-1-96
.It Li -p1003.1
.St -p1003.1
.It Li -p1003.1-88
.St -p1003.1-88
.It Li -p1003.1-90
.St -p1003.1-90
.It Li -p1003.1-96
.St -p1003.1-96
.It Li -p1003.1b-93
.St -p1003.1b-93
.It Li -p1003.1c-95
.St -p1003.1c-95
.It Li -p1003.1g-2000
.St -p1003.1g-2000
.It Li -p1003.1i-95
.St -p1003.1i-95
.It Li -p1003.1-2001
.St -p1003.1-2001
.It Li -p1003.1-2004
.St -p1003.1-2004
.El
.Pp
.
.Tn POSIX
パート 2: シェルとユーティリティ
.Pp
.Bl -tag -width ".Li -p1003.1g-2000" -compact -offset indent
.It Li -iso9945-2-93
.St -iso9945-2-93
.It Li -p1003.2
.St -p1003.2
.It Li -p1003.2-92
.St -p1003.2-92
.It Li -p1003.2a-92
.St -p1003.2a-92
.El
.Pp
.
X/Open
.Bl -tag -width ".Li -p1003.1g-2000" -compact -offset indent
.Pp
.It Li -susv2
.St -susv2
.It Li -svid4
.St -svid4
.It Li -xbd5
.St -xbd5
.It Li -xcu5
.St -xcu5
.It Li -xcurses4.2
.St -xcurses4.2
.It Li -xns5
.St -xns5
.It Li -xns5.2
.St -xns5.2
.It Li -xpg3
.St -xpg3
.It Li -xpg4
.St -xpg4
.It Li -xpg4.2
.St -xpg4.2
.It Li -xsh5
.St -xsh5
.El
.Pp
.
その他
.Pp
.Bl -tag -width ".Li -p1003.1g-2000" -compact -offset indent
.It Li -ieee754
.St -ieee754
.It Li -iso8802-3
.St -iso8802-3
.El
.
.Ss "変数の型"
.
.Ql .Vt
マクロは型を参照するときにはいつでも使用することができます。
.Sx SYNOPSIS
セクションでは改行が挿入されます
(古いスタイルの変数宣言では便利です)。
.Pp
.Dl 使い方: .Vt Ao 型 Ac ...
.Pp
.Bl -tag -width ".Li .Vt\ extern\ char\ *optarg\ ;" -compact -offset 15n
.It Li ".Vt extern char *optarg ;"
.Vt extern char *optarg ;
.It Li ".Vt FILE *"
.Vt FILE *
.El
.
.Ss 変数
.
一般的な変数への参照です。
.Pp
.Dl 使い方: .Va Ao 変数 Ac ...
.Pp
.Bl -tag -width ".Li .Va\ Xchar\ sX\ ]\ )\ )\ ," -compact -offset 15n
.It Li ".Va count"
.Va count
.It Li ".Va settimer ,"
.Va settimer ,
.It Li ".Va \*[q]int *prt\*[q] ) :"
.Va "int *prt" ) :
.It Li ".Va \*[q]char s\*[q] ] ) ) ,"
.Va "char s" ] ) ) ,
.El
.Pp
.
デフォルト幅は 12n です。
.
.Ss "マニュアルページのクロスリファレンス"
.
.Ql .Xr
マクロは最初の引数にマニュアルページの名称をとります。
オプションである第 2 引数は、文字列
(マニュアルセクションを定義します) であれば
括弧で囲われます。
.Pp
.Dl 使い方: .Xr Ao マニュアルページの名称 Ac Oo Ao セクション Ac Oc ...
.Pp
.Bl -tag -width ".Li .Xr\ xinit\ 1x\ ;" -compact -offset 15n
.It Li ".Xr mdoc"
.Xr mdoc
.It Li ".Xr mdoc ,"
.Xr mdoc ,
.It Li ".Xr mdoc 7"
.Xr mdoc 7
.It Li ".Xr xinit 1x ;"
.Xr xinit 1x ;
.El
.Pp
.
デフォルト幅は 10n です。
.
.
.Sh "一般テキスト領域"
.
.Ss "AT&T マクロ"
.
.Pp
.Dl 使い方: .At Oo Ao バージョン Ac Oc ...
.Pp
.Bl -tag -width ".Li .At\ v6\ ." -compact -offset 15n
.It Li .At
.At
.It Li ".At v6 ."
.At v6 .
.El
.Pp
.Ao バージョン Ac
には次の値をとることができます:
.Pp
.Dl 32v, v1, v2, v3, v4, v5, v6, v7, V, V.1, V.2, V.3, V.4
.
.Ss "BSD マクロ"
.
.Pp
.Dl "使い方: .Bx" Bro -alpha | -beta | -devel Brc ...
.Dl "       .Bx" Oo Ao バージョン Ac Oo Ao リリース Ac Oc Oc ...
.Pp
.Bl -tag -width ".Li .Bx\ -devel" -compact -offset 15n
.It Li .Bx
.Bx
.It Li ".Bx 4.3 ."
.Bx 4.3 .
.It Li ".Bx \-devel"
.Bx -devel
.El
.Pp
.Ao バージョン Ac
が文字列
.Sq Bx
の前につきます。
.Ao リリース Ac
には次の値をとることができます:
.Pp
.Dl Reno, reno, Tahoe, tahoe, Lite, lite, Lite2, lite2
.
.Ss "NetBSD マクロ"
.
.Pp
.Dl 使い方: .Nx Oo Ao バージョン Ac Oc ...
.Pp
.Bl -tag -width ".Li .Nx\ 1.4\ ." -compact -offset 15n
.It Li .Nx
.Nx
.It Li ".Nx 1.4 ."
.Nx 1.4 .
.El
.Pp
.Ao バージョン Ac
にとり得る値については前述の
.Sx "タイトルマクロ"
セクションの
.Ql .Os
コマンドの説明を参照してください。
.
.Ss "FreeBSD マクロ"
.
.Pp
.Dl 使い方: .Fx Oo Ao バージョン Ac Oc ...
.Pp
.Bl -tag -width ".Li .Fx\ 2.2\ ." -compact -offset 15n
.It Li .Fx
.Fx
.It Li ".Fx 2.2 ."
.Fx 2.2 .
.El
.Pp
.Ao バージョン Ac
にとり得る値については前述の
.Sx "タイトルマクロ"
セクションの
.Ql .Os
コマンドの説明を参照してください。
.
.Ss "OpenBSD マクロ"
.
.Pp
.Dl 使い方: .Ox Oo Ao バージョン Ac Oc ...
.Pp
.Bl -tag -width ".Li .Ox\ 1.0" -compact -offset 15n
.It Li ".Ox 1.0"
.Ox 1.0
.El
.
.Ss "BSD/OS マクロ"
.
.Pp
.Dl 使い方: .Bsx Oo Ao バージョン Ac Oc ...
.Pp
.Bl -tag -width ".Li .Bsx\ 1.0" -compact -offset 15n
.It Li ".Bsx 1.0"
.Bsx 1.0
.El
.
.Ss "UNIX マクロ"
.
.Pp
.Dl 使い方: .Ux ...
.Pp
.Bl -tag -width ".Li .Ux" -compact -offset 15n
.It Li .Ux
.Ux
.El
.
.Ss "強調マクロ"
.
テキストは
.Ql .Em
マクロを用いて強調することができます。
通常強調に用いられるフォントはイタリック体です。
.Pp
.Dl 使い方: .Em Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .Em\ vide\ infra\ )\ )\ ," -compact -offset 15n
.It Li ".Em does not"
.Em does not
.It Li ".Em exceed 1024 ."
.Em exceed 1024 .
.It Li ".Em vide infra ) ) ,"
.Em vide infra ) ) ,
.El
.Pp
.
デフォルト幅は 10n です。
.
.Ss "フォントモード"
.
.Ql .Bf
フォントモードは
.Ql .Ef
マクロで終了しなくてはなりません (後者のマクロは引数をとりません)。
フォントモードは別のフォントモード内に入れ子にできます。
.Pp
.Ql .Bf
は次の文法をもっています:
.Pp
.Dl .Bf Ao フォントモード Ac
.Pp
.Ao フォントモード Ac
は次の 3 種類のうちのいずれかでなくてはなりません。
.Pp
.Bl -tag -width ".Sy \&Sy | Fl symbolic" -compact -offset indent
.It Sy \&Em | Fl emphasis
.Ql .Em
マクロがテキストのブロック全体に対して使用された場合と
同じになります。
.It Sy \&Li | Fl literal
.Ql .Li
マクロがテキストのブロック全体に対して使用された場合と
同じになります。
.It Sy \&Sy | Fl symbolic
.Ql .Sy
マクロがテキストのブロック全体に対して使用された場合と
同じになります。
.El
.Pp
いずれのマクロも呼び出し不可能であり、構文解析もされません。
.
.Ss "囲い/クォートマクロ"
.
囲いの概念はクォートと似たものです。
1 つ以上の文字列が引用符や括弧のような文字のペアで囲まれている
オブジェクトを指します。
クォートと囲いという用語はこの文書を通して同じ意味で使われます。
ほとんどの 1 行の囲いマクロはクォートであることをほのめかすために、
小文字の
.Ql q
で終了しますが、例外もいくつかあります。
各々の囲いマクロに対し、開始マクロと終了マクロのペアもあり、
それぞれ小文字の
.Ql o
と
.Ql c
で終了します。
.Pp
\# XXX
.if t \
.  ne 10
.
.Bd -filled -offset 4n
.Bl -column "クォート" "終了" "開始" "クォートされたリテラル" "`string' もしくは string"
.Em クォート Ta Em 開始 Ta Em 終了 Ta Em 機能                 Ta Em 結果
.No .Aq   Ta    .Ao  Ta    .Ac   Ta "山括弧による囲い"        Ta Ao string Ac
.No .Bq   Ta    .Bo  Ta    .Bc   Ta "角括弧による囲い"        Ta Bo string Bc
.No .Brq  Ta    .Bro Ta    .Brc  Ta "中括弧による囲い"        Ta Bro string Brc
.No .Dq   Ta    .Do  Ta    .Dc   Ta "2 重引用符"              Ta Do string Dc
.No .Eq   Ta    .Eo  Ta    .Ec   Ta "囲い文字列 (XX による)"  Ta XXstringXX
.No .Pq   Ta    .Po  Ta    .Pc   Ta "括弧による囲い"          Ta Po string Pc
.No .Ql   Ta         Ta          Ta "クォートされたリテラル"  Ta So string Sc もしくは Li string
.No .Qq   Ta    .Qo  Ta    .Qc   Ta "まっすぐな 2 重引用符"   Ta Qo string Qc
.No .Sq   Ta    .So  Ta    .Sc   Ta "1 重引用符"              Ta So string Sc
.El
.Ed
.Pp
.Sq q
および
.Sq o
で終わるマクロはすべてデフォルト幅が 12n です。
.
.Bl -tag -width ".Li .Ec , .Eo"
.It Li .Eo , .Ec
これらのマクロはそれぞれ第 1 引数に囲い始めに使う文字列と
囲い終わりに使う文字列をとります。
.It Li .Es , .En
オリジナルの troff プログラムでは、引数の数が 9 つまでという
制限がありましたので、(Eo, Ec とは) 別の 2 つのマクロが
実装されています。
現在は非推奨になっています。
.Ql .Es
は第 1 引数と第 2 引数に左囲い文字列および右囲い文字列を
とります。
この文字列は、
.Ql .En
の引数を囲うのに使用されます。
デフォルト幅は、どちらのマクロも 12n です。
.It Li .Eq
このマクロの第 1、第 2 引数はそれぞれ囲い始めに使う文字列と
囲い終わりに使う文字列であり、この文字列の後に
囲われる引数が続きます。
.It Li .Ql
クォートされたリテラルマクロは troff モードと nroff モードで
違った挙動をします。
.Xr nroff
で整形された場合、
クォートされたリテラルは常にクォートされます。
troff で整形された場合、その要素の幅が固定幅文字 3 文字分の幅よりも
小さいときのみクォートされます。
これにより、リテラル (固定幅) フォントへフォントを変更すると
目立たなくなってしまうような短い文字列がより見やすくなります。
.Pp
デフォルト幅は 16n です。
.It Li .Pf
プレフィックスマクロは第 1 引数と第 2 引数の間の
ホワイトスペースをなくします:
.
.Bl -tag -width ".Li .Pf\ (\ Fa\ name2" -offset indent
.It Li ".Pf ( Fa name2"
.Pf ( Fa name2
.El
.Pp
.
デフォルト幅は 12n です。
.Pp
.Ql .Ns
マクロ (後述参照) は同じようにサフィックスに働きます。
.It Li .Ap
.Ql .Ap
マクロはアポストロフィを追加し、特別なテキストモードから
抜けます。
そして
.Ql .No
モードで続けます。
.El
.Pp
.
クォートの例:
.
.Pp
.Bl -tag -width ".Li .Bq\ Em\ Greek\ ,\ French\ ." -compact -offset indent
.It Li .Aq
.Aq
.It Li ".Aq Pa ctype.h ) ,"
.Aq Pa ctype.h ) ,
.It Li .Bq
.Bq
.It Li ".Bq Em Greek , French ."
.Bq Em Greek , French .
.It Li .Dq
.Dq
.It Li ".Dq string abc ."
.Dq string abc .
.It Li ".Dq \'^[A-Z]\'"
.Dq \'^[A-Z]\'
.It Li ".Ql man mdoc"
.Ql man mdoc
.It Li .Qq
.Qq
.It Li ".Qq string ) ,"
.Qq string ) ,
.It Li ".Qq string Ns ),"
.Qq string Ns ),
.It Li .Sq
.Sq
.It Li ".Sq string"
.Sq string
.It Li ".Em or Ap ing"
.Em or Ap ing
.El
.Pp
.
囲いマクロの入れ子についての良い例については、
オプションマクロ
.Ql .Op
を参照してください。
このマクロは上でリストされているような囲いマクロと同じベースの上に
作られています。
.Ql .Xo
と
.Ql .Xc
拡張引数リストマクロについては後で述べます。
.
.Ss "無操作もしくは通常テキストマクロ"
.
.Ql .No
マクロは、マクロコマンド行において整形されては
.Em ならない
パラメータ用に使用できます。
この英単語 (マクロでなく) をパラメータとして
本当に使いたい場合は、この単語
.Ql \&No
に
.Ql \e&
を足すように注意してください。
.Pp
.Dl 使い方: .No Ao 引数 Ac ...
.Pp
.Bl -tag -width ".Li .No\ test\ Ta\ with\ Ta\ tabs" -compact -offset 15n
.It Li ".No test Ta with Ta tabs"
.No test Ta with Ta tabs
.El
.Pp
.
デフォルト幅は 12n です。
.
.Ss "空白なしマクロ"
.
.Ql .Ns
マクロは、現在の位置とマクロの第 1 パラメータとの間に
空白を挿入するのを抑止します。
例えば、フラグと引数の間に空白を含まない古いスタイルの
引数リストを使う場合に便利です:
.Pp
.Dl "使い方:" ... Ao 引数 Ac \&Ns Oo Ao 引数 Ac Oc ...
.Dl "       " .Ns Ao 引数 Ac ...
.\" 訳注: 2 行目 Dl マクロの第 1 引数の空白の数は 1 行目と一致させる
.Pp
.Bl -tag -width ".Li .Op\ Fl\ I\ Ns\ Ar\ directory" -compact -offset 15n
.It Li ".Op Fl I Ns Ar directory"
.Op Fl I Ns Ar directory
.El
.Pp
注:
.Ql .Ns
マクロは他のマクロ名が続かなければ、スペースを除去したあとに
.Ql .No
マクロを常に起動します。
コマンドとして使用される場合 (つまり、
.Sq 使い方
の行での 2 番目の形式です)、
.Ql .Ns
マクロは
.Ql .No
と同一です。
.
.Ss "セクションのクロスリファレンス"
.
.Ql .Sx
マクロは同一文書内でのセクションのヘッダへの参照を指定します。
.Pp
.Dl 使い方: .Sx Ao セクションの参照 Ac ...
.Pp
.Bl -tag -width ".Li .Sx\ FILES" -offset 15n
.It Li ".Sx FILES"
.Sx FILES
.El
.Pp
.
デフォルト幅は 16n です。
.
.Ss 記号
.
記号体強調マクロは、記号の意味でも伝統的な英語の
使い方においても通常はボールド体マクロとなっています。
.Pp
.Dl 使い方: .Sy Ao 記号 Ac ...
.Pp
.Bl -tag -width ".Li .Sy\ Important\ Notice" -compact -offset 15n
.It Li ".Sy Important Notice"
.Sy Important Notice
.El
.Pp
.
デフォルト幅は 6n です。
.
.Ss 数学記号
.
数学記号やそれに似たものについては、このマクロを使用して
ください。
.Pp
.Dl 使い方: .Ms Ao 数学記号 Ac ...
.Pp
.Bl -tag -width ".Li .Ms\ sigma" -compact -offset 15n
.It Li ".Ms sigma"
.Ms sigma
.El
.Pp
.
デフォルト幅は 6n です。
.
.Ss "参考文献と引用"
.
次のマクロは多少なりとも参考文献を扱えるようにと意図したものです。
これらのマクロは、せいぜい
.Xr refer 1
スタイルの参考文献のサブセットを手動で
作成しやすくする程度です。
.Pp
.Bl -tag -width 6n -offset indent -compact
.It Li .Rs
参考文献の開始 (引数はとりません)。
.Sx "SEE ALSO"
セクションでは改行を挿入し、参考文献の終了マクロが
読み込まれるまで参考文献の情報を収集します。
.It Li .Re
参考文献の終了 (引数はとりません)。
参考文献が表示されます。
.It Li .%A
参考文献の作者名。
1 回の呼び出しにつき、作者名をひとつ指定します。
.It Li .%B
書籍のタイトル。
.It Li .%C
市 / 場所 (まだ実装されていません)。
.It Li .%D
日付。
.It Li .%I
発行者/出版社名。
.It Li .%J
定期刊行物の名称。
.It Li .%N
発行番号。
.It Li .%O
追加情報。
.It Li .%P
ページ番号。
.It Li .%Q
組織内部、あるいは外部の著者。
.It Li .%R
報告書の名称。
.It Li .%T
記事のタイトル。
.It Li .%V
巻数。
.El
.Pp
.Ql %
で始まるマクロは呼び出し不可能ですが、
通常の方法で複数の引数をとることができます。
パラメータとしては
.Ql .Tn
マクロのみ扱います。
その他のマクロを使うと
奇妙な出力が得られてしまいます。
.Ql .%B
および
.Ql .%T
を
.Ql .Rs/.Re
環境の外側では使用することができます。
.Pp
使用例:
.
.Bd -literal -offset indent
\&.Rs
\&.%A "Matthew Bar"
\&.%A "John Foo"
\&.%T "Implementation Notes on foobar(1)"
\&.%R "Technical Report ABC-DE-12-345"
\&.%Q "Drofnats College, Nowhere"
\&.%D "April 1991"
\&.Re
.Ed
.Pp
出力結果
.
.Bd -ragged -offset indent
.Rs
.%A "Matthew Bar"
.%A "John Foo"
.%T "Implementation Notes on foobar(1)"
.%R "Technical Report ABC-DE-12-345"
.%Q "Drofnats College, Nowhere"
.%D "April 1991"
.Re
.Ed
.
.Ss "商標名 (頭字語とタイプ名)"
.
商標名マクロは、引数をより小さなフォントで出力します。
意図される使い方は、大文字の頭字語用に小さな大文字フォントを
似せて作ることです。
.Pp
.Dl 使い方: .Tn Ao シンボル Ac ...
.Pp
.Bl -tag -width ".Li .Tn\ ASCII" -compact -offset 15n
.It Li ".Tn DEC"
.Tn DEC
.It Li ".Tn ASCII"
.Tn ASCII
.El
.Pp
.
デフォルト幅は 10n です。
.
.Ss "拡張引数"
.
.Li .Xo
と
.Li .Xc
マクロによって、
.Ql .It
マクロ (後述) についてマクロ境界での引数リストを
拡張することができます。
.Li .Xo
と
.Li .Xc
マクロは囲いを開いたり閉じたりする他のすべてのマクロに
対して同じように実装されている (もちろん文字は挿入しません)
ということに注意してください。
つまり、次の例もこれらのマクロには当てはまります。
.Pp
次は、スペーシングをオフにするために
空白モードマクロを使った
.Ql .Xo
の使用例です。
.
.Bd -literal -offset indent
\&.Sm off
\&.It Xo Sy I Ar operation
\&.No \een Ar count No \een
\&.Xc
\&.Sm on
.Ed
.Pp
.
これは以下のような結果になります。
.
.Bd -filled -offset indent
.Bl -tag -compact
.Sm off
.It Xo Sy I Ar operation
.No \en Ar count No \en
.Xc
.Sm on
.El
.Ed
.Pp
.
例をもうひとつ:
.
.Bd -literal -offset indent
\&.Sm off
\&.It Cm S No / Ar old_pattern Xo
\&.No / Ar new_pattern
\&.No / Op Cm g
\&.Xc
\&.Sm on
.Ed
.Pp
.
これは以下のような結果になります。
.
.Bd -filled -offset indent
.Bl -tag -compact
.Sm off
.It Cm S No \&/ Ar old_pattern Xo
.No \&/ Ar new_pattern
.No \&/ Op Cm g
.Xc
.Sm on
.El
.Ed
.Pp
.
囲いマクロを使った
.Ql .Xo
の他の例:
変数の値をテストして下さい。
.
.Bd -literal -offset indent
\&.It Xo
\&.Ic .ifndef
\&.Oo \e&! Oc Ns Ar variable Oo
\&.Ar operator variable ...
\&.Oc Xc
.Ed
.Pp
.
結果は以下の通りです。
.
.Bd -filled -offset indent
.Bl -tag -width flag -compact
.It Xo
.Ic .ifndef
.Oo \&! Oc Ns Ar variable Oo
.Ar operator variable ...
.Oc Xc
.El
.Ed
.Pp
.
.
.Sh "ページ構造領域"
.
.Ss "セクションヘッダ"
.
次の
.Ql .Sh
セクションヘッダマクロは、すべてのマニュアルページで必須のものです。
残りのセクションヘッダはマニュアルページの作者の裁量において、
推奨されているものです。
.Ql .Sh
マクロは構文解析されますが、一般的には呼び出し不可能です。
.Ql .Sh
を呼び出すときだけは、このマクロは引数として使用することができます。
この場合、
.Ql .Sh
用のデフォルトフォントを再度有効にします。
.Pp
デフォルト幅は 8n です。
.
.Bl -tag -width ".Li .Sh\ RETURN\ VALUES"
.It Li ".Sh NAME"
.Ql ".Sh NAME"
マクロは必須です。
これが指定されていないと、ヘッダとフッタ、それにデフォルトの
ページレイアウトが設定されず、結果はかなり好ましくないものに
なるでしょう。
.Sx NAME
セクションは最低 3 つの項目からなります。
最初のものは名称マクロ
.Ql .Nm
であり、マニュアルページのサブジェクトとなります。
2 番目のものは名称説明マクロ
.Ql .Nd
であり、サブジェクト名を 3 つめの項目、
すなわちその名称の説明と分離します。
説明に割り当てられるスペースは小さいものですので、
できるだけ簡潔で分かりやすいものでなければなりません。
.Pp
.Ql .Nd
は全ての引数の頭に
.Ql - ,
を印字します。
.
.It Li ".Sh LIBRARY"
このセクションは、セクション 2 および 3 の関数呼び出しの
ためにあります。
このセクションには、
.Ql .Lb
マクロ呼び出し 1 つのみが含まれている必要があります。
.Sx "ライブラリ名"
を参照してください。
.
.It Li ".Sh SYNOPSIS"
.Sx SYNOPSIS
セクションはそのマニュアルページのサブジェクトとなっている項目の
典型的な使用法を説明します。
.Ql .Nm ,
.Ql .Cd ,
あるいは
.Ql .Fn
です
(他には
.Ql .Fo ,
.Ql .Fc ,
.Ql .Fd ,
.Ql .Ft
のマクロも必要な場合があります)。
関数名マクロ
.Ql .Fn
はセクション 2 と 3 のマニュアルページにおいて必須のもので、
コマンドと一般名称マクロ
.Ql .Nm
はセクション 1, 5, 6, 7, 8 で必須の項目です。
セクション 4 のマニュアルでは
.Ql .Nm
か
.Ql .Fd
、もしくは設定デバイス使用法マクロ
.Ql .Cd
が必要です。
その他のいくつかのマクロが次に示すような書式行を生成するために
必要なことがあります:
.
.Bd -filled -offset indent
.Nm cat
.Op Fl benstuv
.Op Fl
.Ar
.Ed
.Pp
.
次のマクロが使われています:
.Pp
.Dl ".Nm cat"
.Dl ".Op Fl benstuv"
.Dl ".Op Fl"
.Dl .Ar
.
.It Li ".Sh DESCRIPTION"
ほとんどの場合、
.Sx DESCRIPTION
セクションでの最初のテキストはそのコマンド、関数もしくは
ファイルについての短い段落で、オプションの構文リストと
それぞれの説明がそれに続きます。
そのようなリストを作成するには
.Ql .Bl
(リスト開始マクロ)、
.Ql .It
(リスト項目マクロ)、
.Ql .El
(リスト終了マクロ)
を使用します (後述の
.Sx リストとカラム
セクションを参照)。
.
.It Li ".Sh IMPLEMENTATION NOTES"
特定の実装に関する情報はここに置く必要があります。
.
.It Li ".Sh RETURN VALUES"
セクション 2, 3, 9 の関数の戻り値はここに来る必要があります。
.Ql .Rv
を使用して、セクション 2 および 3 のライブラリ関数の
.Sx RETURN VALUES
セクションを生成することができます。
.Sx "戻り値"
の項を参照してください。
.El
.Pp
.
次の
.Ql .Sh
セクションヘッダはマニュアルページの好ましいレイアウトの一部であり、
一貫性を保つために適切に使われなければなりません。
これらは使われる順番にリストされています。
.
.Bl -tag -width ".Li .Sh\ COMPATIBILITY"
.It Li ".Sh ENVIRONMENT"
.Sx ENVIRONMENT
セクションでは関連する環境変数および
それらの振るまいや使用方法に関する手がかりを明らかにする
必要があります。
.
.It Li ".Sh FILES"
マニュアルページのサブジェクトによって使用されるか生成されるファイルで、
.Sx FILES
セクション中でマクロ
.Ql .Pa
によってリストする必要があります。
.
.It Li ".Sh EXAMPLES"
使用例を生成するにはいくつか方法があります。
詳細は後述の
.Sx 使用例
セクションを参照してください。
.
.It Li ".Sh DIAGNOSTICS"
コマンドからの診断メッセージはこのセクションに置く必要があります。
.Ql .Ex
マクロはほとんどのセクション 1、6、および\~8 コマンドのために
.Sx DIAGNOSTICS
セクションで使われるテキストを作成するために使用されす。
.Sx "終了ステータス"
を参照してください。
.
.It Li ".Sh COMPATIBILITY"
知られている互換性の問題 (例えば、非推奨になったオプションや
パラメータ) をここにリストする必要があります。
.
.It Li ".Sh ERRORS"
特定のエラーハンドリング、特にライブラリ関数
(マニュアルページのセクション 2, 3, 9) でのエラーハンドリングは
ここで説明する必要があります。
.Ql .Er
マクロはエラー (errno) を指定するのに使用されます。
.
.It Li ".Sh SEE ALSO"
.Sx "SEE ALSO"
セクションには、そのマニュアルページの題材に関する資料への参照と
他の関連するマニュアルページへのクロスリファレンスが記載されます。
クロスリファレンスは
.Ql .Xr
マクロによって指定されます。
現在、
.Xr refer 1
スタイルのリファレンスには適合していません。
.Pp
クロスリファレンスはセクション番号順、同一セクションにあるものは
アルファベット順に並べ、コンマで区切ることを推奨します。
以下に例を示します:
.Pp
.Xr ls 1 ,
.Xr ps 1 ,
.Xr group 5 ,
.Xr passwd 5
.
.It Li ".Sh STANDARDS"
コマンドやライブラリ関数やファイルが、
.St -p1003.2
や
.St -ansiC
のような特定の実装によるものであれば、ここで記述します。
もしコマンドがどの規格にも基づいていなければ、その歴史は
.Sx HISTORY
のセクションで説明されなければなりません。
.
.It Li ".Sh HISTORY"
特定の規格に基づいていないコマンドは、
このセクションでその歴史の概要を説明する必要があります。
.
.It Li ".Sh AUTHORS"
クレジットはここに置く必要があります。
人物名を指定するには
.Ql .An
マクロを使用する必要があります。
.
.It Li ".Sh BUGS"
あきらかな問題はここで記述します。
.El
.Pp
.
ユーザ指定の
.Ql .Sh
セクションを追加することができます。
例えば、このセクションは以下のように設定されています。
.
.Bd -literal -offset 15n
\&.Sh "ページ構造領域"
.Ed
.
.Ss "サブセクションヘッダ"
.
サブセクションヘッダはセクションヘッダとまったく同じ文法を
しています。
.Ql .Ss
は構文解析されますが、一般的に呼び出し不可能です。
このマクロは、
.Ql .Ss
の呼び出し時にのみ引数として使用できます。
このとき、
.Ql .Ss
のデフォルトフォントが再度有効になります。
.Pp
デフォルト幅は 8n です。
.
.Ss "段落と行スペース"
.
.Bl -tag -width ".Li .Pp"
.It Li .Pp
.Ql .Pp
段落コマンドは必要な場合に行スペースを指定するために使われます。
このマクロは
.Ql .Sh
マクロや
.Ql .Ss
マクロの後、ならびに
.Ql .Bl
マクロや
.Ql .Bd
マクロの前では必要ありません
(いずれのマクロも
.Fl compact
フラグが指定されていなければ垂直方向の距離を宣言します)。
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
そして引数をとりません。
別名は
.Ql .Lp
です。
.El
.
.\" XXX
.
.\" This worked with version one, need to redo for version three
.\" .Pp
.\" .Ds I
.\" .Cw (ax+bx+c) \ is\ produced\ by\ \&
.\" .\".Cw (ax+bx+c) \&.Va_by_) \&_and_\& \&[?/]m_b1_e1_f1[?/]\&
.\" .Cl Cx \t\t
.\" .Li \&.Cx\ (
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va ax
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy \+
.\" .Cx
.\" .Cl Cx \&(\&
.\" .Va ax
.\" .Cx +
.\" .Va by
.\" .Cx +
.\" .Va c )
.\" .Cx \t
.\" .Em is produced by
.\" .Cx \t
.\" .Li \&.Va by
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy \+
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va c )
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx
.\" .Cx
.\" .Cw
.\" .De
.\" .Pp
.\" This example shows the same equation in a different format.
.\" The spaces
.\" around the
.\" .Li \&+
.\" signs were forced with
.\" .Li \e :
.\" .Pp
.\" .Ds I
.\" .Cw (ax\ +\ bx\ +\ c) \ is\ produced\ by\ \&
.\" .\".Cw (ax+bx+c) \&.Va_by_) \&_and_\& \&[?/]m_b1_e1_f1[?/]\&
.\" .Cl Cx \t\t
.\" .Li \&.Cx\ (
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va a
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy x
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx \e\ +\e\ \e&
.\" .Cx
.\" .Cl Cx \&(\&
.\" .Va a
.\" .Sy x
.\" .Cx \ +\ \&
.\" .Va b
.\" .Sy y
.\" .Cx \ +\ \&
.\" .Va c )
.\" .Cx \t
.\" .Em is produced by
.\" .Cl Cx \t\t
.\" .Li \&.Va b
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy y
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx \e\ +\e\ \e&
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va c )
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx
.\" .Cx
.\" .Cw
.\" .De
.\" .Pp
.\" The incantation below was
.\" lifted from the
.\" .Xr adb 1
.\" manual page:
.\" .Pp
.\" .Ds I
.\" .Cw \&[?/]m_b1_e1_f1[?/]\& is\ produced\ by
.\" .Cl Cx \t\t
.\" .Li \&.Cx Op Sy ?/
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Nm m
.\" .Cx
.\" .Cl Cx Op Sy ?/
.\" .Nm m
.\" .Ad \ b1 e1 f1
.\" .Op Sy ?/
.\" .Cx \t
.\" .Em is produced by
.\" .Cx \t
.\" .Li \&.Ar \e\ b1 e1 f1
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Op Sy ?/
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx
.\" .Cx
.\" .Cw
.\" .De
.\" .Pp
.
.Ss キープ
.
現在実装されているキープは単語に対するものだけです。
マクロは
.Ql .Bk
(キープ開始)
と
.Ql .Ek
(キープ終了) です。
現在
.Ql .Bk
が受け付けるオプションは
.Fl words
のみで (オプションを何も与えていなければこれがデフォルトでもあります)
オプションの途中で改行が入らないようにするのに便利です。
make コマンド行の引数を生成する例
.Pf ( Sx この名前には何が
の項を参照) において、キープは
.Xr nroff
がフラグと引数を別の行に分けないように使われています。
.Pp
いずれのマクロも呼び出し不可能であり、構文解析もされません。
.Pp
キープマクロについてはもっと作業をする必要があります。
特に
.Fl line
オプションは追加する必要があるでしょう。
.
.Ss "例示とディスプレイ"
.
ディスプレイには 7 つのタイプがあります。
.Pp
.Bl -tag -width ".Li .D1"
.It Li .D1
(D-いちです)
インデントされたテキストを 1 行表示します。
このマクロは構文解析されますが、呼び出し不可能です。
.Pp
.D1 Fl ldghfstru
.Pp
これは次の指定で生成されたものです:
.Li ".D1 Fl ldghfstru"
.
.It Li .Dl
(D-エルです)
インデントされた
.Em リテラル
テキストを 1 行表示します。
.Ql .Dl
マクロの例は本ファイル中にわたって使われています。
これによって 1 行のテキストのインデント (表示) が可能になります。
デフォルトフォントは固定幅 (リテラル) に設定されます。
.Ql .Dl
は構文解析されますが、呼び出し不可能です。
.Pp
.Dl % ls -ldg /usr/local/bin
.Pp
これは、次の指定で生成されたものです:
.Li ".Dl % ls -ldg /usr/local/bin"
.
.It Li .Bd
ディスプレイ開始。
.Ql .Bd
ディスプレイは
.Ql .Ed
マクロで終了しなければなりません。
これは、次の書式をとります:
.Pp
.Bd -ragged -compact
.Bl -tag -width ".Li .Bd" -offset indent
.It Li .Bd Xo
.Bro \-literal | \-filled | \-unfilled | \-ragged | \-centered Brc
.Oo \-offset Ao 文字列 Ac Oc Oo \-file Ao ファイル名 Ac Oc Oo \-compact Oc Xc
.El
.Ed
.Pp
.
.Bl -tag -width ".Fl file Ao Ar ファイル名 Ac " -compact
.It Fl ragged
行詰めされますが、右マージンは調整しません (左マージンのみです)。
.It Fl centered
現在の左マージンと右マージン間の中央線です。
線それぞれが中央揃えになるということに注意してください。
.It Fl unfilled
行詰めしません。
テキストのブロックを入力されたままの状態で表示します。
改行もユーザが指定した通りに使われます。
このため、何の警告メッセージも出さずに長過ぎる行を
生成する可能性があります。
.It Fl filled
行詰めされたブロックを表示します。
テキストブロックが整形されます (つまり、
テキストは左右どちら側にも揃えられます)。
.It Fl literal
リテラルフォント (通常固定幅) でブロックを表示します。
ソースコードや、単純にタブもしくは空白で整えられた
テキストには便利です。
.It Fl file Ao Ar ファイル名 Ac
.Fl file
フラグに続いた名前を持ったファイルが読み込まれ、
指定されたディスプレイタイプで
.Ql .Bd
と
.Ql .Ed
マクロで囲まれたデータよりも前に表示されます。
ファイル中の
.Xr troff/ Ns Nm \-mdoc
コマンドはどんなものでも処理されます。
.It Fl offset Ao Ar 文字列 Ac
.Fl offset
が以下の文字列のいずれかとともに指定されていると、
その文字列は次のテキストのブロックのインデントのレベルを示すものとして
解釈されます。
.
.Pp
.Bl -tag -width ".Ar indent-two" -compact
.It Ar left
ブロックを現在の左マージンに揃えます。
これは
.Ql .Bd
のデフォルトのモードです。
.It Ar center
ブロックを中央揃えにします。
残念ながら現時点では、
単にブロックの左側を仮想的な中央マージンに揃えるだけです。
.It Ar indent
デフォルトのインデント値もしくはタブの分だけインデントします。
デフォルトのインデント値は
.Ql .D1
および
.Ql .Dl
マクロでも使われていますので、この 2 つのディスプレイと
行が揃うことが保証されています。
インデント値は通常 6n つまり約 2/3 インチ (固定幅文字 6 つ分) です。
.It Ar indent-two
デフォルトのインデント値の 2 倍分インデントします。
.It Ar right
これはブロックをページの右端から約 2 インチ離して
.Em 左
揃えします。
このマクロはちゃんと動作する必要があるのですが、
.Xr troff
ではまったくちゃんと動作してくれていません。
.El
.Pp
.
.Ao 文字列 Ac
がそれ以外で正しい数値表現をしている場合
.Pf ( Sq Em u
.Em 以外のスケール指示子を伴う )
、
インデント用にその値を使用します。
スケール指示子のなかで最も役に立つものは
.Sq m
および
.Sq n
です。
これらはいわゆる
.Em \&Em
と
.Em "En square"
を指定します。
これらはそれぞれ、現在のフォントでの文字
.Sq m
および文字
.Sq n
の幅とほぼ同じです ( nroff の出力については、
どちらのスケール指示子でも同じ値が得られます )。
.Ao 文字列 Ac
が数値表現をしていない場合、文字列は
.Nm \-mdoc
マクロ名であるかどうか検査され、このマクロに関連する
デフォルトのオフセット値が使われます。
最終的にすべてのテストが失敗した場合
the width of
.Ao 文字列 Ac
の幅
(固定幅フォントでのタイプセット) がオフセットと見なされます。
.It Fl compact
ディスプレイを開始するときに垂直方向の空白を挿入しないようにします。
.El
.
.It Li .Ed
ディスプレイの終了 (引数はとりません)。
.El
.
.Ss "リストとカラム"
.
リスト開始マクロ
.Ql .Bl
で開始できるリストには何種類かあります。
リスト中の項目は項目マクロ
.Ql .It
で指定され、各リストは
.Ql .El
マクロで終了しなければなりません。
リストはリスト自身やディスプレイの中で入れ子にすることができます。
リスト中でカラムを使ったり、カラムの中でリストを使ったりすることに
ついては検証されていません。
.Pp
さらに、タグ幅、リストのオフセット、コンパクトの度合
(項目間の空白行が許されているかどうか) のような
リストの属性をいくつか指定することができます。
本ドキュメントのほとんどはタグ
.Pf ( Fl tag )
スタイルリストで整形されています。
.Pp
このマクロは次の文法規則を持っています:
.
.Pp
.Bd -ragged -compact
.Bl -tag -width ".Li .Bl" -offset indent -compact
.It Li .Bl Xo
.Bro \-hang | \-ohang | \-tag | \-diag | \-inset Brc
.Oo \-width Ao 文字列 Ac Oc
.Oo \-offset Ao 文字列 Ac Oc Oo \-compact Oc Xc
.It Li .Bl Xo
.No \-column Oo \-offset Ao 文字列 Ac Oc
.Ao 文字列1 Ac Ao 文字列2 Ac ... Xc
.It Li .Bl Xo
.Bro \-item | \-enum Oo \-nested Oc | \-bullet | \-hyphen | \-dash Brc
.Oo \-offset Ao 文字列 Ac Oc Oo \-compact Oc Xc
.El
.Ed
.Pp
.
次に、このリストタイプの詳細な解説を行います。
.
.Pp
.Bl -tag -width ".Fl column" -compact
.It Fl bullet
ビュレットリストです。
.
.Bd -literal -offset indent
\&.Bl -bullet -offset indent -compact
\&.It
1 つ目のビュレットはここにきます。
\&.It
2 つ目のビュレットはここにきます。
\&.El
.Ed
.Pp
.
生成結果は次の通りです:
.
.Pp
.Bl -bullet -offset indent -compact
.It
1 つ目のビュレットはここにきます。
.It
2 つ目のビュレットはここにきます。
.El
.Pp
.
.It Fl dash No ( または Fl hyphen )
ダッシュ文字によるリストです。
.
.Bd -literal -offset indent
\&.Bl -dash -offset indent -compact
\&.It
1 つ目のダッシュはここにきます。
\&.It
2 つ目のダッシュはここにきます。
\&.El
.Ed
.Pp
.
生成結果は次の通りです:
.
.Pp
.Bl -dash -offset indent -compact
.It
1 つ目のダッシュはここにきます。
.It
2 つ目のダッシュはここにきます。
.El
.Pp
.
.It Fl enum
箇条書きリストです。
.
.Bd -literal -offset indent
\&.Bl -enum -offset indent -compact
\&.It
1 つ目の項目はここにきます。
\&.It
2 つ目の項目はここにきます。
\&.El
.Ed
.Pp
.
生成結果は次の通りです:
.
.Pp
.Bl -enum -offset indent -compact
.It
1 つ目の項目はここにきます。
.It
2 つ目の項目はここにきます。
.El
.Pp
.
箇条書きリストを入れ子にしたい場合、
.Fl nested
フラグを使用してください
(第 2 レベルのリストが開始されます):
.
.Bd -literal -offset indent
\&.Bl -enum -offset indent -compact
\&.It
1 つ目の項目はここにきます。
\&.Bl -enum -nested -compact
\&.It
2 つ目の項目はここにきます。
\&.It
3 つ目の項目はここにきます。
\&.It
\&.El
\&.It
4 つ目の項目はここにきます。
\&.El
.Ed
.Pp
.
生成結果は次の通りです:
.
.Pp
.Bl -enum -offset indent -compact
.It
1 つ目の項目はここにきます。
.Bl -enum -nested -compact
.It
2 つ目の項目はここにきます。
.It
3 つ目の項目はここにきます。
.El
.It
4 つ目の項目はここにきます。
.El
.Pp
.
.It Fl item
リストの印をつけない
.Fl item
タイプのリストです。
.
.Bd -literal -offset indent
\&.Bl -item -offset indent
\&.It
1 つ目の項目はここにきます。
1 つ目の項目はここにきます。
1 つ目の項目はここにきます。
\&.It
2 つ目の項目はここにきます。
2 つ目の項目はここにきます。
2 つ目の項目はここにきます。
\&.El
.Ed
.Pp
.
生成結果は次の通りです:
.
.Pp
.Bl -item -offset indent
.It
1 つ目の項目はここにきます。
1 つ目の項目はここにきます。
1 つ目の項目はここにきます。
.It
2 つ目の項目はここにきます。
2 つ目の項目はここにきます。
2 つ目の項目はここにきます。
.El
.Pp
.
.It Fl tag
タグつきリストです。
タグ幅を指定するには
.Fl width
を使用してください。
.
.Pp
.Bl -tag -width "PPID" -compact -offset indent
.It SL
プロセスが sleep している時間 (ブロックされた秒数)
.It PAGEIN
そのプロセスによって、まだメモリにロードされていないページ
への参照が起こることにより生じたディスク
.Tn I/O
の回数
.It UID
数値表記によるプロセス所有者のユーザ ID
.It PPID
数値表記による親プロセスの ID、プロセスの優先度
(割り込み不可の待機状態のときには、正でない値になる)
.El
.Pp
.
元のテキストは次の通りです:
.
.Bd -literal -offset indent
\&.Bl -tag -width "PPID" -compact -offset indent
\&.It SL
プロセスが sleep している時間 (ブロックされた秒数)
\&.It PAGEIN
そのプロセスによって、まだメモリにロードされていないページ
への参照が起こることにより生じたディスク
\&.Tn I/O
の回数
\&.It UID
数値表記によるプロセス所有者のユーザ ID
\&.It PPID
数値表記による親プロセスの ID、プロセスの優先度
(割り込み不可の待機状態のときには、正でない値になる)
\&.El
.Ed
.Pp
.
.It Fl diag
診断リストはセクション 4 の診断リストを生成するもので、
呼び出し可能なマクロが無視されることを除き、inset リストと似ています。
フラグ
.Fl width
は、この文脈では意味がありません。
.Pp
使用例:
.
.Bd -literal -offset indent
\&.Bl -diag
\&.It ここで Sy を使うことはできません。
このメッセージはすべて出力されます。
\&.El
.Ed
.Pp
.
生成結果
.
.Bl -diag
.It ここで Sy を使うことはできません。
このメッセージはすべて出力されます。
.El
.Pp
.
.It Fl hang
ぶら下がりタグつきリストです。
.
.Bl -hang -offset indent
.It Em Hanged
ラベル幅よりもラベルが小さい場合には
ぶら下げられたラベルはタグつきリストと同じように見えます。
.It Em Longer hanged list labels
ラベル幅より長いぶら下がりリストのラベルは、
タグつき段落ラベルとは違い、段落に溶け込みます。
.El
.Pp
以上の文章を生成した、整形前のテキストは
次の通りです:
.
.Bd -literal -offset indent
\&.Bl -hang -offset indent
\&.It Em Hanged
ラベル幅よりもラベルが小さい場合には
ぶら下げられたラベルはタグつきリストと同じようにみえます。
\&.It Em Longer Hanged list labels
ラベル幅より長いぶら下がりリストのラベルは、
タグつき段落ラベルとは違い、段落に溶け込みます。
\&.El
.Ed
.Pp
.
.It Fl ohang
オーバハングタグ (overhanging tags) を用いたリストは
項目に対してインデントを使いません。
タグは別の行に出力されます。
.Pp
.Bl -ohang -offset indent
.It Sy SL
プロセスが sleep している時間 (ブロックされた秒数)
.It Sy PAGEIN
そのプロセスによって、まだメモリにロードされていないページへの参照が
起こることで生じたディスク
.Tn I/O
の回数
.It Sy UID
数値表記によるプロセス所有者のユーザ ID
.It Sy PPID
数値表記による親プロセスの ID、プロセスの優先度
(割り込み不可の待機状態のときには、正でない値になる)
.El
.Pp
.
元のテキストは次の通りです:
.
.Bd -literal -offset indent
\&.Bl -ohang -offset indent
\&.It Sy SL
プロセスが sleep している時間 (ブロックされた秒数)
\&.It Sy PAGEIN
そのプロセスによって、まだメモリにロードされていないページ
への参照が起こることで生じたディスク
\&.Tn I/O
の回数
\&.It Sy UID
数値表記によるプロセス所有者のユーザ ID
\&.It Sy PPID
数値表記による親プロセスの ID、プロセスの優先度
(割り込み不可の待機状態のときには、正でない値になる)
\&.El
.Ed
.Pp
.
.It Fl inset
次は、inset ラベルの例です:
.Bl -inset -offset indent
.It Em tag
タグリスト (タグ段落とも呼びます) は
バークレーのマニュアルで使われている最も一般的な
種類のリストです。
後で述べるように、
.Fl width
属性を使用してください。
.It Em diag
診断リストはセクション 4 の診断リストを生成し、
呼び出し可能なマクロを無視するという点を除けば
inset リストと似ています。
.It Em hang
ぶら下がりラベルは気分の問題です。
.It Em ohang
オーバハングラベルは空白に制限がある場合には良いです。
.It Em inset
inset ラベルは段落ブロックを制御するのに便利で、
.Nm \-mdoc
マニュアルを別のフォーマットに変換するのに有用です。
.El
.Pp
上の例を生成したソーステキストはこうなっています:
.
.Bd -literal -offset indent
\&.Bl -inset -offset indent
\&.It Em tag
タグリスト (タグ段落とも呼びます) は
バークレーのマニュアルで使われている最も一般的な
種類のリストです。
後で述べるように、
\&.Fl width
属性を使用してください。
\&.It Em diag
診断リストはセクション 4 の診断リストを生成し、
呼び出し可能なマクロを無視するという点を除けば
inset リストと似ています。
\&.It Em hang
ぶら下がりラベルは気分の問題です。
\&.It Em ohang
オーバハングラベルは空白に制限がある場合には良いです。
\&.It Em inset
inset ラベルは段落ブロックを制御するのに便利で、
\&.Nm \-mdoc
マニュアルを別のフォーマットに変換するのに有用です。
\&.El
.Ed
.Pp
.
.It Fl column
この種類のリストは複数カラムを生成します。
カラムの数および各カラムの幅は
.Fl column
リストへの引数、
.Aq Ar string1 ,
.Aq Ar string2
等によって決定されます。
.Aq Ar stringN
が
.Ql .\&
(ドット) で開始し直後に有効な
.Nm \-mdoc
マクロ名が続く場合、
.Aq Ar stringN
を解釈して結果の幅を使用します。
そうでない場合、
.Aq Ar stringN
(固定幅フォントでのタイプセット) は
.Ar N
番目の桁の幅になります。
.Pp
.Ql .It
引数はそれぞれ構文解析され行を生成します。
行中の各列はタブや
.Ql .Ta
マクロで分けられた引数です。
.Pp
次の表、
.
.Bl -column -offset indent ".Sy 文字列" ".Sy nroff" ".Sy troff"
.It Sy 文字列 Ta Sy nroff Ta Sy troff
.It Li <= Ta <= Ta \*(<=
.It Li >= Ta >= Ta \*(>=
.El
.Pp
.
は次のようにして生成されています:
.
.Bd -literal
\&.Bl -column -offset indent ".Sy 文字列" ".Sy nroff" ".Sy troff"
\&.It Sy 文字列 Ta Sy nroff Ta Sy troff
\&.It Li <= Ta <= Ta \e*(<=
\&.It Li >= Ta >= Ta \e*(>=
\&.El
.Ed
.El
.Pp
.
その他のキーワード:
.
.Bl -tag -width ".Fl indent Ao Ar 文字列 Ac"
.It Fl width Ao Ar 文字列 Ac
.Aq Ar 文字列
が
.Ql .\&
(ドット) で開始し直後に有効な
.Nm \-mdoc
マクロ名が続く場合、
.Aq Ar 文字列
を解釈し、その結果の幅を使います。
本ドキュメントのほとんどすべてのリストは
このオプションを使用しています。
.Pp
使用例:
.
.Bd -literal -offset indent
\&.Bl -tag -width ".Fl test Ao Ar 文字列 Ac"
\&.It Fl test Ao Ar 文字列 Ac
これは、
\&.Fl width
フラグをタグリストと一緒に使うとどのように
働くかを見るためのもっと長い文です。
\&.El
.Ed
.Pp
.
生成結果:
.
.Bl -tag -width ".Fl test Ao Ar 文字列 Ac"
.It Fl test Ao Ar 文字列 Ac
これは、
.Fl width
フラグをタグリストと一緒に使うとどのように
働くかを見るためのもっと長い文です。
.El
.Pp
.
.Ao 文字列 Ac
が解釈される前に現在の
.Nm \-mdoc
の状態が保存されることに注意してください。
文字列が解釈された後ですべての変数が再度復元されます。
しかし、ボックス (囲いに使用される) は
.Tn GNU
.Xr troff 1
では保存されません。
結果としては、醜いエラーを防ぐためには引数は常に
.Em 平衡がとれて
いなくてはなりません。
例えば、本当に開き山括弧だけが必要である場合には
.Ql ".Ao Ar 文字列"
と書いてはだめで、代わりに
.Ql ".Ao Ar 文字列 Xc"
と書かなくてはなりません。
.Pp
そうでない場合、
.Aq Ar 文字列
が正当な数値表現である場合
.Sq ( Em u
.Em 以外のスケール指示子を伴う )
、
インデント用にその値を使用します。
最も有用なスケール指示子は
.Sq m
と
.Sq n
です。
これらはいわゆる
.Em \&Em
および
.Em "En square"
を指定します。
これらはそれぞれ、現在のフォントでの文字
.Sq m
および文字
.Sq n
の幅とほぼ同じです (nroff の出力については、
どちらのスケール指示子でも同じ値が得られます)。
.Aq Ar 文字列
が数値表現をしていない場合、文字列は
.Nm \-mdoc
マクロ名であるかどうか検査され、このマクロに関連する
デフォルトのオフセット値が使われます。
最終的にすべてのテストが失敗した場合
.Aq Ar 文字列
の幅
(固定幅フォントでのタイプセット) がオフセットと見なされます。
.Pp
タグリストタイプ用に幅が指定されていない場合、
.Ql .It
が起動される度に適切な幅を決定しようと試みます。
.Ql .It
の第 1 引数が呼び出し可能なマクロである場合、
そのマクロのデフォルト幅が使われます。
そうでなければ、
.Ql .No
のデフォルト幅が使われます。
.It Fl offset Ao Ar 文字列 Ac
.Aq Ar 文字列
が
.Ar indent
である場合、デフォルトのインデント値 (通常 6n に設定されており、
.Ql .Dl
または
.Ql .Bd
で使われる値と似ています)
が使われます。
.Aq Ar 文字列
が正当な数値表現である場合
.Pf ( Sq Em u
.Em 以外のスケール指示子を伴う )
、
その値をインデントに使用します。
最も有用なスケール指示子は
.Sq m
と
.Sq n
であり、これらはいわゆる
.Em \&Em
および
.Em "En square"
です。
これらはそれぞれ、それぞれ現在のフォントでの
.Sq m
と
.Sq n
の幅とほぼ同じです (nroff の出力については、
どちらのスケール指示子も同じ値をとります)。
.Ao 文字列 Ac
が数値表現でない場合、その文字列が
.Nm \-mdoc
のマクロ名であるかどうか検査され、このマクロに関連する
デフォルトのオフセット値が使われます。
最終的にすべてのテストが失敗した場合、
.Aq Ar 文字列
の幅 (固定幅フォントでのタイプセット) がオフセットとして
とられます。
.It Fl compact
リストの前およびリスト項目間に垂直方向の空白を挿入しないように
します。
.El
.
.
.Sh "その他のマクロ"
.
ここには、いままでのセクションにはうまく当てはまらなかった
残りのマクロのリストがあります。
次のマクロに対しては本物の使用例を見つけられませんでした。
それは
.Ql .Me
と
.Ql .Ot
です。
この 2 つについても完璧を期するためにここに
文書化はしています。
もしこの 2 つのマクロの
適切な使い方をご存知であれば
.Mt bug-groff@gnu.org
までメールを送ってください (例つきで)。
.
.Bl -tag -width ".Li .Bt"
.It Li .Bt
は
.
.Bd -ragged -offset indent
.Bt
.Ed
.\" 次の .sp は翻訳で追加。
.sp
を表示します。
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
また引数もとりません。
.
.It Li .Fr
.Pp
.Dl 使い方: .Fr Ao 関数の戻り値 Ac ...
.Pp
このマクロは使わないでください。
このマクロは戻り値 (通常は数字 1 個) の直前での
改行を許してしまいます。
印刷時の振る舞いとしては悪いことです。
直前の単語と戻り値とを結合させるには
.Ql \e~
を使用してください。
.
.It Li .Hf
(ヘッダ) ファイルをそのまま含めるにはこのマクロを
使ってください。
このマクロは、最初に
.Ql File:
とファイル名を表示し、その後で
.Ao ファイル Ac
の内容を表示します。
.Pp
.Dl 使い方: .Hf Ao ファイル Ac
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
.
.It Li .Lk
将来書かれる予定です。
.
.It Li .Me
正確な使用方法は分かりません。
.Nm \-mdoc
ソースファイル中の記述では
.Dq "メニューエントリ"
となっています。
.Pp
デフォルト幅は 6n です。
.
.It Li .Mt
将来書かれる予定です。
.
.It Li .Ot
正確な使用方法は分かりません。
.Nm \-mdoc
ソースファイル中の記述では
.Dq "古い関数タイプ (fortran)"
となっています。
.
.It Li .Sm
空白モードを有効に (トグル) します。
.Pp
.Dl 使い方: .Sm Oo on | off Oc ...
.Pp
空白モードが off の場合、マクロ引数の間に空白は
挿入されません。
引数なしで呼ばれた場合 (あるいは次の引数が
.Ql on
でも
.Ql off
でもない場合)
.Ql .Sm
マクロは空白モードに入ります。
.
.It Li .Ud
マクロは
.
.Bd -ragged -offset indent
.Ud
.Ed
.\" 次の .sp は翻訳で追加。
.sp
を表示します。
.Pp
このマクロは呼び出し不可能であり、構文解析もされません。
また引数もとりません。
.El
.
.
.Sh "定義済み文字列"
.
次の文字列が定義済みです:
.Pp
.Bl -column 文字列 infinity "troff " "まっすぐなダブルクォート" -offset indent
.It Sy 文字列 Ta Sy nroff Ta Sy troff Ta Sy 意味
.It Li <=     Ta <=       Ta \*[<=]   Ta "以下"
.It Li >=     Ta >=       Ta \*[>=]   Ta "以上"
.It Li Rq     Ta ''       Ta \*[Rq]   Ta "右側のダブルクォート"
.It Li Lq     Ta ``       Ta \*[Lq]   Ta "左側のダブルクォート"
.It Li ua     Ta ^        Ta \*[ua]   Ta "上向き矢印"
.It Li aa     Ta \'       Ta \*[aa]   Ta "アキュートアクセント"
.It Li ga     Ta \`       Ta \*[ga]   Ta "グレーブアクセント"
.It Li q      Ta \&"      Ta \*[q]    Ta "まっすぐなダブルクォート"
.It Li Pi     Ta pi       Ta \*[Pi]   Ta "ギリシャ語のパイ"
.It Li Ne     Ta !=       Ta \*[Ne]   Ta "不等号"
.It Li Le     Ta <=       Ta \*[Le]   Ta "以下"
.It Li Ge     Ta >=       Ta \*[Ge]   Ta "以上"
.It Li Lt     Ta <        Ta \*[Lt]   Ta "小なり"
.It Li Gt     Ta >        Ta \*[Gt]   Ta "大なり"
.It Li Pm     Ta +\-      Ta \*[Pm]   Ta "プラスマイナス"
.It Li If     Ta infinity Ta \*[If]   Ta "無限"
.It Li Am     Ta \*[Am]   Ta \*[Am]   Ta "アンパサンド"
.It Li Na     Ta \*[Na]   Ta \*[Na]   Ta "非数値"
.It Li Ba     Ta \*[Ba]   Ta \*[Ba]   Ta "垂直線"
.El
.Pp
カラムの名前
.Sy nroff
と
.Sy troff
は少々誤解を招くものです。
.Sy nroff
は
.Tn ASCII
文字を表示しますが、
.Sy troff
では利用可能なもののうち一番良いグリフ形式を
表示します。
例えば、Unicode を使用可能にした
.Tn TTY
デバイスはすべての文字列に対して適切なグリフ表現を
持っていますが、それに対して Latin1 に対して機能を強化した
.Tn TTY
デバイスはプラスマイナス記号しか持っていません。
.Pp
文字を 2 つ含んだ文字列名は
.Ql \e*(xx
として表記できます。
文字を 1 文字だけ含んだ文字列名は
.Ql \e*x
と表記できます。
どのような長さの文字列名に対しても、一般的な文法は
.Ql \e*[xxx]
となります ( これは
.Tn GNU
.Xr troff 1
拡張です)。
.
.
\#
\#=====================================================================
\#
.Sh 診断
.
以前のバージョンの
.Nm \-mdoc
パッケージでは利用可能だったデバッグ用マクロ
.Ql .Db
は取り除かれました。
なぜなら、
.Tn GNU
.Xr troff 1
ではパラメータをチェックするのにもっと良いファシリティを
提供しているからです。
さらに、このマクロパッケージには
エラーや警告メッセージが多数追加されており、よりロバストで
饒舌なものになっています。
.Pp
唯一残ったデバッグ用マクロは
.Ql .Rd
であり、これはすべてのグローバルレジスタならびに文字列の
レジスタダンプを出力するものです。
通常のユーザが使う必要は決してないでしょう。
.
.
.Sh "GROFF, TROFF, および NROFF を使用した整形"
.
デフォルトでは、このパッケージでは
.Sq latin1
や
.Sq unicode
のような
.Tn TTY
デバイスで表示する場合には改ページやヘッダ、フッタは
禁止されており、マニュアルをオンラインで効率良く
見ることができるようになっています。
この振る舞いは、
.Xr groff 1
を呼んでいるときにレジスタ
.Ql cR
に 0 を指定することで変更することができます
(例えば、
.Tn TTY
出力のハードコピーを作成したいときなど)。
.Pp
.Dl groff -Tlatin1 -rcR=0 -mdoc foo.man > foo.txt
.Pp
両面印刷用には、レジスタ
.Ql D
を 1 に設定してください:
.Pp
.Dl groff -Tps -rD1 -mdoc foo.man > foo.ps
.Pp
ドキュメントのフォントサイズを 11pt や 12pt に変更したい
場合は、レジスタ
.Ql S
をそれに合わせて設定してください:
.Pp
.Dl groff -Tdvi -rS11 -mdoc foo.man > foo.dvi
.Pp
レジスタ
.Ql S
は
.Tn TTY
デバイスに対しては無視されます。
.Pp
行およびタイトルの長さを変えたい場合、それぞれレジスタ
.Ql LL
と
.Ql LT
を設定してください:
.Pp
.Dl groff -Tutf8 -rLL=100n -rLT=100n -mdoc foo.man | less
.Pp
設定されていない場合、TTY デバイスに対してはレジスタ値は 78n に、
その他の場合 6.5i になります。
.
.
.Sh 関連ファイル
.
.Bl -tag -width mdoc/doc-ditroff -compact
.It Pa doc.tmac
主なマニュアル用マクロパッケージです。
.It Pa mdoc.tmac
.Pa doc.tmac
を呼ぶラッパファイルです。
.It Pa mdoc/doc-common
共通する文字列、定義、および印刷出力に関連する項目です。
.It Pa mdoc/doc-nroff
.Tn TTY
出力デバイス用に使用される定義です。
.It Pa mdoc/doc-ditroff
その他すべてのデバイス用に使用される定義です。
.It Pa mdoc.local
ローカルマシンでの追加項目およびカスタマイズ項目です。
.It Pa andoc.tmac
このファイルは
.Nm \-mdoc
パッケージと
.Nm \-man
パッケージのどちらを使用すべきかをチェックします。
.El
.
.
.Sh "関連項目"
.
.Xr groff 1 ,
.Xr man 1 ,
.Xr troff 1 ,
.Xr groff_man 7
.
.
.Sh バグ
.
セクション 3f はヘッダルーチンには追加されていません。
.Pp
.Ql \&.Nm
.Sx NAME
セクションにおいては、フォントを変更するべきです。
.Pp
行の長さが短すぎる場合に行が分割されるのを防ぐために
.Ql \&.Fn
がチェックを行う必要があります。
ときどき、最後の括弧が分割されることがあり、
行詰めモードであるときにおかしな結果になることがあります。
.Pp
リストマクロおよびディスプレイマクロは何のキープも
行いませんが、これはキープを行うべきです。
.\" Note what happens if the parameter list overlaps a newline
.\" boundary.
.\" to make sure a line boundary is crossed:
.\" .Bd -literal
.\" \&.Fn struct\e\ dictionarytable\e\ *dictionarylookup struct\e\ dictionarytable\e\ *tab[]
.\" .Ed
.\" .Pp
.\" produces, nudge nudge,
.\" .Fn struct\ dictionarytable\ *dictionarylookup char\ *h struct\ dictionarytable\ *tab[] ,
.\" .Fn struct\ dictionarytable\ *dictionarylookup char\ *h struct\ dictionarytable\ *tab[] ,
.\" nudge
.\" .Fn struct\ dictionarytable\ *dictionarylookup char\ *h struct\ dictionarytable\ *tab[] .
.\" .Pp
.\" If double quotes are used, for example:
.\" .Bd -literal
.\" \&.Fn \*qstruct dictionarytable *dictionarylookup\*q \*qchar *h\*q \*qstruct dictionarytable *tab[]\*q
.\" .Ed
.\" .Pp
.\" produces, nudge nudge,
.\" .Fn "struct dictionarytable *dictionarylookup" "char *h" "struct dictionarytable *tab[]" ,
.\" nudge
.\" .Fn "struct dictionarytable *dictionarylookup" "char *h" "struct dictionarytable *tab[]" ,
.\" nudge
.\" .Fn "struct dictionarytable *dictionarylookup" "char *h" "struct dictionarytable *tab[]" .
.\" .Pp
.\" Not a pretty sight...
.\" In a paragraph, a long parameter containing unpaddable spaces as
.\" in the former example will cause
.\" .Xr troff
.\" to break the line and spread
.\" the remaining words out.
.\" The latter example will adjust nicely to
.\" justified margins, but may break in between an argument and its
.\" declaration.
.\" In
.\" .Xr nroff
.\" the right margin adjustment is normally ragged and the problem is
.\" not as severe.
.
.\" Local Variables:
.\" mode: nroff
.\" End:
.\" .SH 履歴
.\" Yoshiteru Kageyama <yt-kage@cb3.so-net.ne.jp> 2001/06/10 mdoc.samples.7
.\" を参考に翻訳
.\" MORI Kouji <moriko@hh.iij4u.or.jp> 2001/08/21 訳チェック
