'\" t
.ig
roff.man

Last update: 3 Apr 2003

This file is part of groff, the GNU roff type-setting system.

Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
written by Bernd Warken <bwarken@mayn.de>
maintained by Werner Lemberg <wl@gnu.org>

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with the
Invariant Sections being this .ig-section and AUTHORS, with no
Front-Cover Texts, and with no Back-Cover Texts.

A copy of the Free Documentation License is included as a file called
FDL in the main directory of the groff source package.
..
.\" $FreeBSD$
.\" WORD: gremlin picture          gremlin 図
.
.\" --------------------------------------------------------------------
.\" Setup
.\" --------------------------------------------------------------------
.
.mso www.tmac
.
.if n \{\
.  mso tty-char.tmac
.  ftr CR R
.  ftr CI I
.  ftr CB B
.\}
.
.if '\*[.T]'dvi' \{\
.  ftr CB CW
.\}
.
.
.\" --------------------------------------------------------------------
.\" String definitions
.
.\" Final `\""' comments are used to make Emacs happy, sic \""
.
.\" The `-' sign for options.
.ie t \{\
.  ds @- \-\"
.  ds @-- \-\-\"
.\}
.el \{\
.  ds @- -\"
.  ds @-- --\"
.\}
.
.ds Comment \.\[rs]\[dq]\"
.ds Ellipsis \.\|.\|.\&\"
.
.
.\" --------------------------------------------------------------------
.\" Begin of macro definitions
.
.de c
.\" this is like a comment request when escape mechanism is off
..
.
.eo
.
.c ---------------------------------------------------------------------
.
.de Text
.  nop \)\$*
..
.
.de CodeSkip
.  ie t \
.    sp 0.2v
.  el \
.    sp
..
.
.de Esc
.  ds @1 \$1\"
.  shift
.  Text \f[B]\[rs]\*[@1]\f[]\$*
.  rm @1
..
.
.de QuotedChar
.  ds @1 \$1
.  shift
.  nop `\f[B]\*[@1]\f[]'\$*
.  rm @1
..
.
.c --------------------------------------------------------------------
.
.c a shell command line
.de ShellCommand
.  br
.  ad l
.  nh
.  Text \f[I]sh#\h'1m'\f[]\f[CR]\$*\f[]\&\"
.  ft R
.  ft P
.  hy
.  ad
..
.
.c --------------------------------------------------------------------
.
.c ShortOpt ([c [punct]])
.c
.c `-c' somewhere in the text.
.c The second argument is some trailing punctuation.
.c
.de ShortOpt
.  ds @1 \$1\"
.  shift
.  nh
.  Text \f[CB]\*[@-]\f[]\f[B]\*[@1]\f[]\/\$*
.  hy
.  rm @1
..
.
.de TP+
.  br
.  ns
.  TP \$1
..
.
.c --------------------------------------------------------------------
.
.c Topic
.c
.de Topic
.  TP 2m
.  Text \[bu]
..
.
.ec
.\" End of macro definitions
.
.
.\" --------------------------------------------------------------------
.\" Title
.\" --------------------------------------------------------------------
.
.TH ROFF 7 "1 May 2003" "Groff Version 1.19"
.SH 名称
roff \- roff の清書のコンセプトと歴史
.
.
.\" --------------------------------------------------------------------
.SH 解説
.\" --------------------------------------------------------------------
.
.I roff
とは清書プログラム群の一般名称です。
.IR troff ,
.IR nroff ,
.IR ditroff ,
.IR groff
などの名前で知られています。
.
roff 清書システムは、拡張可能なフォーマット用言語と、
印刷および他のテキスト書式への変換のための一連のプログラムからなります。
.
伝統的には、これが Unix の主たるテキスト処理システムでした。
すべての Unix 的なオペレーティングシステムは、
いまだに roff システムをコアパッケージとして配布しています。
.
.P
今日、最も一般的な roff システムはフリーソフトウェアでの
実装である
.IR "GNU roff",
.BR groff (1)
です。
.
.I groff
です。
groff より前の実装は
.I 古典
(1973 年まで遡ります)
と呼ぶことにします。
.
.I groff
は、古典である先祖の見た目や使用感および機能を実装していますが、
多くの拡張を持ちます。
.
.I groff
ほとんどすべての計算機システムで利用できるため、今日では事実上の
roff 標準となっています。
.P
古い Unix システムでは、
.I Multics
オペレーティングシステムのもっと古い
.B runoff
を実装した、
.B roff
と呼ばれるバイナリを持つものがありました。
.B 歴史
節を参照してください。
このプログラムの機能は、古代の troff と比べてさえ限定されたものでした。
これはもうサポートされていません。
.
この結果、この文書では、
.I roff
という術語は常に
.IR "roff システム"
一般を指し、古代の roff バイナリを指しません。
.
.P
その古さにもかかわらず、roff は今日でも広く使用されています。
例えば、UNIX システムのマニュアルページ
.RI ( "man ページ\/" )
や多くのソフトウェア書籍、システム文書、標準、企業の文書は
roff で書かれています。
.
テキストデバイスに対する roff 出力は、いまだに並ぶもののないほど優れて
います。グラフィカルな出力も他のフリーの清書プログラムと同等の品質を
持っていますし、ものによっては商用システムのものよりも優れているときも
あります。
.
.P
roff のもっとも有名なアプリケーションは
.I マニュアルページ
または単に
.IR "man ページ"
と呼ばれるものです。
これは、多くのオペレーティングシステムにおいて、
標準の文書化システムです。
.
.P
この文書は、
.IR "roff システム"
の開発にまつわる歴史的な事実、
すべての roff バージョンに共通な使用側面や通常は
.BR groff (1)
のようなフロントエンドに隠されてしまうような roff パイプラインの詳細、
このフォーマット言語の一般概要、roff ファイル編集のこつ、
さらなる参考資料へのポインタを記述します。
.
.
.\" --------------------------------------------------------------------
.SH 歴史
.\" --------------------------------------------------------------------
.
.I roff
テキスト処理システムは、非常に長い歴史を持ち、1960 年代まで遡ります。
.
roff システム自身 Unix オペレーティングシステムと密に繋っていますが、
その根源はより昔のオペレーティングシステムである CTSS および Multics です。
.
.
.\" --------------------------------------------------------------------
.SS "runoff の先祖"
.\" --------------------------------------------------------------------
.
.P
.I roff
の進化はオペレーティングシステムの歴史に密にかかわっています。
.
その先祖である
.B runoff
は、
.I Jerry Saltzer
によって
.I CTSS
.RI ( "Compatible Time Sharing System" )
オペレーティングシステム上で書かれました。
1961 年という早い時期です。
.
1963 年から CTSS が更に開発され、
Unix の有名な先祖であるオペレーティングシステム
.URL http://\:www.multicians.org "Multics"
になるとき、
.I runoff
は文書テキスト処理の主たる書式になりました。
.
両オペレーティングシステムは当時非常に高価な計算機上でのみ動作したので、
それらは研究分野や政府や軍事の目的で主に使用されていました。
.
.P
現代の roff に比べ、
.I runoff
言語の可能性は非常に限られていました。
.
1960 年代には、テキスト出力のみが可能でした。
.
これは、長さ 2 のリクエストの集合により実装可能でした。
その多くは、roff でも同じく使用されています。
.
この言語は、計算機世代以前の清書習慣に従ってモデル化されたものでした。
原稿中のドットで開始する行は、
後で手動で清書を行う人に対する清書の指示を表していたのです。
.
.P
runoff プログラムは、最初に
.I PL/1
言語で記述され、後に
.I C
プログラム言語の祖母である
.I BCPL
で記述されました。
.
Multics オペレーティングシステムでは、
ヘルプシステムが runoff で扱われていました。
これは、roff が Unix マニュアルページを扱う仕事と似ています。
.
runoff 言語で書かれた文書は、現存します。
例えば Saltzer のホームページを見てください。
.B "関連項目"
の節を参照してください。
.
.
.\" --------------------------------------------------------------------
.SS "古典的な nroff/troff システム"
.\" --------------------------------------------------------------------
.
1970 年代には、Multics の子
.I Unix
の人気がどんどんでてきました。
これは、購入可能なマシン上で動作することと、
当時大学ではより簡単に入手可能であったためです。
.
MIT (the Massachusetts Institute of Technology) では、
Unix を実行する PDP-11 計算機からのグラフィックス出力デバイスである、
Wang
.I Graphic Systems CAT
清書機を動かす必要がありました。
.
runoff の機能はこの目的には足りなかったので、
.I "Josef F. Osanna"
の手により更に強力なテキストフォーマットシステムへと開発されました。
彼は、Multics オペレーティングシステムの主たる開発者であり、
いくつかの runoff ポートのプログラマでもあります。
.
.P
.I runoff
という名前は
.I roff
に縮められました。
Osanna のコンセプトである非常に拡大された言語は、既に完全な
.I "roff システム"
のすべての要素を含んでいました。
.
すべての現代的な roff システムは、
このシステムとの互換性を実装しようとしています。
.
そのため、Joe Osanna は roff システムの父とも呼べるのです。
.
.P
この最初の
.I roff システム
は 3 個のフォーマットプログラムを持っていました。
.
.TP
.B troff
.RI ( "植字機 roff\/" )
は、唯一のデバイスとして
.I CAT
植字機用のグラフィカル出力を生成しました。
.
.TP
.B nroff
は、端末および行プリンタに適したテキスト出力を生成しました。
.
.TP
.B roff
は、以前の runoff プログラムの再実装でしたが、機能は限定されていました。
このプログラムは後のバージョンで捨てられました。
.
今日では、
.I roff
という名前は、troff/\:nroff システム全体を指すために使用されます。
.
.P
Osanna の最初のバージョンは PDP-11 アセンブリ言語で記述され、
1973 年にリリースされました。
.
.I Brian Kernighan
が、これを C プログラミング言語で書き直すことで、
.I roff
開発に加わりました。
.
C バージョンは 1975 年にリリースされました。
.
.P
フォーマット言語
.BR nroff / troff
プログラムは、著名な
.IR "Troff User's Manual [CSTR\~#54]"
に記述されています。
これは、1976 年に最初に出版され、
1992 年まで Brian Kernighan によって改訂され続けました。
.
この文書は
.I "古典 troff"
の仕様書です。
後のすべての
.I roff
システムは、この仕様との互換性を確立しようと試みました。
.
.P
1977 年に約 50 歳にて Osanna が心臓発作で死去した後は、
Kernighan が troff の開発を続けました。
.
次のマイルストーンは、
より多くのデバイスと中間出力言語と後処理システムのサポートのために、
一般的なインタフェースを troff に備えることでした。
.
これは今日でも使用されていますので、これにより、
.I "roff システム"
の構造が完成しました。
.BR "ROFF の使い方"
の節を参照してください。
.
1979 年には、これらの斬新なシステムが論文
.IR "[CSTR\~#97]"
に記述されました。
この新しい troff バージョンは、
.I groff
を含む既存するすべてのより新しい troff システムの基礎となりました。
.
システムによっては、この
.I デバイス独立 troff
だけで、
.BR ditroff (7)
と呼ばれるバイナリを持つものもあります。
.
すべての現代的な
.B troff
プログラムは、既に、完全な ditroff 機能を自動的に提供します。
.
.
.\" --------------------------------------------------------------------
.SS "商用化"
.\" --------------------------------------------------------------------
.
簡単に入手可能な Unix\~7 オペレーティングシステムが商用化されたときに、
大きな退化が発生しました。
.
分岐したオペレーティングシステムが大量発生し、
互いに非互換な拡張をめぐって争いました。
.
幸運なことに、これらの非互換性は、元の troff とは争いませんでした。
.
すべての商用 roff システムは、
Osanna/\:Kernighan のオープンソースコードと文書を多用しましたが、
それらに些細な追加をしただけで \[lq]彼等\[rq] のシステムとして販売しました。
.
.P
古代 Unix と古典 troff のソースコードは、20 年もの間利用不可能でした。
.
幸運なことに、2001 年に Caldera が SCO UNIX を購入しました。
.
そして Caldera は、古代のソースコードに対する、
非商用目的でのオンラインアクセスを可能にしました。
.BR "関連項目"
を参照してください。
.
.
.\" --------------------------------------------------------------------
.SS "フリーの roff"
.\" --------------------------------------------------------------------
.
商用 roff システムのいずれも、
一般的な roff 開発の後継者の地位を獲得できませんでした。
.
誰もが各々の物にだけ興味があったのです。
.
これは 1980 年代に、
一度は素晴しかった Unix オペレーティングシステムの急降下に繋がります。
.
.P
急速に突き進む商用化への対抗策として、
AT&T Bell Labs は、彼等の
.I Plan\~9
オペレーティングシステムで救援プロジェクトを立ち上げようとしました。
.
これは非商用にはソースコードですら自由に利用可能でしたが、
プロプラエタリなライセンスがあって、自由な開発を阻害していたのです。
.
このコンセプトは時代遅れであったので、
メインストリームの開発をまとめるプラットフォームとしては
Plan\~9 は受け入れられませんでした。
.
.P
唯一の救済は、立ち上がりつつあったフリーのオペレーティングシステム
(386BSD, GNU/\:Linux 等) やソフトウェアプロジェクトによるもので、
それは 1980 年代および 1990 年代のことです。
.
これらは古代 Unix の機能と多くの拡張を実装していましたので、
古い経験は失われなかったのです。
.
21 世紀には、Unix 的なシステムは、再度、
計算機産業におけるメジャーな要因になりました \[em]
フリーソフトウェアのおかげで。
.
.P
最重要なフリー roff プロジェクトは troff の GNU ポートです。
James Clark によって作成され、
.URL http://\:www.gnu.org/\:copyleft "GNU Public License"
にされました。
.
これは
.I groff
.RI ( "GNU roff" )
と呼ばれます。
概要は
.BR groff (1)
を参照してください。
.
.P
groff システムは、依然として活発に開発されています。
.
これは古典 troff と互換ですが、多くの拡張が追加されています。
.
ほとんどすべての計算機システムで利用できる、
はじめての roff システムです \[em] しかもフリーです。
.
このため、今日では groff が事実上の roff 標準となっています。
.
.
.\" --------------------------------------------------------------------
.SH "ROFF の使い方"
.\" --------------------------------------------------------------------
.
ほとんどの人々は、実際に roff を使っていることにさえ気付かないでしょう。
.
システムマニュアルページ (man ページ) を読むときには、
roff がバックグラウンドで動作しているのです。
.
roff 文書は、生粋のビューアである
.BR xditview (1x)
で閲覧可能です。
これは、X ウィンドウ配布物の標準プログラムです。
.BR X (7x)
を参照してください。
.
明示的に roff を使うのもまた難しくはありません。
.
.P
roff の実装によっては、ラッパプログラムがあり、
シェルのコマンドラインから roff システムを簡単に使えるようにしています。
.
例えば、GNU roff 実装では、次のようになっています。
古典 troff の長いコマンドパイプを避けるためのコマンドラインオプションを
与えるために、
.BR groff (1)
が提供されています。
.BR grog (1)
プログラムは、文書をもとに、groff を起動するための引数を推測します。
コマンドラインオプションを指定したくない方は、
.BR groffer (1)
プログラムを試すと良いでしょう。
こちらは、groff ファイルと man ページをグラフィカルに表示するためのものです。
.
.
.\" --------------------------------------------------------------------
.SS "roff パイプ"
.\" --------------------------------------------------------------------
.
各 roff システムは、プリプロセッサ、roff フォーマットプログラム、
一組のデバイスポストプロセッサ群からなります。
.
このコンセプトは、
.I パイプライン
機構を多用します。
それはすなわち、一連のプログラムが次々と呼ばれ、そこでは、
行列上の各プログラムの出力が次のプログラムの入力となるというものです。
.
.CodeSkip
.
.ds @1 "cat \f[I]file\f[P] |\""
.ds @2 "\*[Ellipsis] | \f[I]preproc\f[P] | \*[Ellipsis] |\""
.ds @3 "troff \f[I]options\f[P] | \f[I]postproc\f[P]\""
.
.ShellCommand "\*[@1] \*[@2] \*[@3]"
.
.rm @1
.rm @2
.rm @3
.P
プリプロセッサは roff コードを生成し、これは roff フォーマッタ
(例えば troff) に与えられます。
次に、roff フォーマッタが、
.I 中間出力
を生成し、これがデバイスポストプロセッサプログラムに与えられて
印刷や最終出力に使用されます。
.
.P
これらの部分すべてが、各自のプログラム言語を使用します。
各言語は、他の部分とは完全に独立です。
.
更に、特殊用途向けの roff マクロパッケージも含めることが可能です。
.
.P
ほとんどの roff 文書は、なにがしかのパッケージのマクロを使用し、
それらをプリプロセッサのコードと混ぜて使い、
それらに素の roff 言語の要素で味付けします。
.
roff フォーマット言語の完全な力は、ユーザはほとんどの場合必要としません。
マクロパッケージのプログラマだけが、そのすさまじい詳細を知る必要があるのです。
.
.
.
.\" --------------------------------------------------------------------
.SS "プリプロセッサ"
.\" --------------------------------------------------------------------
.
roff プリプロセッサは、
roff フォーマット言語に構文的に従う出力を生成する、任意のプログラムです。
.
各プリプロセッサは、
このプリプロセッサを通すと、roff コードに変換されるような、
自分自身の言語を定義します。
.
このような言語で記述された部分は、roff 文書に埋め込めます。
このような部分は、特殊な roff リクエストやマクロで識別されます。
.
プリプロセッサコードで拡張された文書は、
対応するすべてのプリプロセッサを通してから、
実際の roff フォーマットプログラムに通す必要があります。
これにより、フォーマッタが、外部コードを単に無視できるようになります。
.
プリプロセッサプログラムは、文書のうち、
自分自身のものと判断した部分のみを抽出して変換します。
.
.P
フリーおよび商用の roff プリプロセッサが多数あります。
.
すべてのシステムで利用できるわけではないものものありますが、
プリプロセッサのほんの小さな集合は、
roff システムの一部とみなされます。
.
古典的なプリプロセッサは次の通りです。
.

.de @TP
.\" local indent for .TP
.TP \\w'\\f[B]soelim\\f[P]'u+2n
..
.P
.RS
.PD 0
.@TP
.B tbl
表のためのものです。
.@TP
.B eqn
数式のためのものです。
.@TP
.B pic
図の描画のためのものです。
.@TP
.B refer
参考文献の参照用です。
.@TP
.B soelim
標準の場所からマクロファイルをインクルードするためのものです。
.PD
.RE
.
.P
すべてのシステムで使用可能ではありませんが、
他の有名なプリプロセッサは次の通りです。
.
.P
.RS
.PD 0
.@TP
.B chem
化学式の描画のためのものです。
.@TP
.B grap
グラフィカル要素を構築するためのものです。
.@TP
.B grn
.BR gremlin (1)
図を埋め込むためのものです。
.PD
.RE
.
.rm @TP
.
.\" --------------------------------------------------------------------
.SS "フォーマットプログラム"
.\" --------------------------------------------------------------------
.
.I roff フォーマッタ
は、roff フォーマット言語で記述された文書
または roff マクロパッケージを使用する文書を、構文解析します。
.
生成される
.IR "中間出力"
は、フォーマットプログラムのコマンドラインオプションで指定されている、
単一のデバイスポストプロセッサに与えられることを意図しています。
.
文書は、必要なすべてのプリプロセッサに事前に通されていることが必要です。
.
.P
roff フォーマッタが生成する出力は、もうひとつの言語、すなわち
.IR "中間出力書式"
や
.IR "troff 出力"
と呼ばれるもので表現されます。
この言語は、最初に
.IR "[CSTR\~#97]"
で仕様が記述されました。
この GNU 拡張が
.BR groff_out (5)
に記述されています。
.
中間出力言語は、高位の roff 言語に対する、アセンブリ言語のようなものです。
.
生成された中間出力はある特殊デバイス用に最適化されたものですが、
言語はすべてのデバイスに共通です。
.
.P
roff 生成器は、roff システムの心臓です。
.
典型的な roff は、2 個の生成器、すなわちテキストデバイス用の
.B nroff
と、グラフィカルデバイス用の
.B troff
を持っています。
.
.P
しばしば、
.I troff
という名前が、両方の生成器を指す一般術語として使用されます。
.
.
.\" --------------------------------------------------------------------
.SS "デバイスとポストプロセッサ"
.\" --------------------------------------------------------------------
.
デバイスとは、プリンタやテキスト端末やグラフィカル端末といった
ハードウェアインタフェースや、別のテキスト形式やグラフィカル形式への
変換のソフトウェアインタフェースです。
.
.P
roff ポストプロセッサは、troff 出力を、
特殊デバイスに適した形式に変換するプログラムです。
.
roff ポストプロセッサは、出力対象に対するデバイスドライバのようなものです。
.
.P
各デバイスに対し、
そのデバイスに最適化されたポストプロセッサプログラムがあります。
.
ポストプロセッサは、生成された中間出力を構文解析し、
デバイスに直接送られるデバイス固有コードを生成します。
.
.P
デバイスおよびポストプロセッサの名前は固定ではありません。
なぜなら、これらは一般的に、実際の計算機のソフトウェアおよびハードウェアの
能力に依存するからです。
.
例えば、
.I [CSTR\~#54]
で述べられている古典的なデバイスは、
古典的な時代から大部変わってしまいました。
.
古いハードウェアはもはや存在しませんし、
古いグラフィカル変換器は、現在使えるものと比較すると、非常に不正確です。
.
.P
例えば、古典的な troff における Postscript デバイス
.I post
は解像度 720 でしたが、groff の
.I ps
デバイスは 72000 であり、100 倍の改善がなされています。
.
.P
今日では、プリンタのようなほとんどのデバイスに対しては
オペレーティングシステムがデバイスドライバを提供しますので、
それぞれのプリンタに対して特殊なハードウェアポストプロセッサを記述する
必要はありません。
.
.
.\" --------------------------------------------------------------------
.SH "ROFF プログラム"
.\" --------------------------------------------------------------------
.
roff を使用した文書は、普通のテキストファイルを roff のフォーマット用
要素で修飾したものです。
.
roff フォーマット言語は非常に強力です。
ほぼ完全なプログラミング言語であり、言語を拡張する要素を提供します。
.
これらを使用することで、特殊な応用に適したマクロパッケージを開発する
ことが可能です。
.
このようなマクロパッケージは、素の roff よりも簡単に扱えます。
.
ほとんどの人々はマクロパッケージを選択することで、
roff 言語の内部について気にしなくても良くなっています。
.
.
.\" --------------------------------------------------------------------
.SS "マクロパッケージ"
.\" --------------------------------------------------------------------
.
マクロパッケージは、ある特殊な種類の文書を簡便な方法で
フォーマットするのに適したマクロの集合です。
.
マクロパッケージによって、roff の使い勝手が格段に良くなります。
.
パッケージのマクロ定義は、
.IB name .tmac
(または
.BI tmac. name\c
) と呼ばれるファイルに保管されています。
.
すべての tmac ファイルは、
1 つまたはそれ以上のディレクトリ中の標準の場所に保管されています。
.
マクロパッケージの命名およびその置き場所についての一般的な詳細は
.BR groff_tmac (5)
にあります。
.
.P
文書が使用するマクロパッケージは、
.BR troff (1)
にあるようにフォーマッタのコマンドラインオプション
.ShortOpt m
で宣言することもできますし、
.BR groff (7)
にあるように文書中で roff 言語のファイルインクルードリクエストで
指定可能です。
.
.P
有名な古典的マクロパッケージとしては、典型的なマニュアルページ用の
.I man
や、BSD スタイルのマニュアルページ用の
.I mdoc
や、書籍・記事・手紙用の
.I me
(おそらく、作成者
.I Eric
Allman のファーストネームから来ています) や、
.I ms
.RI ( "Manuscript Macros"
から来ています) や
.I mm
.RI ( "Memorandum Macros"
から来ています) があります。
.
.
.\" --------------------------------------------------------------------
.SS "roff フォーマット言語"
.\" --------------------------------------------------------------------
.
古典的な roff フォーマト言語は
.I Troff User's Manual
.IR "[CSTR\~#54]"
に記述されています。
.
roff 言語はリクエスト、マクロ定義、エスケープシーケンス、
文字列変数、数値レジスタまたはサイズレジスタ、そして
制御構造を提供する完全なプログラミング言語です。
.
.P
.I リクエスト
は、シェルプロンプトにおけるコマンドのような、
定義された基本的なフォーマット用コマンドです。
.
ユーザは、定義済の roff 要素を使用して、
リクエストのような要素を定義可能です。
.
これらは、
.I マクロ
と呼ばれます。
.
文書の著者は、リクエストとマクロを使う際の違いに
気づくことはないでしょう。どちらもドット
始まりの単独行で記述されます。
.
.P
.I エスケープシーケンス
は、roff の要素であり、バックスラッシュ
.QuotedChar \[rs]
で始まります。
どこにでも挿入することができ、
それは行のテキストのまんなかであっても構いません。
.
これらはさまざまな機能を実装するのに
使われます。
それには、
.Esc (
を用いた非 ASCII 文字の挿入、
.Esc f
を用いたフォントの変更、
.Esc \[dq]
を用いた文中のコメント、
.Esc \[rs]
のような特殊な制御文字のエスケープ、
その他多くの機能が含まれます
.
.P
.I 文字列
は文字列を格納可能な変数です。
.
文字列は、
.B .ds
リクエストで格納可能です。
.
格納された文字列は、後で
.B \[rs]*
エスケープシーケンスを使用することで取り出せます。
.
.P
.I レジスタ
は数値やサイズを格納します。
.
レジスタは、
.B .nr
リクエストで設定可能であり、その値は
.BR "\[rs]n"
エスケープシーケンスで取り出せます。
.
.
.\" --------------------------------------------------------------------
.SH "ファイル名の拡張子"
.\" --------------------------------------------------------------------
.
マニュアルページ (man ページ) はファイル名の拡張子として
セクション番号をとります。例えば、この文書のファイル名は
.IR roff.7
です。つまり、この文書はマニュアルページの
セクション 7
.
.P
古典的なマクロパッケージは、パッケージ名を拡張子にとります。
.I me
マクロパッケージを使った文書は
.IB file. me
となり、
.IR mm
マクロパッケージに対しては
.IB file. mm
、
.IR ms
マクロパッケージに対しては
.IB file. ms
、
.I pic
ファイルに対しては
.IB file. pic
といった具合です。
.
.P
roff 文書の一般的な命名方式はありませんが、時々
.I troff ファイル
用に
.IB file. tr
が使われているのが見受けられます。
.
roff ファイル用に標準のファイル名拡張子が必要なのかもしれません。
.
.P
ファイル名拡張子は、
.BR less (1)
ページャと組み合わせると、非常に便利なことがあります。
.
これにより、シェル環境変数で指定されるコマンドラインパイプ
.BR LESSOPEN
へすべての入力を与えることが可能となります。
この処理はうまく書けませんので、例を書いておきます:
.
.CodeSkip
.ShellCommand LESSOPEN='|lesspipe %s'
.CodeSkip
.
ここで
.B lesspipe
は、システムが提供するコマンドやあなたが書いたシェルスクリプトです。
.
.
.\" --------------------------------------------------------------------
.SH "ROFF の編集"
.\" --------------------------------------------------------------------
.
roff 文書を編集するための最良のプログラムは Emacs (または Xemacs) です。
.BR emacs (1)
を参照してください。
これは、あらゆる roff 方言に適した
.I nroff
モードを提供します。
.
このモードは、次の方法で有効にできます。
.
.P
Emacs でファイルを編集しているときには、
.RI ` "M-x nroff-mode" '
とタイプすることでモードを変えられます。
ここで、
.B M-x
は
.B Meta
キー (または
.BR Alt )
を押したままで同時に
.BR x
キーを押すことを意味します。
.
.P
ファイルをエディタにロードしたときに自動的にモードを選択するようにする
ことも可能です。
.
.Topic
もっとも一般的な方法は、次の 3 個のコメント行を、ファイルの最後に
含めることです。
.
.CodeSkip
.nf
.B \*[Comment] Local Variables:
.B \*[Comment] mode: nroff
.B \*[Comment] End:
.fi
.
.Topic
例えば man ページのような、あるファイル名拡張子の集合は、
nroff モードを自動的に有効にします。
.
.Topic
理論上は、ファイルの最初の行として
.CodeSkip
.B \*[Comment] \%-*-\ nroff\ -*-
.CodeSkip
を書いておくことで、ロード時に nroff モードを開始可能です。
.
不幸なことに、これで混乱してしまう
.B man
プログラムのようなアプリケーションがありますので、
この方法は価値が低下しています。
.
.P
すべての roff 整形器は、自動化された改行と水平および垂直の間隔調整を
提供します。
.
これを邪魔しないようにするには、次のこつが役立つでしょう。
.
.Topic
roff 文書に、空の行や空行を入れないでください。
.
構造的な要素が必要な場合には、代りに、
空のリクエスト (ドットのみからなる行) や、行コメント
.B \*[Comment]
を使ってください。
.
.Topic
予期せぬ動作になるので、行を空白で開始しないでください。
.
インデントされた段落は、roff リクエストで制御された方法で構築可能です。
.
.Topic
各文をそれ自身の独立した行で開始することによって、
ドットが略語を終端するのか文を終端するのかによって、
ドットの後の空間を調整します。
.
両者を区別するために、各文の後で、改行してください。
.
.Topic
更に、Emacs でオートフィルモードを使用するには、各文の後に、
空の roff リクエスト (ドットのみの行) を入れるのが最良です。
.
.P
次の例は、最適な roff 編集がどのように見えるかを示しています。
.
.IP
.nf
This is an example for a roff document.
.Text .
This is the next sentence in the same paragraph.
.Text .
This is a longer sentence stretching over several
lines; abbreviations like `cf.' are easily
identified because the dot is not followed by a
line break.
.Text .
In the output, this will still go to the same
paragraph.
.fi
.
.P
Emacs 以外にも、nroff スタイルファイルを提供するものがあります。
例えば、
.BR vi (1)
の拡張である
.BR vim (1)
がそうです。
.
.
.\" --------------------------------------------------------------------
.SH バグ
.\" --------------------------------------------------------------------
.
.I UNIX\[rg]
は、Open Group の登録商標です。
.
Caldera が SCO UNIX を 2001 年に買収して以来、事態はずいぶん良く
なりました。
.
.
.\" --------------------------------------------------------------------
.SH "関連項目"
.\" --------------------------------------------------------------------
.
roff 関連の文書は沢山あります。
.
古典的な troff に関するオリジナルの論文は、まだ入手可能であり、
groff のすべての側面について非常に細かいことまで記述されています。
.
.
.\" --------------------------------------------------------------------
.SS "インターネットサイト"
.\" --------------------------------------------------------------------
.
.TP
troff.org
.URL http://\:www.troff.org "The historical troff site"
には、roff のすべての歴史的な側面に関する概要とポインタがあります。
.
.TP
Multics
.URL http://\:www.multicians.org "The Multics site"
には、MIT プロジェクト、CTSS や Multics や初期の Unix や
.IR  runoff
の多くの情報があります。
用語解説や古代文書への多くのリンクが、特に有用でしょう。
.
.TP
Unix Archive
.URL http://\:www.tuhs.org/\:Archive/ \
     "The Ancient Unixes Archive"
.
には、Caldera が 2001 年以来パブリックにした古代 Unix のソースコードや
バイナリ (troff のソースコードとその文書を含む) があります。
例えば、著名な Unix version\~7 for PDP-11 は
.URL http://\:www.tuhs.org/\:Archive/\:PDP-11/\:Trees/\:V7 \
     "Unix V7 site"
にあります。
.
.TP
Developers at AT&T Bell Labs
.URL http://\:cm.bell-labs.com/\:cm/\:index.html \
     "Bell Labs Computing and Mathematical Sciences Research"
.
には、初期の開発者の情報を追跡するための、検索機能があります。
.
.TP
AT&T Bell Labs による Plan 9
.URL http://\:plan9.bell-labs.com "The Plan\~9 operating system"
.
です。
.
.TP
runoff
.URL http://web.mit.edu/\:Saltzer/\:www/\:publications/\:pubs.html \
"Jerry Saltzer's home page"
.
には、古代の runoff 整形言語を使用した文書があります。
.
.TP
CSTR の論文
.URL http://\:cm.bell-labs.com/\:cm/\:cs/\:cstr.html \
     "The Bell Labs CSTR site"
.
には、オリジナルの troff マニュアル (CSTR #54, #97, #114, #116, #122)
と有名な歴史的なプログラミング文書があります。
.
.TP
GNU roff
.URL http://\:www.gnu.org/\:software/\:groff "The groff web site"
には、実際の標準 roff である、フリー roff 実装の groff があります。
.
.
.\" --------------------------------------------------------------------
.SS "歴史的な roff 文書"
.\" --------------------------------------------------------------------
.
多くの古典的な
.troff
文書が、まだオンラインで入手可能です。
.
troff 言語の主要な 2 冊のマニュアルは次の通りです。
.
.TP
[CSTR\~#54]
J. F. Osanna,
.URL http://\:cm.bell-labs.com/\:cm/\:cs/\:54.ps \
     "\fINroff/\:Troff User's Manual\fP" ;
.
Bell Labs, 1976; revised by Brian Kernighan, 1992.

.
.TP
[CSTR\~#97]
Brian Kernighan,
.URL http://\:cm.bell-labs.com/\:cm/\:cs/\:97.ps \
     "\fIA Typesetter-independent TROFF\fP" ,
.
Bell Labs, 1981, revised March 1982.
.
.P
「小言語」の roff 論文は次の通りです。
.
.TP
[CSTR\~#114]
Jon L. Bentley and Brian W. Kernighan,
.URL http://\:cm.bell-labs.com/\:cm/\:cs/\:114.ps \
     "\fIGRAP \(em A Language for Typesetting Graphs\fP" ;
.
Bell Labs, August 1984.
.
.TP
[CSTR\~#116]
Brian W. Kernighan,
.URL http://\:cm.bell-labs.com/\:cm/\:cs/\:116.ps \
     "\fIPIC -- A Graphics Language for Typesetting\fP" ;
.
Bell Labs, December 1984.
.
.TP
[CSTR\~#122]
J. L. Bentley, L. W. Jelinski, and B. W. Kernighan,
.URL http://\:cm.bell-labs.com/\:cm/\:cs/\:122.ps \
"\fICHEM \(em A Program for Typesetting Chemical Structure Diagrams, \
Computers and Chemistry\fP" ;
.
Bell Labs, April 1986.
.
.
.\" --------------------------------------------------------------------
.SS "マニュアルページ"
.\" --------------------------------------------------------------------
.
構造が複雑であるため、完全な roff システムには、複数の man ページが
含まれ、それぞれが roff のあるひとつの側面を記述しています。
.
不幸なことに、異なった roff 実装間でも一般的となる、
文書の命名方法はありません。
.
.P
.IR groff
では、man ページ
.BR groff (1)
に、groff で利用可能なすべての文書の概観が含まれます。
.
.P
他のシステムでは、おまかせしますが、
.BR troff (1)
から始めると良いかもしれません。
.
.
.\" --------------------------------------------------------------------
.SH 作者
.\" --------------------------------------------------------------------
.
Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.
.
.P
この文書は FDL (GNU Free Documentation License) バージョン 1.1
以降の条項のもとに配布されています。
.
FDL のコピーをシステム上に持っているはずです。
また、これはオンライン
.URL http://\:www.gnu.org/\:copyleft/\:fdl.html "GNU copyleft site"
でも入手可能です。
.
.P
このドキュメントは
.IR groff
すなわち GNU roff 配布物の一部です。
.
.MTO bwarken@mayn.de "Bernd Warken"
が書き、
.MTO wl@gnu.org "Werner Lemberg"
が管理しています。
.
.
.\" --------------------------------------------------------------------
.\" Emacs setup
.\" --------------------------------------------------------------------
.
.\" Local Variables:
.\" mode: nroff
.\" End:
