.\" $FreeBSD$
.TH curs_touch 3 ""
.SH 名称
\fBtouchwin\fR, \fBtouchline\fR, \fBuntouchwin\fR,
\fBwtouchln\fR, \fBis_linetouched\fR, 
\fBis_wintouched\fR - \fBncurses\fR refresh control routines
.SH 書式
\fB#include <ncurses.h>\fR
.br
\fBint touchwin(WINDOW *win);\fR
.br
\fBint touchline(WINDOW *win, int start, int count);\fR
.br
\fBint untouchwin(WINDOW *win);\fR
.br
\fBint wtouchln(WINDOW *win, int y, int n, int changed);\fR
.br
\fBint is_linetouched(WINDOW *win, int line);\fR
.br
\fBint is_wintouched(WINDOW *win);\fR
.br
.SH 解説
\fBtouchwin\fR
ルーチンと
\fBtouchline\fR
ルーチンは、ウィンドウ全体が
描画されているかのようにして、ウィンドウのどの部分が接触させられたかに
関するすべての最適化情報を廃棄します。オーバラップするウィンドウを
使用するときはこれが必要なことがときどきあります。
1
つのウィンドウの変更が
他のウィンドウに影響を及ぼすものの、他のウィンドウ内でどの行が
変更されたかの記録は変更を反映しないからです。ルーチン
\fBtouchline\fR
は、行
\fIstart\fR
から始めて、
\fIcount\fR
行が変化したかのようにします。

\fBuntouchwin\fR
ルーチンは、
\fBwrefresh\fR
の最後の呼び出し以降、
ウィンドウ内のすべての行が変化していないとマークします。

\fBwtouchln\fR
ルーチンは、行
\fIy\fR
で始めて、ウィンドウ内に
\fIn\fR
行を作成し、
\fBwrefresh\fR
の最後の呼び出し以降、変化した
(\fIchanged\fR\fB=1\fR)
か、または
(\fIchanged\fR\fB=0\fR)
変化していないかのように見えます。

\fBis_linetouched\fR
ルーチンと
\fBis_wintouched\fR
ルーチンは、
\fBwrefresh\fR
の最後の呼び出し以降、指定の行
/
ウィンドウが修正された場合は
\fBTRUE\fR
を返します。そうでない場合、
\fBFALSE\fR
を返します。さらに、
\fBis_linetouched\fR
は、指定のウィンドウについて
\fIline\fR
が有効でない場合、
\fBERR\fR
を返します。
.SH 戻り値
すべてのルーチンが、処理失敗すると整数
\fBERR\fR
を返してきます。処理が正常に完了した場合は、
\fBERR\fR
以外の整数値を返します。ただし、前述のルーチンの解説で
異なるように記載した場合は別です。
.SH 注釈
\fBwtouchln\fR
を除くすべてのルーチンがマクロである可能性があることに
注意してください。
.SH 関連項目
\fBncurses\fR(3), \fBcurs_refresh\fR(3).
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
