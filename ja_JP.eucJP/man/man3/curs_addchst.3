.\" $FreeBSD$
.TH curs_addchstr 3 ""
.SH 名称
\fBaddchstr\fR, \fBaddchnstr\fR, \fBwaddchstr\fR,
\fBwaddchnstr\fR, \fBmvaddchstr\fR, \fBmvaddchnstr\fR, \fBmvwaddchstr\fR,
\fBmvwaddchnstr\fR - キャラクタ(および属性)のストリングを \fBncurses\fR ウィンドウに追加する
.SH 書式
\fB#include <ncurses.h>\fR

\fBint addchstr(chtype *chstr);\fR
.br
\fBint addchnstr(chtype *chstr, int n);\fR
.br
\fBint waddchstr(WINDOW *win, chtype *chstr);\fR
.br
\fBint waddchnstr(WINDOW *win, chtype *chstr, int n);\fR
.br
\fBint mvaddchstr(int y, int x, chtype *chstr);\fR
.br
\fBint mvaddchnstr(int y, int x, chtype *chstr, int n);\fR
.br
\fBint mvwaddchstr(WINDOW *win, int y, int x, chtype *chstr);\fR
.br
\fBint mvwaddchnstr(WINDOW *win, int y, int x, chtype *chstr, int n);\fR
.SH 解説
これらのルーチンは、\fIchstr\fR を、ウィンドウイメージ構造内の現在の
カーソル位置およびカーソル位置の後にコピーします。最後の引数として
\fIn\fR を持つ 4 つのルーチンは、多くとも \fIn\fR
個のエレメントをコピーしますが、それより多くは行に入りません。
\fBn\fR=\fB-1\fR の場合、ストリング全体が、行に入る最大
キャラクタ数までコピーされます。

ウィンドウカーソルは進められません。これらのルーチンは \fBwaddnstr\fR
より高速に機能します。しかし、使用するときには注意を払う必要があります。
どんな種類のチェックもせず (たとえば、改行キャラクタのチェック)、
現在のカーソル位置を進めず、右余白と交差する場合は新しい行に
ラップアラウンドせずにストリングを切り捨てるからです。
.SH 戻り値
これらのルーチンはすべて、処理が失敗すると整数 \fBERR\fR で返ります。
処理が成功して完了すると、\fBERR\fR 以外の整数値が返されます。
ただし、これまでのルーチンの説明で異なるように注記した場合は別です。
.SH 注釈
\fBwaddchnstr\fR 以外のルーチンはすべてマクロである可能性があることに
注意してください。
.SH 関連項目
\fBncurses\fR(3)
