.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)strstr.3	8.1 (Berkeley) 6/4/93
.\" %FreeBSD: src/lib/libc/string/strstr.3,v 1.3.2.5 2001/12/25 00:36:53 ache Exp %
.\"
.\" $FreeBSD$
.Dd October 11, 2001
.Dt STRSTR 3
.Os
.Sh 名称
.Nm strstr , strcasestr , strnstr
.Nd 文字列中の部分文字列の位置を探す
.Sh ライブラリ
.Lb libc
.Sh 書式
.In string.h
.Ft char *
.Fn strstr "const char *big" "const char *little"
.Ft char *
.Fn strcasestr "const char *big" "const char *little"
.Ft char *
.Fn strnstr "const char *big" "const char *little" "size_t len"
.Sh 解説
.Fn strstr
関数は、ヌル文字で終了する文字列
.Fa big
中で、
ヌル文字で終了する文字列
.Fa little
が最初に出現する位置を探します。
.Pp
.Fn strcasestr
関数は、
.Fn strstr
と同様ですが、
両方の文字列の大文字と小文字の違いを無視します。
.Pp
.Fn strnstr
関数は、検索された
.Fa len
文字より少ない文字列
.Fa big
の中で、
ヌル文字で終了する文字列
.Fa little
が最初に出現する位置を探します。
.Ql \e0
の後に現れる文字は、検索されません。
.Fn strnstr
関数は、
.Fx
の特定の API なので、
移植に無関係なときだけ利用するようにしてください。
.Sh 戻り値
.Fa little
が空の文字列のとき、
.Fa big
を返し、
.Fa little
に
.Fa big
がない場合は、NULL を返します。
それ以外のときは、
最初に出現した
.Fa little
の最初の文字へのポインタを返します。
.Sh 例
次の例は、
.Va largestring
の
.Qq Li Bar Baz
部分がポインタ
.Va ptr
にセットされます。
.Bd -literal -offset indent
const char *largestring = "Foo Bar Baz";
const char *smallstring = "Bar";
char *ptr;

ptr = strstr(largestring, smallstring);
.Ed
.Pp
次の例は、ポインタ
.Va ptr
に
.Dv NULL
がセットされます。これは
.Va largestring
の最初の 4 文字だけを検索するためです。
.Bd -literal -offset indent
const char *largestring = "Foo Bar Baz";
const char *smallstring = "Bar";
char *ptr;

ptr = strnstr(largestring, smallstring, 4);
.Ed
.Sh 関連項目
.Xr memchr 3 ,
.Xr strchr 3 ,
.Xr strcspn 3 ,
.Xr strpbrk 3 ,
.Xr strrchr 3 ,
.Xr strsep 3 ,
.Xr strspn 3 ,
.Xr strtok 3
.Sh 規格
.Fn strstr
関数は、
.St -isoC
に適合しています。
