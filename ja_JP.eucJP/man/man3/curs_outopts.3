.\" $FreeBSD$
.TH curs_outopts 3 ""
.SH 名称
\fBclearok\fR, \fBidlok\fR, \fBidcok immedok\fR,
\fBleaveok\fR, \fBsetscrreg\fR, \fBwsetscrreg\fR, \fBscrollok\fR,
\fBnl\fR, \fBnonl\fR - \fBncurses\fR output options
.SH 書式
\fB#include <ncurses.h>\fR

\fBint clearok(WINDOW *win, bool bf);\fR
.br
\fBint idlok(WINDOW *win, bool bf);\fR
.br
\fBvoid idcok(WINDOW *win, bool bf);\fR
.br
\fBvoid immedok(WINDOW *win, bool bf);\fR
.br
\fBint leaveok(WINDOW *win, bool bf);\fR
.br
\fBint setscrreg(int top, int bot);\fR
.br
\fBint wsetscrreg(WINDOW *win, int top, int bot);\fR
.br
\fBint scrollok(WINDOW *win, bool bf);\fR
.br
\fBint nl(void);\fR
.br
\fBint nonl(void);\fR
.br
.SH 解説
このルーチンでは、
\fBncurses\fR
の出力のスタイルを変更するオプションを
設定します。すべてのオプションは、特記しないかぎり、最初は
\fBFALSE\fR
になっています。このオプションをオフに切り替えてから
\fBendwin\fR
を呼び出す必要はありません。

\fBclearok\fR
ルーチンを有効にすると
(\fIbf\fR
を
\fBTRUE\fR
にすると
)
、次にこの
ウィンドウで
\fBwrefresh\fR
を呼び出した場合、画面は完全にクリアされ、画面全体が
最初から再描画されます。画面の内容が不確実であるか、より良い視覚効果を出す
場合に便利です。
\fBclearok\fR
の引数
\fIwin\fR
がグローバル変数
\fBcurscr\fR
である場合、次に任意のウィンドウで
\fBwrefresh\fR
を呼び出すと、画面がクリアされて最初から再描画されます。

\fBidlok\fR
ルーチンを有効にすると
(\fIbf\fR
を
\fBTRUE\fR
にすると
)
、
\fBncurses\fR
は、
端末の行挿入
/
削除機能を備わっているものとして使用します。無効にすると
(\fIbf\fR
を
\fBFALSE\fR
にすると
)
、
\fBncurses\fR
はこの機能をほとんど使用しません。
(
文字の挿入
/
削除機能は常に考慮されます。
)
たとえば画面エディタなど、行の挿入
/
削除が
必要なアプリケーションのみで、このオプションを有効にしてください。行の挿入
/
削除が本当に必要でないアプリケーションでは、行の挿入
/
削除が見た目を害する
傾向にあるので、デフォルトでは無効になっています。行の挿入
/
削除機能が
使用できない場合、
\fBncurses\fR
は、すべての行の変更された部分を再描画します。

\fBidcok\fR
ルーチンを有効にすると
(\fIbf\fR
を
\fBTRUE\fR
にすると
)
、
\fBncurses\fR
は、端末のキャラクタ挿入
/
削除機能を備わっているものとして使用します。デフォルト
では有効になっています。

\fBimmedok\fR
ルーチンを有効にすると
(\fIbf\fR
を
\fBTRUE\fR
にすると
)
、
\fBwaddch
、
wclrtobot
、
wscrl\fR
\fIなど\fRでウィンドウのイメージが変更された場合、
\fBwrefresh\fR
が
自動的に呼び出されます。
\fBwrefresh\fR
が繰り返し呼び出されるので、パフォーマンス
は大幅に低下します。デフォルトでは無効になっています。

通常の場合、ハードウェアカーソルは、リフレッシュされた
ウィンドウカーソルの場所に残ります。
\fBleaveok\fR
オプションでは、更新したときの
場所にカーソルを残せます。カーソルの移動が必要なくなるため、カーソルを
使用しないアプリケーションで便利です。このオプションを有効にすると、可能な
場合はカーソルを非表示にできます。

\fBsetscrreg\fR
ルーチンと
\fBwsetscrreg\fR
ルーチンを使用すると、
アプリケーションプログラマは、ウィンドウでソフトウェアスクローリング領域を
設定できます。
\fItop\fR
と
\fIbot\fR
は、スクローリング領域の上下マージンの行番号です。
(
ウィンドウの最初の行は
0
です。
)
このオプションと
\fBscrollok\fR
を有効にした
場合は、下マージンの行の先へ移動しようとすると、
スクローリング領域のすべての行は
1
行上にスクロールされます。スクロール
されるのは、ウィンドウのテキストのみです。
(VT100
のような、端末の物理的な
スクローリング領域機能の使用とは関係ないことに注意してください。
\fBidlok\fR
を有効にすると、端末にスクローリング領域機能か行の挿入
/
削除機能がある場合は、
出力ルーチンでこれらの機能が使用されることがあります。
)

\fBscrollok\fR
オプションは、最終行での改行アクション、または最終行での
最終キャラクタの入力により、ウィンドウのカーソルがウィンドウか
スクローリング領域の端を越えた場合の対処法を制御します。無効にすると
(\fIbf\fR
を
\fBFALSE\fR
にすると
)
、カーソルは最終行に残ります。有効にすると
(\fIbf\fR
を
\fBTRUE\fR
にすると
)
、
\fBwrefresh\fR
がウィンドウで呼び出され、物理的な端末とウィンドウは
1
行上にスクロールされます。
[
端末で物理的なスクロール効果を出すには、
\fBidlok\fR
も呼び出す必要があることに注意してください。
]

\fBnl\fR
ルーチンと
\fBnonl\fR
ルーチンは、出力時に改行をキャリッジリターンと
ラインフィードに変換するかどうか、および入力時にリターンを改行に
変換するかどうかを制御します。最初は変換が行なわれます。
\fBnonl\fR
で変換を無効にすると、
\fBncurses\fR
はラインフィード機能をより良く使用できるようになり、
カーソルの動きが速くなります。
.SH 戻り値
\fBsetscrreg\fR
と
\fBwsetscrreg\fR
は、問題がないと
\fBOK\fR
を、問題があると
\fBERR\fR
を戻します。整数を返す、その他すべてのルーチンは、常に
\fBOK\fR
を戻します。
.SH バグ
エントリポイント
\fBidcok\fR
、
\fBimmedok\fR
は、
ncurses  1.8.6
ではまだ
実装されていません。
\fIidlok\fR
を設定すると、ウィンドウのスクロール時に予期せぬ結果となります。
.SH 注釈
\fBclearok\fR
、
\fBleaveok\fR
、
\fBscrollok\fR
、
\fBidcok\fR
、
\fBnl\fR
、
\fBnonl\fR
、
\fBsetscrreg\fR
は、マクロである場合があることに注意してください。

\fBimmedok\fR
ルーチンは、端末エミュレータとして使用するウィンドウで
便利です。
.SH 関連項目
\fBncurses\fR(3), \fBcurs_addch\fR(3), \fBcurs_clear\fR(3),
\fBcurs_initscr\fR(3), \fBcurs_scroll\fR(3), \fBcurs_refresh\fR(3)
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:

