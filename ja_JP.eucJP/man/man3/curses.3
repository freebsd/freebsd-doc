.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)curses.3	8.1 (Berkeley) 6/4/93
.\"
.\" $FreeBSD$
.Dd June 4, 1993
.Dt CURSES 3
.Os BSD 4
.Sh 名称
.Nm curses
.Nd 「最適」なカーソル移動のある画面関数
.Sh 書式
.Nm cc
.Op Ar flags
.Ar files
.Fl lcurses ltermcap
.Op Ar libraries
.Sh 解説
これらのルーチンは、合理的な最適化で画面を更新する方法をユーザに与えます。
これらのルーチンは現在の画面のイメージを保持し、ユーザは新しい画面の
イメージをセットアップします。次に、
.Fn refresh
が、現在の画面が新しい
画面のように表示されるようにルーチンに指示します。ルーチンを
初期化するためには、ウィンドウと画面を処理する他のルーチンが使用される
前に、ルーチン
.Fn initscr
を呼び出す必要があります。終了する前に、ルーチン
.Fn endwin
を呼び出す必要があります。
.Pp
.Sh 関連項目
.Xr ioctl 2 ,
.Xr getenv 3 ,
.Xr tty 4 ,
.Xr termcap 5
.Rs
.%T Screen Updating and Cursor Movement Optimization: A Library Package
.%A Ken Arnold
.Re
.Sh 作者
.An Ken Arnold
.Sh 関数
.Bl -column "subwin(win,lines,cols,begin_y,begin_x)   "
.It addch(ch)	キャラクタを
.Em stdscr
に追加する
.It addstr(str)	ストリングを
.Em stdscr
に追加する
.It box(win,vert,hor)	ウィンドウの回りにボックスを作図する
.It cbreak()	cbreak モードを設定する
.It clear()	stdscr をクリアする
.It clearok(scr,boolf)	scr 用のクリアフラグを設定する
.It clrtobot()	stdscr 上で下端へとクリアする
.It clrtoeol()	stdscr 上で行の末尾へとクリアする
.It delch()	1 文字を削除する
.It deleteln()	1 行を削除する
.It delwin(win)	win を削除する
.It echo()	エコーモードを設定する
.It endwin()	ウィンドウモードを終了する
.It erase()	stdscr を消去する
.It flusok(win,boolf)	win についてフラッシュオンリフレッシュ
(flush-on-refresh) フラグを設定する
.It getch()	stdscr によって 1 キャラクタを得る
.It getcap(name)	端末機能
.Em name
を得る
.It getstr(str)	stdscr によってストリングを得る
.It gettmode()	tty モードを得る
.It getyx(win,y,x)	win 用に (y,x) 座標を得る
.It inch()	現在の (y,x) 座標で char を得る
.It initscr()	画面を初期化する
.It insch(c)	1 キャラクタを挿入する
.It insertln()	1 行を挿入する
.It leaveok(win,boolf)	win 用に終了 (leave) フラグを設定する
.It longname(termbuf,name)	termbuf から長い名前を得る
.It move(y,x)	stdscr の (y,x) に移動する
.It mvcur(lasty,lastx,newy,newx)	実際にカーソルを移動する
.It newwin(lines,cols,begin_y,begin_x)	新しいウィンドウを作成する
.It nl()	改行マッピングを設定する
.It nocbreak()	cbreak モードを設定解除する
.It noecho()	エコーモードを設定解除する
.It nonl()	改行マッピングを設定解除する
.It noraw()	未加工 (raw) の設定解除モード
.It overlay(win1,win2)	win1 を
.Em win2
の上にオーバレイする
.It overwrite(win1,win2)	win1 を
.Em win2
の一番上に上書きする
.It printw(fmt,arg1,arg2,...)	stdscr 上での printf
.It raw()	未加工 (raw) モードを設定する
.It refresh()	現在の画面が
.Em stdscr
のように表示されるようにする
.It resetty()	保存された値に tty フラグをリセットする
.It savetty()	保存された現在の tty フラグ
.It scanw(fmt,arg1,arg2,...)	stdscr による scanf
.It scroll(win)	win を 1 行だけスクロールする
.It scrollok(win,boolf)	win 用にスクロールフラグを設定する
.It setterm(name)	名前用の term 変数を設定する
.It standend()	standout モードを終了する
.It standout()	standout モードを開始する
.It subwin(win,lines,cols,begin_y,begin_x)	win のサブウィンドウを作成する
.It touchline(win,y,sx,ex)	win で変更されたように行
.Em y
.Em sx
から
.Em sy
をマークする
.It touchoverlap(win1,win2)	win2 上の
.Em win1
のオーバラップを変更されたようにマークする
.It touchwin(win)	win のすべてを変更する
.It unctrl(ch)	ch  の印刷可能なバージョン
.It waddch(win,ch)	win にキャラクタを追加する
.It waddstr(win,str)	win にストリングを追加する
.It wclear(win)	win をクリアする
.It wclrtobot(win)	win の下端までクリアする
.It wclrtoeol(win)	win の最後の行までクリアする
.It wdelch(win,c)	win からキャラクタを削除する
.It wdeleteln(win)	win から行を削除する
.It werase(win)	win を抹消する
.It wgetch(win)	win によって 1 キャラクタを得る
.It wgetstr(win,str)	win によって 1 ストリングを得る
.It winch(win)	win 内の現在の (y,x) にあるキャラクタを得る
.It winsch(win,c)	win にキャラクタを挿入する
.It winsertln(win)	win に行を挿入する
.It wmove(win,y,x)	win に現在の (y,x) 座標を設定する
.It wprintw(win,fmt,arg1,arg2,...)	win についての printf
.It wrefresh()	win 画面が
.Em win
のように表示されるようにする
.It wscanw(win,fmt,arg1,arg2,...)	win による scanf
.It wstandend(win)	win での standout モードを終了する
.It wstandout(win)	win での standout モードを開始する
.El
.Sh 歴史
.Nm curses
パッケージは
.Bx 4.0
で現れました。
