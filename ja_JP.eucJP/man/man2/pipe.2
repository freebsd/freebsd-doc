.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)pipe.2	8.1 (Berkeley) 6/4/93
.\" %FreeBSD: src/lib/libc/sys/pipe.2,v 1.21 2004/07/03 22:30:09 ru Exp %
.\"
.\" $FreeBSD$
.Dd June 4, 1993
.Dt PIPE 2
.Os
.Sh 名称
.Nm pipe
.Nd プロセス間通信のための記述子のペアを作成する
.Sh ライブラリ
.Lb libc
.Sh 書式
.In unistd.h
.Ft int
.Fn pipe "int *fildes"
.Sh 解説
.Fn pipe
システムコールは
双方向のデータフローを可能とするオブジェクトである
.Em pipe
を作成し、ペアのファイル記述子を割り当てます。
.Pp
慣習により、通常は 1 番めの記述子がパイプの
.Em 読取り側
として使用され、2 番めの記述子が
.Em 書込み側
として使用されます。
ですので、
.Fa fildes[1]
に書き込まれたデータが
.Fa fildes[0]
に現れます (すなわち、
.Fa fildes[0]
から読み取れます)。
これを使えば 1 つのプログラムの出力を別のプログラムに送信できます。
送信側の標準出力をパイプの書込み側としてセットアップし、
受信側の標準入力をパイプの読取り側としてセットアップしてください。
パイプ自体は、すべての対応する記述子がクローズされるまで持続します。
.Pp
一端が閉じているパイプは
.Em widowed
(相手を失った) と見なされます。
このようなパイプに書込みをすると、書込みプロセスは
.Dv SIGPIPE
シグナルを受信します。
読取り側にファイルの終了を伝える方法は、
書込み側のパイプをクローズするしかありません。
読取り側がバッファに入っているデータを使い切った後、相手を失ったパイプを
読み取ると 0 カウントが返されます。
.Pp
このパイプの実装における双方向という性質は、
古いシステムと互換性がありません。
ですので、パイプを一方向にしか使用しないときには、
従来の方法で端点を使用するこの慣習に従うことをお勧めします。
.Sh 戻り値
.Rv -std pipe
.Sh エラー
.Fn pipe
システムコールは次の場合に失敗します。
.Bl -tag -width Er
.It Bq Er EMFILE
アクティブな記述子が多すぎます。
.It Bq Er ENFILE
システムファイルテーブルが満杯です。
.It Bq Er EFAULT
.Fa fildes
バッファがプロセスのアドレス空間の不正な領域にあります。
.El
.Sh 関連項目
.Xr sh 1 ,
.Xr fork 2 ,
.Xr read 2 ,
.Xr socketpair 2 ,
.Xr write 2
.Sh 歴史
.Fn pipe
関数は
.At v3
で登場しました。
.Pp
双方向パイプははじめて
.At V.4
で使用されました。
