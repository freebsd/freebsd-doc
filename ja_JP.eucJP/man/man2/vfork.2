.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)vfork.2	8.1 (Berkeley) 6/4/93
.\" %FreeBSD: src/lib/libc/sys/vfork.2,v 1.24 2004/07/04 20:55:48 ru Exp %
.\"
.\" $FreeBSD$
.Dd June 4, 1993
.Dt VFORK 2
.Os
.Sh 名称
.Nm vfork
.Nd 効率的な方法で仮想メモリに新しいプロセスを生成
.Sh ライブラリ
.Lb libc
.Sh 書式
.In unistd.h
.Ft pid_t
.Fn vfork void
.Sh 解説
.Fn vfork
システムコールは、古いプロセスのアドレス空間を完全にコピーせずに、
新しいプロセスを作成できます。
ページングする環境では、古いプロセスのアドレス空間を完全にコピーすることは、
非常に非効率的です。
.Xr fork 2
する目的が、
.Xr execve 2
のための新しいシステムコンテキストの作成である場合に有効です。
.Fn vfork
システムコールは、
.Xr execve 2
を呼び出すか、終了する
.Pf ( Xr _exit 2
を呼び出すか異常終了する) まで子が親のメモリと制御スレッドを借りるという点で、
.Xr fork 2
と異なります。
親プロセスは、子がリソースを使用している間停止されます。
.Pp
.Fn vfork
システムコールは、0 を子のコンテキストに、そして (後に) 子の pid を
親のコンテキストに戻します。
.Pp
通常の場合、
.Fn vfork
システムコールは
.Xr fork 2
のように使用できます。
しかし、
.Fn vfork
を呼び出したプロシージャから子のコンテキストで動作している間に
動作して戻ることはありません。
最終的に
.Fn vfork
から戻ると、存在しないスタックフレームに戻るからです。
.Xr execve 2
を実行できない場合は、
.Xr exit 3
ではなく、
.Xr _exit 2
を呼び出してください。
.Xr exit 3
は標準入出力チャネルをフラッシュして閉じるため、
親プロセスの標準入出力データ構造体を壊してしまいます
.Pf ( Xr fork 2
でも、バッファに入っているデータが 2 回フラッシュされるので、
.Xr exit 3
を呼び出さないでください)。
.Sh 関連項目
.Xr execve 2 ,
.Xr _exit 2 ,
.Xr fork 2 ,
.Xr rfork 2 ,
.Xr sigvec 2 ,
.Xr wait 2 ,
.Xr exit 3
.Sh 戻り値
.Xr fork 2
と同じです。
.Sh バグ
このシステムコールは、適切なシステム共有メカニズムが実現したときに
削除されます。
削除された場合は、
.Xr fork 2
と同義になるので、
.Fn vfork
のメモリ共有の現実装には依存しないでください。
.Pp
デッドロックを避けるため、
.Fn vfork
の途中で子になるプロセスには、
.Dv SIGTTOU
シグナルや
.Dv SIGTTIN
シグナルが送信されません。
その代わりに出力、または、
.Xr ioctl 2
呼び出しが許可され、入力しようとすると EOF となります。
.Sh 歴史
.Fn vfork
システムコールは、
.Bx 2.9
で登場しました。
