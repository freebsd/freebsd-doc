.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)jot.1	8.1 (Berkeley) 6/6/93
.\" %FreeBSD: src/usr.bin/jot/jot.1,v 1.15 2004/07/02 22:22:26 ru Exp %
.\"
.\" $FreeBSD$
.\"
.Dd June 6, 1993
.Dt JOT 1
.Os
.Sh 名称
.Nm jot
.Nd 連続ないしは、乱数データを出力する
.Sh 書式
.Nm
.Op Fl cnr
.Op Fl b Ar word
.Op Fl w Ar word
.Op Fl s Ar string
.Op Fl p Ar precision
.Op Ar reps Op Ar begin Op Ar end Op Ar s
.Sh 解説
.Nm
ユーティリティは、
増加・減少・ランダム・冗長データを通常は数字で、一行毎に出力します。
.Pp
以下のようなオプションが利用できます。
.Bl -tag -width indent
.It Fl r
デフォルトの連続したデータの代わりに、乱数を作成します。
.It Fl b Ar word
.Ar word
を、繰り返し出力するだけです。
.It Fl w Ar word
.Ar word
のあとに、生成されたデータを付け加え、出力します。
8 進・16 進・指数・ASCII・0 で埋めた表示・右詰め表現などは、適切な
.Xr printf 3
記法を
.Ar word
中で指定することで、可能です。この場合、データは追加されるというよりも、
挿入されると考えてください。
.It Fl c
これは、
.Fl w Ar %c
の省略形です。
.It Fl s Ar string
.Ar string
で分けられたデータを出力します。
普通は、改行文字がデータを分割します。
.It Fl n
通常追加される、最後の改行を出力しません。
.It Fl p Ar precision
整数
.Ar precision
で指定されたデータの文字数もしくは桁数だけ表示します。
.Fl p
がない場合、精度値は
.Ar begin
と
.Ar end
の引数の精度の大きい方です。
.Fl p
オプションは、
.Fl w
に続く
.Xr printf 3
記法が指定されている時には、上書きされます。
.El
.Pp
最後の 4 つの引数はそれぞれデータ数・下界・上界と、幅の大きさまたは、乱数のため
の種です。
少なくともどれか一つが指定されなければなりませんが、その他の 3 つは引数として \
- を与えると、省略できます。
これら 3 つの引数を指定すれば、4 つ目が決まります。
4 つとも指定されて、
.Ar reps
の与えられた値と、計算された値とが相反する場合、小さい方を用います。
指定された数が 3 つより少ない場合には、
.Ar s
を除いて、
デフォルト値を左から右へ割り当てます。
.Ar s
は、
.Ar begin
と
.Ar end
が共に指定された場合以外、デフォルト値が設定されます。
.Pp
4 つの引数に対するデフォルトは、乱数が要求された時を除いて、
それぞれ、100, 1, 100, 1です。
乱数の種
.Ar s
はランダムに選択されます。
.Ar reps
引数は、符号無し整数であると想定されています。
0 が与えられた場合は、無限回数となります。
.Ar begin
と
.Ar end
は、実数、もしくは文字の場合は対応する
.Tn ASCII
値としてあたえられます。
最後の引数は、実数でなければなりません。
.Pp
乱数値は、
.Xr random 3
を使って得られます。
名前
.Nm
は、
APL 中の関数
.Nm iota
の部分から来ています。
.Sh 使用例
コマンド
.Dl jot 21 -1 1.00
.Pp
は、\-1 から 1 へ増加する等間隔の数字を 21 個出力します。
.Tn ASCII
文字集合は、以下のようにします。
.Dl jot -c 128 0
.Pp
xaa から xaz までの文字列は以下のようにします。
.Dl jot -w xa%c 26 a
.Pp
20 個のランダムな 8 文字は以下のようにして作成します。
.Dl "jot -r -c 160 a z | rs -g 0 8"
.Pp
無限に、
.Em yes
を出したい場合は、以下のようにします。
.Dl jot -b yes 0
.Pp
.Xr ed 1
の置換コマンドを、30 回、2, 7, 12 行等のように (5 行毎に ) 適用する場合の
解答例は以下のようになります。
.\"(訳中)(5 行毎に )は訳者が挿入しました。
.\" 2.2.1R 対象(1997/05/06) Takeshi MUTOH <mutoh@info.nara-k.ac.jp>
.Dl jot -w %ds/old/new/ 30 2 - 5
.Pp
だぶりのある 9, 9, 8, 8, 7 の様な列は、
以下のように適切にステップの大きさを設定することで、実現できます。
.Dl jot - 9 0 -.5
.Pp
ファイルが正確に 1024 バイトであるように作成するには、
.Dl jot -b x 512 > block
.Pp
最後に、タブを 4 つのスペースに設定し、10 カラム目からはじまって、
132 カラム目で終るようにするには、以下のようにします。
.Dl expand -`jot -s, - 10 132 4`
.Pp
80 文字以上の行を全て表示するには、以下を使ってください。
.Dl grep `jot -s \&"\&" -b \&. 80`
.Sh 診断
.Ex -std
次の診断メッセージは、特別な解説を要します:
.Bl -diag
.It "illegal or unsupported format '%s'"
.Xr printf 3
用に要求された変換書式指示子は、
.Dl %[#][ ][{+,-}][0-9]*[.[0-9]*]?
の書式ではありませんでした。
ここで
.Dq ?\&
は
.Dl [l]{d,i,o,u,x}
または
.Dl {c,e,f,g,D,E,G,O,U,X}
のいずれかひとつです。
.It "range error in conversion"
表示すべき値は、要求された出力書式に関連付けられたデータタイプの
範囲外の結果になりました。
.It "too many conversions"
1 個しか許されないところを、複数の変換書式指示子が指定されました。
.El
.Sh 関連項目
.Xr ed 1 ,
.Xr expand 1 ,
.Xr rs 1 ,
.Xr yes 1 ,
.Xr printf 3 ,
.Xr random 3
