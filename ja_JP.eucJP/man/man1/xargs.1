.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" John B. Roll Jr. and the Institute of Electrical and Electronics
.\" Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)xargs.1	8.1 (Berkeley) 6/6/93
.\" %FreeBSD: src/usr.bin/xargs/xargs.1,v 1.32 2004/08/02 03:07:42 tjr Exp %
.\" $xMach: xargs.1,v 1.2 2002/02/23 05:23:37 tim Exp $
.\"
.\" $FreeBSD$
.\"
.Dd August 2, 2004
.Dt XARGS 1
.Os
.Sh 名称
.Nm xargs
.Nd "標準入力から引数を読み、コマンドを実行する"
.Sh 書式
.Nm
.Op Fl 0opt
.Op Fl E Ar eofstr
.Oo
.Fl I Ar replstr
.Op Fl R Ar replacements
.Oc
.Op Fl J Ar replstr
.Op Fl L Ar number
.Oo
.Fl n Ar number
.Op Fl x
.Oc
.Op Fl P Ar maxjobs
.Op Fl s Ar size
.Op Ar utility Op Ar argument ...
.Sh 解説
.Nm
コマンドは空白、タブ、改行、EOF (end-of-file) で区切られた文字列を標準入力
から読み込み、
.Ar utility
にその文字列をつけて実行します。
.Pp
コマンドラインで指定された引数は、起動のたびに
.Ar utility
に渡されます。
このあとに続く引数は
.Nm
の標準入力から得られます。
指定されたユーティリティ
は標準入力を読み切るまで繰り返し実行されます。
.Pp
空白、タブ、改行はシングルクォート
(``\ '\ '')
やダブルクォート (``"'') やバックスラッシュ (``\e'')
を使って埋め込むことができます。
シングルクォートは次のシングルクォートにマッチするまで、
改行とシングルクォートを除く全ての文字をエスケープします。
ダブルクォートは次のダブルクォートにマッチするまで
改行とダブルクォートを除く全ての文字をエスケープします。
改行を含む全ての文字はバックスラッシュでエスケープされます。
.Pp
オプションは以下のものがあります:
.Bl -tag -width indent
.It Fl 0
空白と改行ではなくヌル文字 (``\\0'') を区切りとするように
.Nm
に指示します。
.Xr find 1
の
.Fl print0
とともに用います。
.It Fl E Ar eofstr
.Ar eofstr
を論理的な EOF マーカとして使用します。
.It Fl I Ar replstr
.Ar utility
への引数の中に
.Ar replstr
が 1 回以上最大
.Ar replacements
回まで (あるいは、
.Fl R
フラグが指定されていない場合は 5 回まで)
出現したとき、出現した部分を入力行の内容全体に置換しながら
.Ar utility
を各入力行に対して実行します。
置換が終わったあとの結果の引数は、255バイトを超えることは許されません。
この制限は、作成される
.Ar utility
への引数に
.Ar replstr
を含んだ引数を 255 バイトになるまでできる限り連結することで
実装されています。
この 255 バイトの制限は、
.Ar replstr
を含まない
.Ar utility
への引数には適用されず、さらに、
.Ar utility
そのものは置換の対象にはなりません。
このオプションは、
.Fl x
オプションを暗黙のうちに実行します。
.It Fl J Ar replstr
本オプションが指定されると、
.Nm
は、標準入力から読み込んだデータを他のすべての引数の後に追加する代りに、
このデータを最初の
.Ar replstr
と置き換えます。
本オプションは、入力から読み込む引数の数
.Pq Fl n
や、
.Nm
が生成するコマンドの大きさ
.Pq Fl s
には影響しません。
本オプションは、引数が置かれる場所を
実行されるコマンドの中に移動するだけです。
.Ar replstr
は、
.Nm
にとって明確な引数
.Ar argument
である必要があります。
これは、例えば引用された文字列の中にある場合には、解釈されません。
さらに、最初の
.Ar replstr
のみが置き換えられます。
例えば、次のコマンドは、
現在のディレクトリにある大文字で開始するファイルとディレクトリを、
.Pa destdir
へコピーします:
.Pp
.Dl /bin/ls -1d [A-Z]* | xargs -J % cp -rp % destdir
.Pp
.It Fl L Ar number
.Ar number
行読み込むたびに
.Ar utility
を実行します。
EOF に到達したとき
.Ar number
行よりも少ない行数しか読み込んでいない場合は、
読み込み終わっている行を使って
.Ar utility
を呼びだします。
.It Fl n Ar number
各
.Ar utility
実行時に標準入力から拾う引数の最大数を設定します。
もし計算されたバイト数が、指定された
.Ar size
を越えた場合 (
.Fl s
オプション参照) や
.Ar  utility
の最後の実行時に残った引数が
.Ar number
個以下の場合、
.Ar utility
は、標準入力から読み込んだ引数のうち
.Ar number
より少数しか使いません。
.Ar number
の現在のデフォルト値は 5000 です。
.It Fl o
子プロセスによるコマンド実行前に、標準入力を
.Pa /dev/tty
として再オープンします。
.Nm
に対話的なアプリケーションを実行させたい場合に有用です。
.It Fl P Ar maxprocs
並列モード。
一度に最大
.Ar maxprocs
まで
.Ar utility
を実行させます。
.It Fl p
実行される予定のコマンドを表示し、実行すべきかどうかをユーザに
尋ねます。肯定の応答、つまり POSIX ロケールでは
.Ql y
を返すと、表示したコマンドが実行され、それ以外の応答を返すと
コマンドはスキップされます。
プロセスが端末に接続されていない場合は、どのコマンドも実行される
ことはありません。
.It Fl R Ar replacements
.Fl I
オプションで置換を行う引数の最大数を指定します。
.Ar replacements
が負の場合、置換対象の引数の数は無制限です。
.It Fl s Ar size
.Ar utility
に渡すコマンドラインの最大バイト数をセットします。
.Ar utility
名の長さ、
.Ar utility
に渡される引数の長さの和 (終端の
.Dv NULL
も含む)、そして現在の環境がこの値以下になります。
.Ar size
の現在のデフォルト値は
.Dv ARG_MAX
- 4096 です。
.It Fl t
実行されるコマンドをその実行の直前に標準エラー出力にエコーします。
.It Fl x
引数の個数が指定した (もしくはデフォルトの) コマンドライン長と
合わない場合、
.Nm
を強制終了します。
.El
.Pp
もし
.Ar utility
が指定されていなければ、
.Xr echo 1
が使われます。
.Pp
.Ar utility
が標準入力を読むプログラムの場合は予期せぬ動作をするかもしれません。
.Pp
コマンドラインを集められなかったときや
.Ar utility
を起動できなかったとき、
.Ar utility
がシグナルで終了したとき、もしくは
.Ar utility
が戻り値 255 で終了したときは、
.Nm
は (それ以上の読み込みはせずに) ただちに終了します。
.Sh 診断
.Nm
は、何もエラーが起こらなければ、戻り値 0 で終了します。
.Ar utility
が見つからなかった場合は、
戻り値 127 で終了します。
.Ar utility
が実行できなかった場合は
戻り値 126 で終了します。その他のエラーでは戻り値 1 で終了します。
.Sh 関連項目
.Xr echo 1 ,
.Xr find 1 ,
.Xr execvp 3
.Sh 規格
.Nm
ユーティリティは
.St -p1003.2
互換です。
.Fl J , o , P , R
オプションは非標準の
.Fx
拡張であり、他のオペレーティングシステムでは利用できないかもしれません。
.Sh 歴史
.Nm
コマンドは PWB UNIX で登場しました。
.Sh バグ
引数の数や環境の大きさが増加するような他のコマンドの起動を
.Ar utility
が試みる場合、
.Xr execvp 3
が
.Er E2BIG
で失敗する危険があります。
.Pp
.Nm
ユーティリティは、
.Fl I
と
.Fl J
オプションで文字列の比較を行う時に、マルチバイト文字を考慮しません。
このため、いくつかのロケールでは誤った結果を生ずることがあります。
