.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)rs.1	8.2 (Berkeley) 12/30/93
.\" %FreeBSD: src/usr.bin/rs/rs.1,v 1.11 2004/07/30 00:10:52 tjr Exp %
.\" $FreeBSD$
.\"
.Dd July 30, 2004
.Dt RS 1
.Os
.Sh 名称
.Nm rs
.Nd データ配列の整形
.Sh 書式
.Nm
.Oo
.Fl Oo Cm csCS Oc Ns Op Ar x
.Oo Cm kKgGw Oc Ns Op Ar N
.Cm tTeEnyjhHmz
.Oc
.Op Ar rows Op Ar cols
.Sh 解説
.Nm
ユーティリティは標準入力を読み込み、
その各行が、配列を空白で区切った行ベクトルであるとして解釈し、
その配列をオプションに従って変換し、
結果を標準出力に書き出します。
引数を指定しない場合、
.Nm
は、端末で見やすいように、入力をカラム形式 (columnar format) に変換します。
.Pp
入力配列の形状は、その行数と第 1 行目のカラム数から推測します。
それが不都合なら、
.Fl k
オプションによって最初の数行を読み飛ばし、
より好都合な行を用いることもできます。
この他のオプションは、入力カラムの解釈を変更するものです。
.Pp
出力配列の形状は引数
.Ar rows
および
.Ar cols
の指定により変化します。これらの引数は正の整数です。
それらの一方だけが正の整数である場合、
.Nm
はデータ全体と整合するもう一方の値を計算します。
必要なら、オプションの説明に述べる方法で不足したデータが追加され、
余剰データが削除されます。
行と列の転置など、出力カラム形式を変更するオプションもあります。
.Pp
オプションを以下に示します。
.Bl -tag -width indent
.It Fl c Ns Ar x
入力カラムの区切りを単一文字
.Ar x
とします。
.Ar x
を省略すると `^I' であると見なされます。
.It Fl s Ns Ar x
.Fl c
と似ていますが、
.Ar x
中の最長文字列が区切りとされます。
.It Fl C Ns Ar x
出力カラムの区切りを単一文字
.Ar x
とします。
.Ar x
を省略すると `^I' であると見なされます。
.It Fl S Ns Ar x
.Fl C
と似ていますが、文字列
.Ar x
が区切り文字となります。
.It Fl t
入力配列の列データを用いて出力配列の行を埋めます。
つまり、
.Ar rows
および
.Ar cols
指定を優先しつつ、入力を転置します。
.It Fl T
.Ar rows
および
.Ar cols
指定を無視し、入力の純粋な転置結果を出力します。
.It Fl k Ns Ar N
入力の最初の
.Ar N
行を無視します。
.It Fl K Ns Ar N
.Fl k
と似ていますが、無視した各行を表示します。
.It Fl g Ns Ar N
溝 (gutter) の幅 (カラム間のスペース) を
.Ar N
とします。
通常は 2 です。
.It Fl G Ns Ar N
溝 (gutter) の幅 (カラム間のスペース) として、
最大カラム幅の
.Ar N
パーセント増しの値を用います。
.It Fl e
入力の各行を単一の配列エントリとみなします。
.It Fl n
第 1 行目より少ないエントリしかない行があれば、
その行にヌルエントリを追加して埋め合わせます。
通常は、エントリの不足分は入力の次の行からエントリをとって埋め合わせます。
.It Fl y
出力の寸法を充たすだけのエントリがない場合、
入力を最初から繰り返し用いて出力を埋め合わせます。
通常は、出力は空白で埋め合わされます。
.It Fl h
入力配列の形状を表示するだけで、処理は何も行ないません。
形状とは単に、行数と、第 1 行目のエントリ数のことです。
.It Fl H
.Fl h
と似ていますが、各行の長さも表示します。
.It Fl j
カラム内でエントリを右揃えにします。
.It Fl w Ns Ar N
画面表示幅を正整数
.Ar N
の値に設定します。
通常は 80 です。
.It Fl m
出力配列の末尾から余分な区切り文字を削除しません。
.It Fl z
カラム幅を最も大きなエントリにあわせます。
.El
.Pp
引数がない場合、
.Nm
は入力を転置し、
無視しない最初の行が画面表示幅を越えていなければ、
入力の各行毎に 1 つの配列エントリがあると仮定します。
数値引数をとるオプションで数値指定が省略されていると、
別途指示がない限り数値は 0 とみなされます。
.Sh 使用例
.Nm
ユーティリティはいくつかのプログラム (例えば、
.Xr spell 1 ,
.Xr du 1 ,
.Xr file 1 ,
.Xr look 1 ,
.Xr nm 1 ,
.Xr who 1 ,
.Xr wc 1 )
のストリーム出力を、好都合な「ウィンドウ」形式に変換する
フィルタとして利用できます。例えば
.Bd -literal -offset indent
who | rs
.Ed
.Pp
これと同様な出力を行なうほとんどのプログラムに対して
.Nm
は十分な機能を提供しますが、
.Xr ls 1
には既にこの機能が組み込まれています。
.Pp
ストリーム入力をベクトルに変換して出力し、それをまた元に戻すには、
次のようにします。
.Bd -literal -offset indent
rs 1 0 | rs 0 1
.Ed
.Pp
.\" ×がうまく表示されないので \[mu] 使用
各要素が 1 から 100 までの乱数から成る 10 \[mu] 10 行列とその転置行列を
生成するには、以下のようにします。
.Bd -literal -offset indent
jot \-r 100 | rs 10 10 | tee array | rs \-T > tarray
.Ed
.Pp
.Xr vi 1
エディタにおいて、行あたり 9 要素の複数行ベクトルからなるファイルに対して
挿入や削除を行ない、
その後 9 カラム形式に整形するには、次のようにします。
.Bd -literal -offset indent
:1,$!rs 0 9
.Ed
.Pp
最後に、
あるデータベースを 4 行ずつのフィールドの最初の行でソートしたいなら、
以下のようにしてみるとよいでしょう。
.Bd -literal -offset indent
rs \-eC 0 4 | sort | rs \-c 0 1
.Ed
.Sh 関連項目
.Xr jot 1 ,
.Xr pr 1 ,
.Xr sort 1 ,
.Xr vi 1
.Sh バグ
.Bl -item
.It
2 次元配列しか扱えません。
.It
現在のアルゴリズムはファイル全体をメモリに読み込むため、
メモリに入りきらないファイルは整形できません。
.It
文字位置によってフィールドを定義することは、まだできません。
.It
カラムを並べ換えることも、まだ不可能です。
.It
オプションが多すぎます。
.It
マルチバイト文字は認識されません。
.El
