.\"/* Copyright 1988,1990,1993 by Paul Vixie
.\" * All rights reserved
.\" *
.\" * Distribute freely, except: don't remove my name from the source or
.\" * documentation (don't take credit for my work), mark your changes (don't
.\" * get me blamed for your possible bugs), don't alter or remove this
.\" * notice.  May be sold if buildable source is provided to buyer.  No
.\" * warrantee of any kind, express or implied, is included with this
.\" * software; use at your own risk, responsibility for damages (if any) to
.\" * anyone resulting from the use of this software rests entirely with the
.\" * user.
.\" *
.\" * Send bug reports, bug fixes, enhancements, requests, flames, etc., and
.\" * I'll try to keep a version up to date.  I can be reached as follows:
.\" * Paul Vixie          <paul@vix.com>          uunet!decwrl!vixie!paul
.\" */
.\"
.\" %FreeBSD: src/usr.sbin/cron/cron/cron.8,v 1.22 2004/07/02 23:12:40 ru Exp %
.\"
.\" $FreeBSD$
.\"
.Dd December 20, 1993
.Dt CRON 8
.Os
.Sh 名称
.Nm cron
.Nd 定期的にコマンドを実行するデーモン (Vixie Cron)
.Sh 書式
.Nm
.Op Fl j Ar jitter
.Op Fl J Ar rootjitter
.Op Fl s
.Op Fl o
.Op Fl x Ar debugflag Ns Op , Ns Ar ...
.Sh 解説
.Nm
ユーティリティは、通常は
.Pa /etc/rc
もしくは
.Pa /etc/rc.local
から起動されます。このコマンドは実行するとすぐに返ってくるので、起動時に
`&' をつける必要はありません。
.Pp
.Nm
ユーティリティは、
.Pa /var/cron/tabs
ディレクトリの下から
.Pa /etc/passwd
内のアカウント名と同じ名前の crontab ファイルを探し、見つかったファイルを
メモリに読み込みます。
.Nm
ユーティリティは、別のフォーマットの
.Pa /etc/crontab
.Pf ( Xr crontab 5
を参照してください)
も調べます。
このあと、
.Nm
ユーティリティは 1 分おきに目覚めて
読み込んでいるすべての crontab ファイルを調べ、各コマンドをその時刻に
実行させるべきかどうかを調べます。
コマンドを実行する場合には、出力がメールで
crontab ファイルの所有者 (もしくは crontab ファイル内の環境変数
.Ev MAILTO
で指定されたユーザ) に送られます。
.Pp
さらに、
.Nm
は 1 分おきにスプールディレクトリの最終更新時刻
.Pf ( Pa /etc/crontab
の最終更新時刻も ) が変わっているかどうかを調べます。
もし変化があれば、
.Nm
は crontab ファイルすべての最終更新時刻を調べ、
変更のあったものを読み直します。このため、
crontab ファイルを変更したときに
.Nm
をリスタートさせる必要はありません。
.Xr crontab 1
コマンドが crontab
ファイルを変更したときにスプールディレクトリの最終更新時刻も更新されることに
注意して下さい。
.Pp
使用可能なオプションは次の通りです:
.Bl -tag -width indent
.It Fl j Ar jitter
時間変動を有効にします。
コマンドを実行する前に、
.Nm
は 0 から
.Ar jitter
の範囲のランダムな秒数だけスリープします。
これはスーパユーザのジョブには影響しません
.Pf ( Fl J
を参照して下さい)。
.Ar jitter
の値は 0 以上、60 以下でなければなりません。
デフォルトは 0 で、その場合、実質的に時間変動は無効になります。
.Pp
このオプションは、例えば、各時間の最初の分の始めなど、
多くのジョブが一度に開始する瞬間にシステム負荷が急激に増えるのを
なだらかにするのに役立つでしょう。
.It Fl J Ar rootjitter
スーパユーザのジョブに対して時間変動を有効にします。
スーパユーザが実行するジョブにだけ影響する点を除けば、
.Fl j
と同じです。
.It Fl s
ローカルタイムゾーンの GMT との差が変わる場合を、特別に扱います。
例えば、標準時と夏時間との間での移行がこれに該当します。
.Pp
GMT との差が変わる期間でも、ジョブは直観通り実行されます。
すなわち、
無くなる期間 (例えば標準時から夏時間への移行) か
繰り返される期間 (例えばその逆の移行) にジョブが該当する場合、
次の 2 つの方法のいずれかで扱われます:
.Pp
第 1 の場合は、
無くなるまたは繰り返される期間と重なる期間内にある、毎時実行の
ジョブについてのものです。
言い換えれば、GMT との差の変更直前の 1 時間以内
にそのジョブが実行されていた場合
(かつ cron が再起動されず、
.Xr crontab 5
がその後変更されない場合) か、
変更後の 1 時間に実行されていたであろう場合です。
これらは、いつも通りに動作します。
すなわち、無くなる時間を飛ばしますし、増えた時間にも実行されます。
.Pp
第 2 の場合は、より低い頻度で実行されるジョブについてのものです。
それらは、正確に 1 度だけ実行されます。
飛ばされたり 2 度実行されたりしません
(ただし、cron が再起動されたり、ユーザの
.Xr crontab 5
が期間中に変更される場合は例外です)。
GMT との差の変更のため、ある期間が無くなってしまう場合、
古いタイムゾーンにおいて実行されたであろう時刻と絶対的に同じ時刻において、
そのようなジョブは実行されます。
例えば、ちょうど 1 時間が無くなる場合、
ジョブが実行される時点は、
次の 1 時間の中で、
.Xr crontab 5
で指定される最初の分になります。
.It Fl o
ローカルタイムゾーンの GMT との差が変わる場合を、特別に扱いません。
古い (デフォルトの) 動作と互換です。
.Fl o
と
.Fl s
の両方のオプションが指定された場合、最後に指定されたオプションが有効です。
.It Fl x Ar debugflag Ns Op , Ns Ar ...
標準出力へのデバッグ情報の書き込みを有効にします。
次に示す 1 個以上の
.Ar debugflag
を、コンマで区切って、指定することが必要です:
.Pp
.Bl -tag -width ".Cm proc" -compact
.It Cm bit
現在使用されていません。
.It Cm ext
他のデバッグフラグをより冗長にします。
.It Cm load
crontab ファイルを読み取る時に冗長になります。
.It Cm misc
様々な 1 回限りのイベントに関して冗長になります。
.It Cm pars
個々の crontab 行の構文解析に関して冗長になります。
.It Cm proc
プロセスの状態に関して、そのすべての子孫の状態も含めて、冗長になります。
.It Cm sch
スケジュールアルゴリズムを繰り返す時に冗長になります。
.It Cm test
実行を通じてトレースしますが、実際の動作は何も行いません。
.El
.El
.Sh 関連項目
.Xr crontab 1 ,
.Xr crontab 5
.Sh 作者
.An Paul Vixie Aq paul@vix.com
