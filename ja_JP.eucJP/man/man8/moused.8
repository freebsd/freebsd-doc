.\" Copyright (c) 1996
.\"	Mike Pritchard <mpp@FreeBSD.org>.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Mike Pritchard.
.\" 4. Neither the name of the author nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" %FreeBSD: src/usr.sbin/moused/moused.8,v 1.46.2.2 2005/02/27 15:40:17 brueffer Exp %
.\"
.\" $FreeBSD$
.Dd April 1, 2000
.Dt MOUSED 8
.Os
.Sh 名称
.Nm moused
.Nd マウスデータをコンソールドライバに渡す
.Sh 書式
.Nm
.Op Fl DPRacdfs
.Op Fl I Ar file
.Op Fl F Ar rate
.Op Fl r Ar resolution
.Op Fl S Ar baudrate
.Op Fl V Op Fl U Ar distance
.Op Fl a Ar X Ns Op , Ns Ar Y
.Op Fl C Ar threshold
.Op Fl m Ar N=M
.Op Fl w Ar N
.Op Fl z Ar target
.Op Fl t Ar mousetype
.Op Fl l Ar level
.Op Fl 3 Op Fl E Ar timeout
.Fl p Ar port
.Pp
.Nm
.Op Fl Pd
.Fl p Ar port
.Fl i Ar info
.Sh 解説
.Nm
ユーティリティとコンソールドライバは協力し、
テキストコンソールやユーザプログラムにおけるマウス操作をサポートします。
マウスの仮想化とユーザプログラムへのマウスデータの提供は標準フォーマット
にて行われます
.Pf ( Xr sysmouse 4
を御覧ください)。
.Pp
マウスデーモンはマウスデータの読みとりのために指定されたポートを監視し、
解釈したデータを ioctl を介してコンソールドライバに渡します。
マウスデーモンは、移動、ボタンの押し/離しイベント、
存在するならばローラやホイールの移動も報告します。
ローラ/ホイールの移動は ``Z'' 軸での移動として報告されます。
.Pp
マウスポインタが
.Xr vidcontrol 1
によって有効にされていれば、
コンソールドライバはマウスポインタをスクリーンに表示し、
カットとペーストの機能を提供します。
.Xr sysmouse 4
をユーザプログラムがオープンすると、コンソールドライバは
マウスデータをこのデバイスに送るので、
ユーザプログラムはこのデータを使用できます。
.Pp
マウスデーモンがシグナル
.Dv SIGHUP
を受けとると、マウスポートを再オープンし、自己を再初期化します。
システムがサスペンドされている間にマウスの挿抜を行なった場合に有用です。
.Pp
以下のオプションがあります:
.Bl -tag -width indent
.It Fl 3
2 ボタンマウスで 3 番目(中)のボタンをエミュレートします。
物理的なボタンで左と右のものを同時に押すとエミュレートされます。
.It Fl C Ar threshold
ダブルクリック速度をボタンクリック間最大インターバルとしてミリ秒で指定します。
このオプションを指定しないと、デフォルト値は 500 ミリ秒が仮定されます。
このオプションは、
テキストモードコンソールのカットとペーストの操作においてのみ有効です。
.Xr sysmouse 4
を介してマウスデータを得るユーザプログラムは影響を受けません。
.It Fl D
シリアルポートの DTR を下げます。
このオプションが有効なのは、
.Ar mousesystems
がマウスプロトコルとして選択されている場合のみです。
.Ar mousesystems
モードで 3 ボタンマウスを操作するためには、
DTR ラインを落とすことが必要かもしれません。
.It Fl E Ar timeout
第 3 ボタンエミュレーション
(前述)
が有効なとき、2 つのボタンが同時に押されたかを判定する前に
.Nm
ユーティリティは最長
.Ar timeout
ミリ秒待ちます。
デフォルトのタイムアウトは 100 ミリ秒です。
.It Fl F Ar rate
サポートされていれば、デバイスのレポート頻度(秒あたりの回数)を設定します。
.It Fl I Ar file
.Nm
ユーティリティのプロセス ID を、指定されたファイルに書きます。
このオプションを指定しないと、プロセス ID は
.Pa /var/run/moused.pid
に格納されます。
.It Fl P
シリアルマウス識別時に、
プラグアンドプレイ COM デバイス列挙処理を開始しません。
.Fl i
オプションと共にこのオプションが指定された場合、
.Nm
ユーティリティはシリアルマウスに関する有用な情報を表示できません。
.It Fl R
シリアルポートの RTS を下げます。
このオプションが有効なのは
.Ar mousesystems
がプロトコルタイプとして、後述する
.Fl t
オプションで指定されている場合のみです。
これは前記
.Fl D
オプションと共によく使用されます。
.Ar mousesystems
モードで 3 ボタンマウスを操作するためには、
RTS と DTR のラインを共に下げる必要があるかもしれません。
.It Fl S Ar baudrate
シリアルポートの速度を指定します (1200 から 9600)。
全シリアルマウスがこのオプションをサポートするわけではありません。
.It Fl V
``仮想スクロール'' を有効にします。このオプションが設定されている場合、
マウスの中ボタンを押し続けていると、動きがスクロールと解釈されるようになります。
スクロールモードを有効にするために
マウスが動かなければならない距離を設定するには
.Fl U
オプションを使います。
.It Fl a Ar X Ns Op , Ns Ar Y
マウスの入力を加速または減速します。
線型加速のみです。
1.0 より小さい値は、しばらく減速します。
1.0 より大きい値は、加速します。
1 個の値だけを指定した場合、両方の座標軸での加速を設定します。
.It Fl c
マウスによっては、中ボタンを押したイベントを、
左右ボタンが押されたかのようにレポートするものがあります。
このオプションはこれを扱うものです。
.It Fl d
デバッグ用のメッセージを有効にします。
.It Fl f
デーモンにならずに、フォアグラウンドプロセスとして実行します。
テストやデバッグに有用です。
.It Fl i Ar info
指定された情報を表示し終了します。
指定可能な情報を以下に示します:
.Pp
.Bl -tag -compact -width modelxxx
.It Ar port
ポート(デバイスファイル)名、例えば
.Pa /dev/cuaa0 ,
.Pa /dev/mse0 ,
.Pa /dev/psm0
です。
.It Ar if
インタフェースタイプ: serial, bus, inport, ps/2 です。
.It Ar type
プロトコルタイプ。
.Fl t
オプションの説明の後でリストされているものか、
ドライバが
.Ar sysmouse
データフォーマット標準をサポートする場合には
.Ar sysmouse
です。
.It Ar model
マウスモデル。
.Nm
ユーティリティは常にモデルを識別できるわけではありません。
.It Ar all
上記全部。
ポート、インタフェース、タイプ、モデルをこの順に一行に表示します。
.El
.Pp
.Nm
ユーティリティは要求された情報を判別できない場合、
``unknown'' か ``generic'' を表示します。
.It Fl l Ar level
.Nm
がどのレベルでマウスドライバを動作させるか指定します。
より詳しいことは
.Xr psm 4
の
.Sx 動作レベル
を参照して下さい。
.It Fl m Ar N=M
物理ボタン
.Ar M
に論理ボタン
.Ar N
を割当てます。
このオプションは任意個数指定可能です。
複数の物理ボタンを単一の論理ボタンに割り当て可能です。
この場合、指定された物理ボタンのいずれかが押されている場合、
論理ボタンが押されていることになります。
\`=' の周りにスペースを入れてはなりません。
.It Fl p Ar port
マウスと通信するためのポートとして
.Ar port
を使います。
.It Fl r Ar resolution
デバイスの解像度を設定します;
インチあたりのドット数または、
.Ar low ,
.Ar medium-low ,
.Ar medium-high ,
.Ar high
のいずれかです。
全デバイスにてこのオプションがサポートされているわけではありません。
.It Fl s
シリアルラインのために 9600 ボーを選びます。
全シリアルマウスがこのオプションをサポートしているわけではありません。
.It Fl t Ar type
ポートに接続されているマウスのプロトコルタイプを指定します。
以下に列挙されるタイプを陽に指定するか、
.Ar auto
を指定して
.Nm
ユーティリティに適切なプロトコルを自動選択させることができます。
コマンドラインにてこのオプションを指定しないと、
.Fl t Ar auto
が仮定されます。
通常では、
.Nm
ユーティリティがプロトコルの自動検出をできない場合に必要です
.Pf ( Sx マウスデーモンの構成 )
を参照。
.Pp
このオプションでプロトコルタイプを指定した場合、
前記
.Fl P
オプションが暗示され、プラグアンドプレイ COM デバイス列挙処理が無効になります。
.Pp
また、マウスを PS/2 マウスポートに接続している場合、
常に
.Ar auto
か
.Ar ps/2
を選択すべきです。
これは、マウスのブランドやモデルとは関係ありません。
同様に、マウスをバスマウスポートに接続している場合、
.Ar auto
か
.Ar busmouse
を選択してください。
これらのマウスではシリアルマウスプロトコルは動作しません。
.Pp
USB マウスでは、プロトコルは
.Ar auto
であることが必要です。他のプロトコルは USB マウスで動作しません。
.Pp
このオプションにおける有効なタイプを以下に列挙します。
.Pp
シリアルマウス:
.Bl -tag -compact -width mousesystemsxxx
.It Ar microsoft
Microsoft シリアルマウスプロトコル。
大抵の 2 ボタンマウスはこのプロトコルを使用します。
.It Ar intellimouse
Microsoft IntelliMouse プロトコル。
Genius NetMouse,
.Tn ASCII
Mie Mouse, Logitech MouseMan+, FirstMouse+
もこのプロトコルを使用します。
他のローラ/ホイールを持つマウスもこのプロトコル互換でしょう。
.It Ar mousesystems
MouseSystems の 5 バイトプロトコル。
3 ボタンマウスはこのプロトコルを使用するかもしれません。
.It Ar mmseries
MM Series マウスプロトコル。
.It Ar logitech
Logitech マウスプロトコル。
これは古い Logitech モデルであることに注意。
新しいモデルには
.Ar mouseman
もしくは
.Ar intellimouse
を指定します。
.It Ar mouseman
Logitech MouseMan と TrackMan のプロトコル。
3 ボタンマウスによってはこのプロトコル互換かもしれません。
MouseMan+ と FirstMouse+ は、このプロトコルではなく、
.Ar intellimouse
プロトコルを使用します
.It Ar glidepoint
ALPS GlidePoint プロトコル。
.It Ar thinkingmouse
Kensington ThinkingMouse プロトコル。
.It Ar mmhitab
Hitachi タブレットプロトコル。
.It Ar x10mouseremote
X10 MouseRemote。
.It Ar kidspad
Genius の Kidspad と Easypad のプロトコル。
.It Ar versapad
Interlink VersaPad プロトコル。
.El
.Pp
バスおよび InPort マウス:
.Bl -tag -compact -width mousesystemsxxx
.It Ar busmouse
バスおよび InPort マウスはこのプロトコルのみ使用可能であり、
バスおよび InPort マウスはブランドに依らずこのオプションを
指定する必要があります。
.El
.Pp
PS/2 マウス:
.Bl -tag -compact -width mousesystemsxxx
.It Ar ps/2
PS/2 マウスはこのプロトコルのみ使用可能であり、
PS/2 マウスはブランドに依らずこのオプションを
指定する必要があります。
.El
.Pp
USB マウスでは、
.Ar auto
が使用可能な唯一のプロトコルであり、
ブランドにかかわらず USB マウスにはこれを指定すべきです。
.It Fl w Ar N
物理ボタン
.Ar N
が、ホイールモードボタンとして動作するようにします。
このボタンが押されている間、X 軸および Y 軸の移動は 0 と報告され、
Y 軸の移動は Z 軸の移動に割り付けられます。
後述する
.Fl z
オプションを使用することにより、
Z 軸の移動を更に仮想ボタンに割り付けることができます。
.It Fl z Ar target
Z 軸(ローラ/ホイール)動作を別の軸や仮想ボタンに割り付けます。
有効な
.Ar target
は以下のいずれかです:
.Bl -tag -compact -width x__
.It Ar x
.It Ar y
X または Y 軸の移動として、検知した Z 軸移動を報告します。
.It Ar N
仮想ボタン
.Ar N
および
.Ar N+1
を押したイベントとして、検知した負/正の Z 軸移動をそれぞれ報告します。
物理ボタン
.Ar N
と
.Ar N+1
が存在する必要はありません。
論理ボタンへの割り付けは Z 軸移動を仮想ボタンへ割り付けた後に行われます。
.It Ar N1 N2
仮想ボタン
.Ar N1
および
.Ar N2
を押したイベントとして、検知した負/正の Z 軸移動をそれぞれ報告します。
.It Ar N1 N2 N3 N4
2 個のホイールがあり
2 番目のホイールが水平スクロール動作を生成するために使用されるマウス、
およびユーザが加えた水平の力を検知するノブまたはスティック付きのマウスで
有用です。
.Pp
2 番目のホイールの動きは、負の向きが
.Ar N3
にマップされ、正の向きが
.Ar N4
にマップされます。
ボタン
.Ar N3
および
.Ar N4
がマウスに実在する場合、このアクションは検出されません。
.Pp
水平移動や 2 番目のローラ/ホイールの動きは常に検出されるわけではないことに
注意してください。
なぜなら、
これらをエンコードするための受け入れられた標準が無いように見えるからです。
.Pp
また、水平方向において、左が負であると考えるマウスもいれば、
逆だと考えるマウスもいることにも注意してください。
更に、2 個のホイールが両方とも垂直に搭載されており、
一方の方向がもう一方の方向とはマッチしないものもあります。
.El
.El
.Ss マウスデーモンの構成
まず、使用予定マウスのインタフェースタイプを知ることが必要です。
これはマウスのコネクタを見れば分かります。
シリアルマウスは D-Sub の 9 ピンまたは 25 ピンのメスです。
バスおよび InPort のマウスは D-Sub 9 ピンのオスか丸い DIN 9 ピンコネクタです。
PS/2 マウスは小さくて丸い DIN 6 ピンコネクタです。
マウスによってはコネクタを別の形状に変換可能なコネクタが附属しています。
このようなアダプタを使用する場合には、
マウスから一番遠いコネクタの形状を見てください。
USB マウスは、平らな長方形のコネクタを持ちます。
.Pp
次に決めねばならないことは、インタフェースのために使用するポートです。
バス、InPort、PS/2 マウスでは、選択肢はありません:
バスおよび InPort マウスは常に
.Pa /dev/mse0
を使用し、
PS/2 マウスは常に
.Pa /dev/psm0
を使用します。
シリアルマウスの場合、接続可能なポートが複数ありえます。
多くの人が組み込みのシリアルポート
.Pa /dev/cuaa0
をマウスに割当てます。
複数の USB マウスをシステムまたは USB ハブに接続可能です。
それらは
.Pa /dev/ums0 , /dev/ums1
のようにアクセス可能です。
.Pa
シンボリックリンク
.Pa /dev/mouse
でマウスの実際のポートを指すようにして、
どのマウスポートか後で簡単に分かるようにするのが良いかもしれません。
.Pp
次に適切なマウスプロトコルを選択します。
.Nm
ユーティリティはマウスタイプを自動決定可能かもしれません。
.Nm
ユーティリティを
.Fl i
オプションを付けて実行し、表示を見ます。
コマンドがプロトコルタイプを識別した場合、あなたは何も調べる必要はありません。
プロトコルタイプを指定せずにデーモンを起動可能です
.Pf ( Sx 使用例 )
を参照。
.Pp
コマンドは、マウスドライバが
.Ar sysmouse
プロトコルをサポートする場合、
.Ar sysmouse
と表示するかもしれません。
.Pp
.Fl i
オプションで表示される
.Dv type
と
.Dv model
は、対象のポインティングデバイスの製品名では必ずしもありませんが、
互換性のあるデバイスの名前でしょう。
.Pp
.Fl i
オプションがなにも表示しない場合、
.Nm
ユーティリティに対して
.Fl t
オプションを使用し、プロトコルタイプを指定する必要があります。
予測して試行する必要があります。
以下に経験則を示します:
.Pp
.Bl -enum -compact -width 1.X
.It
バスおよび InPort マウスはブランドに依らず
.Ar busmouse
プロトコルを使用します
.It
PS/2 マウスはブランドに依らず
.Ar ps/2
プロトコルを使用します
.It
USB マウスには
.Ar auto
プロトコルを指定する必要があります。
.It
ほとんどの 2 ボタンシリアルマウスは
.Ar microsoft
プロトコルをサポートします。
.It
3 ボタンシリアルマウスは
.Ar mousesystems
プロトコルで動作するかもしれません。動作しない場合には、
三番目(中)ボタンが機能せずに
.Ar microsoft
プロトコルで動作するでしょう。
3 ボタンシリアルマウスは、期待通り三番目のボタンが動作しつつ
.Ar mouseman
プロトコルで動作するかもしれません。
.It
3 ボタンマウスには小さなスイッチが付いていて、
``MS'' と ``PC'' または ``2'' と ``3'' とで選択できるようになっている
かもしれません。
``MS'' と ``2'' は通常
.Ar microsoft
プロトコルを意味します。
``PC'' と ``3'' は
.Ar mousesystems
プロトコルを選択します。
.It
マウスにローラやホイールが付いている場合、
.Ar intellimouse
プロトコル互換でしょう。
.El
.Pp
マウスのために選択したプロトコルタイプが正しいかどうかテストする目的で、
現在の仮想コンソールでマウスポインタを有効にします。
.Pp
.Dl vidcontrol -m on
.Pp
マウスデーモンをフォアグラウンドで開始します。
.Pp
.Dl moused -f -p Ar _selected_port_ -t Ar _selected_protocol_
.Pp
マウスポインタがマウスの移動に伴い、
正しく移動することを確認してください。
そして、カットとペーストの機能を左、右、中のボタンを使用して確認してください。
^C をタイプすると、コマンドは停止します。
.Ss 複数のマウス
システムに接続したマウスと同じ数だけ、マウスデーモンを同時実行可能です;
一つのマウスデーモンが一つのマウスに対応します。
ラップトップコンピュータ組み込みの PS/2 ポインティングデバイスを移動中使用し、
オフィスではドッキングステーション接続のシリアルマウスを使用する
場合に有用です。
マウスデーモンを二つ実行し、アプリケーションプログラム
(例えば
.Tn "X\ Window System" )
に
.Xr sysmouse 4
を使用させます。
するとアプリケーションプログラムは常に両マウスからマウスデータを受け取ります。
シリアルマウスが取り付けられていない場合、
対応するマウスデーモンは移動やボタン状態の変化を検出しませんので、
アプリケーションプログラムは PS/2 マウスのデーモンからのマウスデータ
のみを使います。
一方この構成で両方のマウスを接続し同時に両方を動かした場合、
マウスの移動をすべて組み合わせたようにマウスポインタがスクリーン上を移動します。
.Sh 関連ファイル
.Bl -tag -width /dev/consolectl -compact
.It Pa /dev/consolectl
コンソール制御デバイス
.It Pa /dev/mse%d
バスおよび InPort マウスのドライバ
.It Pa /dev/psm%d
PS/2 マウスドライバ
.It Pa /dev/sysmouse
仮想化されたマウスドライバ
.It Pa /dev/ttyv%d
仮想コンソール
.It Pa /dev/ums%d
USB マウスドライバ
.It Pa /var/run/moused.pid
現在実行中の
.Nm
ユーティリティのプロセス ID
.It Pa /var/run/MouseRemote
X10 MouseRemote のイベントのための UNIX ドメインストリームソケット
.El
.Sh 使用例
.Dl moused -p /dev/cuaa0 -i type
.Pp
.Nm
ユーティリティにシリアルポート
.Pa /dev/cuaa0
に接続されたマウスのプロトコルタイプを識別させます。
成功すると、コマンドはタイプを表示しますが、
失敗すると ``unknown'' が表示されます。
.Pp
.Dl moused -p /dev/cuaa0
.Dl vidcontrol -m on
.Pp
.Nm
ユーティリティが指定されたポートのマウスプロトコルタイプを識別可能な場合、
.Fl t
オプション無してデーモンを起動可能であり、
前記のようにマウスポインタをテキストコンソール上で有効にできます。
.Pp
.Dl moused -p /dev/mouse -t microsoft
.Dl vidcontrol -m on
.Pp
シリアルポート
.Pa /dev/mouse
に対してマウスデーモンを起動します。
プロトコルタイプは
.Ar microsoft
を
.Fl t
オプションにて陽に指定しています。
.Pp
.Dl moused -p /dev/mouse -m 1=3 -m 3=1
.Pp
物理ボタン 3 (右ボタン) を論理ボタン 1 (論理的に左) に、
物理ボタン 1 (左ボタン) を論理ボタン 3 (論理的に右) に、
それぞれ割当てます。
左右のボタンを事実上交換します。
.Pp
.Dl moused -p /dev/mouse -t intellimouse -z 4
.Pp
Z 軸 (例えばマウスホイール) における負の移動をボタン 4 が押されたものとし、
Z 軸 (例えばマウスホイール) における正の移動をボタン 5 が押されたものとします。
.Sh 警告
.Nm
ユーティリティは現在別のコンソールドライバ
.Xr pcvt 4
では動作しません。
.Pp
パッドデバイスの多くは、
ユーザがパッド表面を ``タップ'' した場合に最初の(左) ボタンが
押されたものとします。
また、ALPS GlidePoint および Interlink VersaPad のモデルによっては、
タップ動作を 4 番目のボタンのイベントとして扱います。
このようなモデルでは、オプション ``-m 1=4'' を使用して、
他のパッドデバイスと同様の効果を得られます。
.Pp
仮想コンソールでのカットとペーストの機能は、
マウスに 3 ボタンあることを仮定しています。
論理ボタン 1 (論理的に左) は、
コンソールのテキスト領域を選択してカットバッファにコピーします。
論理ボタン 3 (論理的に右) は、
選択された領域を拡張します。
論理ボタン 2 (論理的に中) は、
選択されたテキストをテキストカーソル位置にペーストします。
マウスに 2 つしかボタンが無い場合、中央の `ペースト' ボタン
は使用できません。
ペースト機能を使用するためには、
.Fl 3
オプションを使用して中ボタンをエミュレートするか、
.Fl m
オプションを ``-m 2=3'' のように使用して
物理右ボタンに論理中ボタンを割当てます。
.Sh 関連項目
.Xr kill 1 ,
.Xr vidcontrol 1 ,
.Xr keyboard 4 ,
.Xr mse 4 ,
.Xr pcvt 4 ,
.Xr psm 4 ,
.Xr screen 4 ,
.Xr sysmouse 4 ,
.Xr ums 4
.Sh 規格
.Nm
ユーティリティは
.Dq Plug and Play External COM Device Specification
の一部を
サポートし、PnP シリアルマウスをサポートします。
しかしながら、シリアルマウスごとに仕様充足の度合が異なりますので、
標準のバージョン 1.0 に完全に従ってはいません。
このように厳密さを欠いた方法でも、シリアルマウスの適切なプロトコルタイプ
を常に決定できるわけではありません。
.Sh 作者
.An -nosplit
.Nm
ユーティリティは、
.An Michael Smith Aq msmith@FreeBSD.org
によって書かれました。
このマニュアルページは
.An Mike Pritchard Aq mpp@FreeBSD.org
によって書かれました。
コマンドとマニュアルページを、
.An Kazutaka Yokota Aq yokota@FreeBSD.org
が更新しました。
.Sh 歴史
.Nm
ユーティリティは、
.Fx 2.2
ではじめて登場しました。
