.\"
.\" ----------------------------------------------------------------------------
.\" "THE BEER-WARE LICENSE" (Revision 42):
.\" <phk@FreeBSD.org> wrote this file.  As long as you retain this notice you
.\" can do whatever you want with this stuff. If we meet some day, and you think
.\" this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp
.\" ----------------------------------------------------------------------------
.\"
.\" %FreeBSD: src/sbin/nos-tun/nos-tun.8,v 1.15 2004/07/02 21:45:04 ru Exp %
.\" $FreeBSD$
.\"
.Dd April 11, 1998
.Dt NOS-TUN 8
.Os
.Sh 名称
.Nm nos-tun
.Nd ``nos'' または ``ka9q'' 形式の IP over IP トンネルを実装する
.Sh 書式
.Nm
.Fl t
.Ar tunnel
.Fl s
.Ar source
.Fl d
.Ar destination
.Fl p
.Ar protocol_number
.Ar target
.Sh 解説
.Nm
ユーティリティは
.Xr tun 4
カーネルインタフェースを利用して
.Pf ( Em ka9q
または
.Em IP-IP
トンネルとしても知られる)
.Em nos
形式トンネルを確立します。
.Pp
.Ar tunnel
はトンネルデバイス名、例えば
.Pa /dev/tun0
などです。
.Pp
.Ar source
と
.Ar destination
はトンネルデバイスに使用されるアドレスです。
もしトンネルを cisco ルータに対して設定する場合には、cisco において
.Dq 255.255.255.252
のネットマスクを使用します。
これはトンネルが
.Fx
側において point-to-point インタフェースになっていますが、
cisco が実際には
実装していないためです。
.Pp
.Ar protocol_number
はトンネルモードを設定します。
オリジナルの KA9Q NOS は 94 を使用しますが、
ampr.org による世界規模のバックボーン用に多くの人が 4 を使用します。
.Pp
.Ar target
はリモートのトンネルデバイスのアドレスで、
リモート側で設定されたソースアドレスと一致する必要があります。
.Sh 使用例
こちら側、アドレス 192.168.59.34 の
.Fx
箱:
.Bd -literal -offset indent
nos-tun -t /dev/tun0 -s 192.168.61.1 -d 192.168.61.2 192.168.56.45
.Ed
.Pp
アドレス 192.168.56.45 のリモート cisco:
.Bd -literal -offset indent
interface tunnel 0
ip address 192.168.61.2 255.255.255.252
tunnel mode nos
tunnel destination 192.168.59.34
tunnel source 192.168.56.45
.Ed
.Sh バグ
ソースアドレスをマルチホームなマシンに設定するようなことは
想定されていません。
.Sh 作者
.An -nosplit
.An Nickolay N. Dudorov Aq nnd@itfs.nsk.su
がプログラムを書き、
.An Poul-Henning Kamp Aq phk@FreeBSD.org
がマニュアルを書きました。
.An Isao SEKI Aq iseki@gongon.com
が新規フラグ、すなわち IP プロトコル番号を追加しました。
