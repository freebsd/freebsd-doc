.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Systems Programming Group of the University of Utah Computer
.\" Science Department.
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)dca.45.2 (Berkeley) 3/27/91
.\" $FreeBSD$
.\"	from: com.4,v 1.1 1993/08/06 11:19:07 cgd Exp
.\"	%Id: sio.4,v 1.28 1998/10/22 14:12:55 bde Exp %
.\"
.Dd October 10, 1995
.Dt SIO 4 i386
.Os FreeBSD
.Sh 名称
.Nm sio
.Nd
高速割り込み駆動非同期シリアル通信インタフェース
.Sh 書式
標準ポート用 :
.Cd "device sio0 at isa? port" \&"IO_COM1\&" tty irq 4
.Cd "device sio1 at isa? port" \&"IO_COM2\&" tty irq 3
.Cd "device sio2 at isa? port" \&"IO_COM3\&" tty irq 5
.Cd "device sio3 at isa? port" \&"IO_COM4\&" tty irq 9
.Pp
AST 互換 4ポートマルチポートカード用 :
.Cd "options" \&"COM_MULTIPORT\&"
.Cd "device sio4 at isa? port 0x2a0 tty flags 0x701"
.Cd "device sio5 at isa? port 0x2a8 tty flags 0x701"
.Cd "device sio6 at isa? port 0x2b0 tty flags 0x701"
.Cd "device sio7 at isa? port 0x2b8 tty flags 0x701 irq 12"
.Pp
Boca Board 互換 8 ポートマルチポートカード用 :
.Cd "options" \&"COM_MULTIPORT\&"
.Cd "device sio4 at isa? port 0x100 tty flags 0xb05"
.Cd "..."
.Cd "device sio11 at isa? port 0x138 tty flags 0xb05 irq 12"
.Pp
ヘイズ ESP カード用 :
.Cd "options" \&"COM_ESP\&"
.Cd "..."
.Pp
.Ar フラグ
の意味 :
.Bl -tag -offset indent -compact -width 0x000000
.It 0x00001
共有 IRQ
.It 0x00002
FIFO を無効にする
.It 0x00004
AST/4 互換の IRQ コントロールレジスタを使用しない
.It 0x00008
失われた出力割り込みから早く復旧する
.It 0x00010
デバイスはシステムコンソールになることができる
.It 0x00020
デバイスは強制的にシステムコンソールとなる
.It 0x00040
下位層の IO (例えば、リモートカーネルデバッグ) 用にデバイスを予約する
.It 0x0 Ns Em ?? Ns 00
マスタポートのマイナナンバ
.It 0x20000
デバイスが 16650A タイプ (拡張 FIFO)  のチップを使用すると仮定する
.El
.Pp
マイナナンバリング :
.br
0b\fIOLIMMMMM\fR
.br
  call\fBO\fRut
.br
   \fBL\fRock
.br
    \fBI\fRnitial
.br
     \fBMMMMMM\fRinor
.Sh 解説
.Nm sio
ドライバは、NS8250, NS16450, NS16550 そして NS16550A 互換の
.Tn EIA
.Tn RS-232C
.Pf ( Tn CCITT
.Tn V.24 )
通信インタフェースをサポートします。NS8250 および NS16450 は 
1 文字分のバッファを持っています。NS16550A は 16 文字の FIFO 入力
および出力バッファを持っています。
.Pp
各ラインの入出力は、以下のボーレートのうちのいずれかに設定できます :
50, 75, 110, 134.5, 150, 300, 600, 1200, 1800, 2400, 4800, 9600,
19200, 38400, 57600, 115200。ハードウェアによっては、
ボーレートの選択の幅が狭まるかもしれません。 
.Pp
このドライバは、`マルチポート' カードをサポートしています。
マルチポートカードとは、1 つないし複数のポートのグループを持って
いるカードで、そのグループは、グループごとに割り込み要求 (IRQ) ラインを
共有しています。
別々のカードで同じ IRQ を共有することはサポートされていません。
多くの場合、4 ポートで IRQ を 1 つ共有しています。 したがって、
8 ポートのカードでは、4 ポートの組が 2 つあるので、IRQ を 2 つ
使用するものがあります。
カードによっては、最初の 2 つのシリアルポートが、ポートごとに別の
IRQ を持つようにできるものがあります (DOS PC 標準に従って)。
.Pp
カードによっては、各グループについて IRQ コントロールレジスタを
持つものがあります。また、このようなレジスタに関連する特別な
初期化が必要なカードもあります。
AST/4 互換の IRQ コントロールレジスタのみがサポートされています。
カードによっては、各グループに対して IRQ ステータスレジスタを
持っているものがあります。
本ドライバは、まだこうしたレジスタを必要とせず、使用してもいません。
グループに対するコントロールレジスタならびにステータスレジスタを
ともかくも使用できるようにするには、そのグループ内のポートの
スクラッチレジスタ (レジスタ 7) にマップしなくてはなりません。
こうしたポートは
.Em マスタ
ポートと呼ばれています。
.Pp
16550A UART 上の FIFO を無効にするために、
カーネル設定ファイル内の各
.Em device sio
行で、
.Em flags
キーワードを使用できます
(書式の項を参照)。
ほとんどの場合、FIFO を無効にする必要はありません。
.Pp
IRQ を共有するグループの一部であるポートはすべて、
.Em flags
キーワードを使用
.Em しなくてはなりません。
1 ビットで IRQ の共有を指定し、
もう 1 ビットでポートが
AST/4 互換の初期化を
.Em 必要としない
かどうかを指定します。
グループのマスタポートに対応する
デバイスのマイナナンバは、高位バイトのビットフィールドとして
符号化されます。
1 つのグループに属するポート用には、
同一のマスタポートを指定しなくてはなりません。
.Pp
マスタポートならびに IRQ 共有グループに属さないポート用には
.Em irq
を指定してやらなくてはなりません。
それ以外のポートに対しては指定してはいけません。
.Pp
書式の項で、
.Em flags 0x701
とあるのは、8 番目のポート (sio7) が
マスタポートであり、
またこのポートは 共有 IRQ ならびに AST/4 互換の
IRQ コントロールレジスタを持ったマルチポートカード上にある
という意味です。
.Pp
.Em flags 0xb05
は、12 番目のポート (sio11) が
マスタポートであり、
共有 IRQ を持っているが、特に IRQ コントロールレジスタを持たない
マルチポートカード上にこのポートがあるという意味です。
.Pp
どちらのポートがマスタポートとなるかは、カードの種類に依存します。
お手持ちのカードのハードウェア説明書を調べてください。
IRQ ステータスレジスタが使われることは決してなく、
IRQ コントロールレジスタは AST/4 互換のカードでしか使われないこと、
また、コントロール / ステータスレジスタをグループ内の
すべてのポートに対してマップするカードがあることから、
グループ内のどのポートでもマスタポートにして良いことがあります。
将来の互換性のために IRQ ステータスレジスタを含んだポートを
選択してください。
また、確実性を持たせるために、もっとも上位の番号のポートを選択して
ください。
.Pp
.Nm sio
ドライバで制御されるシリアルポート
は、「着呼」にも「発呼」にも使うことができます。
各ポートについて、着呼デバイスと発呼デバイスがあります。
発呼デバイスのマイナナンバは、対応する着呼デバイス用のものより
128 だけ大きいものになっています。
着呼デバイスは一般的な用途のものです。着呼デバイスをオープンするプロセスは、
通常キャリアを待ったり、発呼デバイスが使用停止の状態になるのを待ちます。
発呼デバイスは、着呼デバイス上でキャリアを待っているプロセスから
ポートを奪うのに使われます。
発呼デバイスをオープンするプロセスはキャリアを待たず、着呼プロセス上で
キャリア待ちをしている任意のプロセスをより深い休眠状態にします。
これにより、着呼デバイス上でキャリアを待っているプロセスは
発呼セッションと競合しなくなります。
発呼デバイスは、一般的なポートで動き、かつポートをキャリア待ちをせずに
オープンする必要があると仮定された制御プログラムで誤用されていますが、
そのような使い方をするのは全く馬鹿げています。
.Pp
.Nm sio
ドライバは、初期状態およびロック状態をコントロールする、
各着呼および発呼 "データ" デバイス用の制御デバイスもサポートします。
初期状態制御デバイスのマイナナンバは、
対応するデータデバイスのマイナナンバよりも
32 だけ大きいものです。
また、ロック状態を制御するデバイスのマイナナンバは、
対応するデータデバイスのマイナナンバよりも 64 だけ大きいものです。
データデバイスの termios の設定は、
初めてオープンした初期状態制御デバイスに対応したものがコピーされます。
過去にオープンしたときのものは継承されません。
termios の初期状態をあなたが望むようにプログラムしたいのであれば、
初期状態制御デバイス上で通常の方法で
.Xr stty 1
を使用してください。
.Pp
termios のロック状態は、termios の状態変更を無効にするフラグのような
振舞いをします。
たとえば、CRTSCTS のような flag 変数をロックするには、
ロック制御デバイスで
.Em stty crtscts
を使用してください。
通信速度やスペシャルキャラクタをロックするには、
ロック状態制御デバイス内の対応する値に 0 以外の値を設定します。
.Pp
正しく接続された外部デバイスと通信するプログラムは、
誤りがなければほとんどどのような初期状態でもロックせずに動作しますが、
他のセットアップを用いた方がデフォルトの初期状態をいくつか
変更したり、状態をロックしたりするのに便利なことがあります。
特に、接続されたデバイスを適切なものにするためには、
POSIX 標準でないフラグの初期状態を設定すべきです。
また、場合によってはバグのありそうなプログラムが POSIX 標準でない
フラグを書き換えてしまわないように初期状態をロックする必要が
あるかもしれません。
例えば、CRTSCTS フラグは、 RTS/CTS ハンドシェークをいつでもサポートする
デバイスではロックすべきですし、
RTS/CTS ハンドシェークを一切サポートしないデバイスではロックすべきでは
ありません。
CLOCAL フラグはキャリアをサポートしないデバイスではロックすべきです。
HUPCL フラグは、何らかの理由でハングアップさせたくないのなら
ロックすべきではありません。
一般的に、適切でない状態で何かをロックすると非常に良くないことが
起こります。また、2 つ以上の設定をサポートするデバイスはロック
すべきではありません。 
着呼ポートの CLOCAL フラグは、logins プログラムがある種の
セキュリティホールを作ってしまうのを防ぐために、
ロックしないでおくべきです。
ただし、着呼ポートが他の用途に使用されている場合に、
着呼ポートがロックされないようにするには、getty を用いる必要があります。
.Sh 関連ファイル
.Bl -tag -width /dev/ttyid? -compact
.It Pa /dev/ttyd?
着呼ポート用
.It Pa /dev/ttyid?
.It Pa /dev/ttyld?
対応する着呼初期状態制御デバイスおよびロック状態制御デバイス
.Pp
.It Pa /dev/cuaa?
発呼ポート用
.It Pa /dev/cuaia?
.It Pa /dev/cuala?
対応する発呼初期状態制御デバイスおよびロック状態制御デバイス
.El
.Pp
.Bl -tag -width /etc/rc.serial -compact
.It Pa /etc/rc.serial
初期状態制御デバイスおよびロック状態制御デバイスの設定例
.El
.Pp
デバイス番号は、[0-9a-v] という
集合からなっているので、10 ポート以上の場合もサポートできます。
.Sh 診断
.Bl -diag
.It sio%d: silo overflow.
割り込みハンドラ内で問題がありました。
.El
.Bl -diag
.It sio%d: interrupt-level buffer overflow.
ドライバのボトムハーフでの問題です。
.El
.Bl -diag
.It sio%d: tty-level buffer overflow.
アプリケーション側での問題です。
与えられたモジュールの処理速度よりも速く入力が到着してしまい、
いくつかデータを失ってしまいました。
.El
.\" .Bl -diag
.\" .It sio%d: reduced fifo trigger level to %d.
.\" Attempting to avoid further silo overflows.
.\" .El
.Sh 関連項目
.Xr stty 1 ,
.Xr termios 4 ,
.Xr tty 4 ,
.Xr comcontrol 8
.Sh 歴史
.Nm
ドライバは、
.Tn HP9000/300
.Xr dca 4
ドライバから生まれており、
.\" .Ud
現在、開発中
です。
.Sh バグ
遅いシステムでボーレートを高くしたり、ポートが多すぎたり、
あるいは負荷の高いシステムで crtsct が使えないときには、
データが失われることがあります。
NS16550A のものを使うと、システムの負荷を下げ、データが失われる
のを防ぐことができます。
.Pp
ただの NS16550 を使わないでください。これは初期のチップ実装であり、
機能しない FIFO ハードウェアを搭載しています。
.Pp
さまざまなシリアルポートの場所を定義する定数値は、
.Tn DOS
から引き継いだものです。
御覧のとおり、16 進数表記のアドレスを替わりに使用することができますし、
また、分かりやすさから言ってもそうすべきでしょう。
.Pp
注意として、AST/4 を使用するときには、ディップスイッチを割り込み共有を
使用するようには設定
.Em しないで
ください。
AST/4 のような割り込み共有が使用できるのは、
.Em 複数の
AST/4 カードが同じシステムに設置されているときだけです。
sio ドライバは、ひとつの IRQ に
複数の AST/4 カードが設置されているような場合はサポートしていません。
.Pp
書式の項の例はかなりベンダに依存したものです。
