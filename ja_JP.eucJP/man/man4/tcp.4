.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     From: @(#)tcp.4	8.1 (Berkeley) 6/5/93
.\" $FreeBSD$
.\"	%Id: tcp.4,v 1.9 1997/03/19 19:47:40 bde Exp %
.\"
.\" WORD: boolean option    ブールオプション
.Dd February 14, 1995
.Dt TCP 4
.Os BSD 4.2
.Sh 名称
.Nm tcp
.Nd インターネットトランスミッションコントロールプロトコル
.Sh 書式
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <netinet/in.h>
.Ft int
.Fn socket AF_INET SOCK_STREAM 0
.Sh 解説
.Tn TCP
プロトコルは信頼性のある、フロー制御された、
全二重のデータ転送を提供します。
本プロトコルは
.Dv SOCK_STREAM
として抽象化された機能をサポートするものとして使用される、
バイトストリーム型のプロトコルです。
TCP は標準のインターネットアドレスフォーマットを使用し、
加えてホスト毎の
.Dq ポートアドレス
の集合も使用します。
従って各アドレスは、ホスト及びネットワークを特定する
インターネットアドレスと、
ホスト上のピアエンティティを識別する特定
.Tn TCP
ポートから構成されます。
.Pp
tcp プロトコルを利用しているソケットは
.Dq 能動型
および
.Dq 受動型
の 2 種類があります。
能動型のソケットは、受動型のソケットに対しコネクションを開始します。
デフォルトでは
.Tn TCP
ソケットは能動型のものが作成されます。
受動型ソケットを作成するには、
.Xr bind 2
システムコールでソケットをバインドした後、
.Xr listen 2
システムコールを使う必要があります。
受動型ソケットのみが、
.Xr accept 2
コールを使用して、入力されるコネクション要求を受け付ける
ことができます。
また、能動型ソケットのみが、
.Xr connect 2
コールを使用してコネクションを開始することができます。
.Tn TCP
はさらに、トランザクション
.Tn TCP
と呼ばれるデータグラムの様なモードもサポートしています。
本件に関しては
.Xr ttcp 4
で述べられています。
.Pp
受動型ソケットは
複数のネットワークから来るコネクション要求に対処するために、
その位置を
.Dq 明確に指定しない
ことができます。
この技術は
.Dq ワイルドカードアドレッシング
と呼ばれ、
単一のサーバが複数のネットワーク上のクライアントに
サービスを提供することができます。
全ネットワークからのコネクション要求に応答するソケットを
作成するには、
インターネットアドレス
.Dv INADDR_ANY
をバインドする必要があります。
この時点でも、
.Tn TCP
ポートを指定できます。
もしポートが指定されていない場合はシステムがポートを割り当てます。
コネクションが一度確立されると、
ソケットのアドレスはピアエンティティの場所により固定されます。
ソケットが割り当てられたアドレスは、
ネットワークインタフェースと
結び付けられており、このネットワークインタフェースを通して
パケットが送受信されます。
普通、このアドレスはピアエンティティのネットワークと一致します。
.Pp
.Tn TCP
はソケットのオプションをいくつかサポートしており、それらは
.Xr setsockopt 2
により設定できます。また、
.Xr getsockopt 2
によりオプションの設定を調べることができます:
.Bl -tag -width TCP_NODELAYx
.It Dv TCP_NODELAY
大抵の状況下において、
.Tn TCP
はデータが現れるとそれを送信します。
確認応答されていないデータが残っている場合は、
確認応答が受信された時すぐに一つのパケットで送信するために
少量の出力データを集めておきます。
応答を受け取らないマウスイベントのストリームを送信する
ウィンドウシステムのような
少数のクライアントにとっては、
このパケット化は重大な遅延の原因となります。
ブールオプション
.Dv TCP_NODELAY
によりこのアルゴリズムを無効にすることができます。
.It Dv TCP_MAXSEG
デフォルトでは、送信側及び受信側の TCP 間の各コネクションで
各々最大セグメントサイズの取り決めを行います。
.Dv TCP_MAXSEG
オプションにより
この取り決めの結果をユーザが決定することができ、
また要求があればその値を減らすことができます。
.It Dv TCP_NOOPT
.Tn TCP
は普通、
本実装において提供される様々な
.Tn TCP
拡張機能に従って、
各パケット中でいくつかオプションを送信します。
ブールオプション
.Dv TCP_NOOPT
は各コネクションで使用される
.Tn TCP
オプションを無効化するために提供されています。
.It Dv TCP_NOPUSH
慣例により、送信側の TCP は
.Dq push
ビットをセットし、(もし許可されていれば) 
.Xr write 2
または
.Xr writev 2
が呼ばれる度に即座に送信します。
.Dv TCP_NOPUSH
オプションは
トランザクション TCP (
.Xr ttcp 4
を参照)
をサーバが簡単に利用するために提供されています。
本オプションが 0 以外の値にセットされると、
.Tn TCP
はソケットがクローズされるか内部の送信バッファがいっぱいになるまで、
あらゆるデータの送信を遅らせます。
.El
.Pp
.Xr setsockopt 2
コールにおけるオプションレベルは
.Tn TCP
のプロトコルナンバであり、
.Xr getprotobyname 3
あるいは
.Dv IPPROTO_TCP
から得ることができます。
オプションは、すべて
.Aq Pa netinet/tcp.h
で定義されています。
.Pp
.Tn IP
トランスポートレベルでのオプションは
.Tn TCP
で使用可能です。本件は
.Xr ip 4
を参照してください。
ソースルートの入力コネクション要求が記載されており、
また逆向きのソースルートが応答で使用されます。
.Sh MIB の変数
.Nm
プロトコルは、
.Xr sysctl 3
MIB の
.Li net.inet
ブランチで 3 つの変数を実装しています。
.Bl -tag -width TCPCTL_DO_RFC1644
.It Dv TCPCTL_DO_RFC1323
.Pq tcp.rfc1323
RFC 1323 のウィンドウスケーリング及び
タイムスタンプのオプションの実装
(デフォルトは真)。
.It Dv TCPCTL_DO_RFC1644
.Pq tcp.rfc1644
トランザクション
.Tn TCP
の実装。
RFC 1644 で述べられています。
.It Dv TCPCTL_MSSDFLT
.Pq tcp.mssdflt
最大セグメントサイズ
.Pq Dq MSS
のデフォルト値。
MSS の取り決めの際に特に指示が無い場合に使用されます。
.El
.Sh 診断
ソケット操作の失敗の際には次のエラーのうちの一つが返されます:
.Bl -tag -width [EADDRNOTAVAIL]
.It Bq Er EISCONN
既にコネクションが確立されているソケットに対し
さらにコネクションを確立させようとした時
.It Bq Er ENOBUFS
内部的なデータ構造のためのメモリが不足した時
.It Bq Er ETIMEDOUT
過度の再送信によりコネクションが落ちた時
.It Bq Er ECONNRESET
リモートピアが強制的にコネクションをクローズした時
.It Bq Er ECONNREFUSED
リモートピアが意識的にコネクションの確立を拒否してきた時
(大抵はそのポートを監視しているプロセスが無いためです)
.It Bq Er EADDRINUSE
既に割り当てられているポートに対しソケットを作成しようとした時
.It Bq Er EADDRNOTAVAIL
対応したネットワークインタフェースが存在しない
ネットワークアドレスを指定し、ソケットを作成しようとした時
.It Bq Er EAFNOSUPPORT
マルチキャストアドレスに対し
ソケットをバインドまたは接続しようとした時
.El
.Sh 関連項目
.Xr getsockopt 2 ,
.Xr socket 2 ,
.Xr sysctl 3 ,
.Xr inet 4 ,
.Xr intro 4 ,
.Xr ip 4 ,
.Xr ttcp 4
.Rs
.%A V. Jacobson, R. Braden, and D. Borman
.%T "TCP Extensions for High Performance"
.%O RFC 1323
.Re
.Rs
.%A R. Braden
.%T "T/TCP \- TCP Extensions for Transactions"
.%O RFC 1644
.Re
.Sh 歴史
.Nm
プロトコルは
.Bx 4.2
から登場しました。
ウィンドウスケーリング及びタイムスタンプに関する RFC 1323 の拡張機能は
.Bx 4.4
で追加されました。

