.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)gettytab.5	8.4 (Berkeley) 4/19/94
.\" %FreeBSD: src/libexec/getty/gettytab.5,v 1.40 2003/06/17 12:29:36 yar Exp %
.\"
.\" $FreeBSD$
.\" "
.\" WORD: terminal line		端末回線
.\" WORD: .Sh CAPABILITIES	ケーパビリティ
.\" WORD: erase	文字消去
.\" WORD: kill	行削除
.\" WORD: delay	遅延
.\" WORD: comma コンマ
.\" WORD: banner	バナー
.\" WORD: answer chat script	アンサーチャットスクリプト
.\" WORD: screen		画面 [termcap.5 gettytab.5]
.\" "
.Dd April 19, 1994
.Dt GETTYTAB 5
.Os
.Sh 名称
.Nm gettytab
.Nd 端末設定データベース
.Sh 書式
.Nm
.Sh 解説
.Nm
ファイルは
.Xr termcap 5
データベースを単純化したバージョンで、
端末回線を記述するのに用いられます。
冒頭に起動される端末ログインプロセス
.Xr getty 8
は起動されるたびに
.Nm
ファイルにアクセスするので、
比較的簡単に端末の特性を再設定することができます。
データベースの各エントリは、それぞれ1個の端末クラスを記述するのに用いられます。
.Pp
デフォルトの端末クラス
.Va default
が存在し、
他の全てのクラスに対するグローバルなデフォルト値を記述するのに
用いられます。
(言い替えれば、まず、
.Va default
エントリを読み込み、その後で、必要なクラスのエントリを読み込み、
デフォルトの設定をクラス固有の設定で上書きします。)
.Sh ケーパビリティ
ファイルレイアウトの解説については、
.Xr termcap 5
を参照して下さい。
以下の
.Va デフォルト
欄は、
使用する端末用のテーブルに値がなく、特別の
.Va default
テーブルにも値がない場合に用いられる値です。
.Bl -column 名称 文字列 /usr/bin/login
.It Sy "名称	型	デフォルト	解説
.It "ac	文字列	unused	モデム応答のための想定文字列-応答チャットスクリプト"
.It "al	文字列	unused	プロンプトを出さずに自動ログインするユーザ"
.It "ap	bool	偽	端末はどのパリティでも受け付ける"
.It "bk	文字列	0377	代用の行末文字 (入力ブレーク)"
.It "c0	数値	unused	メッセージ書き出しのための tty 制御フラグ群"
.It "c1	数値	unused	ログイン名読み込みのための tty 制御フラグ群"
.It "c2	数値	unused	端末を去るときの制御フラグ群"
.It "ce	bool	偽	crt 文字消去アルゴリズムを用いる"
.It "ck	bool	偽	crt 行削除アルゴリズムを用いる"
.It "cl	文字列" Ta Dv NULL Ta
.No "画面削除シーケンス"
.It "co	bool	偽	コンソール -"
.Ql \en
をログインプロンプトの後に追加する
.It "ct	数値	10	"
.Va \&ac
と
.Va \&ic
のスクリプトのためのチャットタイムアウト
.It "dc	数値	0	チャットデバッグ用ビットマスク"
.It "de	数値	0	この秒数だけ待って、最初のプロンプトを書く前に入力をフラッシュする"
.It "df	文字列	%+	バナーメッセージ中の \&%d で使用する" Xr strftime 3 "書式"
.It "ds	文字列" Ta So Li ^Y Sc Ta
.No "遅延されたサスペンド文字"
.It "dx	bool	偽	"
.Dv DECCTLQ
をセットする
.It "ec	bool	偽	echo を残す"
.Em OFF
.It "ep	bool	偽	端末は偶数パリティを用いる"
.It "er	文字列" Ta So Li ^? Sc Ta
.No "消去文字"
.It "et	文字列" Ta So Li ^D Sc Ta
.No "テキストの終り"
.Pq Dv EOF
文字
.It "ev	文字列" Ta Dv NULL Ta
.No "環境変数の初期設定"
.It "f0	数値	unused	メッセージ書き出しのための tty モードフラグ群"
.It "f1	数値	unused	ログイン名読み込みのための tty モードフラグ群"
.It "f2	数値	unused	端末を去るときの tty モードフラグ群"
.It "fl	文字列" Ta So Li ^O Sc Ta
.No "出力フラッシュ文字"
.It "hc	bool	偽	"
最後のクローズのときに回線をハングアップ
.Em させない
.It "he	文字列" Ta Dv NULL Ta
.No "ホスト名編集文字列"
.It "hn	文字列	hostname	ホスト名"
.It "ht	bool	偽	端末に本物のタブが実装されている"
.It "hw	bool	偽	cts/rts によるハードウェアフロー制御を行う"
.It "i0	数値	unused	メッセージ書き出しのための tty 入力フラグ群"
.It "i1	数値	unused	ログイン名読み込みのための tty 入力フラグ群"
.It "i2	数値	unused	端末を去るときの tty 入力フラグ群"
.It "ic	文字列	unused	モデム初期化のための、想定入力-出力チャットスクリプト"
.It "if	文字列	unused	プロンプトの前に、/etc/issue のように名前で指定したファイルを表示する"
.It "ig	bool	偽	ログイン名に含まれるガベージ文字を無視する"
.It "im	文字列" Ta Dv NULL Ta
.No "冒頭の (バナー) メッセージ"
.It "in	文字列" Ta So Li ^C Sc Ta
.No "割り込み文字"
.It "is	数値	unused	入力スピード"
.It "kl	文字列" Ta So Li ^U Sc Ta
.No "行消去文字"
.It "l0	数値	unused	メッセージ書き出しのための tty ローカルフラグ群"
.It "l1	数値	unused	ログイン名読み込みのための tty ローカルフラグ群"
.It "l2	数値	unused	端末を去るときの tty ローカルフラグ群"
.It "lm	文字列	login:	ログインプロンプト"
.It "ln	文字列" Ta So Li ^V Sc Ta
.No "次の文字がリテラル値であることを示す文字"
.It "lo	文字列" Ta Pa /usr/bin/login Ta
.No "名前を得たときに実行するプログラム"
.It "mb	bool	偽	キャリアに基づいたフロー制御を行う"
.It "nc	bool	偽	端末はキャリアをサポートしない (clocal をセット)"
.It "nl	bool	偽	端末には改行文字がある (あるいは、あるはずである)"
.It "np	bool	偽	端末はパリティを用いない (つまり 8 ビット文字)"
.It "nx	文字列	default	(速度の自動選択のための) 次のテーブル"
.It "o0	数値	unused	メッセージ書き出しのための tty 出力フラグ群"
.It "o1	数値	unused	ログイン名読み込みのための tty 出力フラグ群"
.It "o2	数値	unused	端末を去るときの tty 出力フラグ群"
.It "op	bool	偽	端末は奇数パリティを用いる"
.It "os	数値	unused	出力スピード"
.It "pc	文字列" Ta So Li \e0 Sc Ta
.No "パッド文字"
.It "pe	bool	偽	プリンタの (ハードコピー) 文字消去アルゴリズムを用いる"
.It "pf	数値	0	最初のプロンプトと"
引き続くフラッシュの間の遅延 (秒数)
.It "pl	bool	偽	PPP シーケンスを検出せず、"
.Va \&pp
で示される PPP ログインプログラムを自動的に開始する
.It "pp	文字列	unused	PPP 認証プログラム"
.It "ps	bool	偽	回線は"
.Tn MICOM
ポートセレクタに接続されている
.It "qu	文字列" Ta So Li \&^\e Sc Ta
.No "終了文字"
.It "rp	文字列" Ta So Li ^R Sc Ta
.No "行の再タイプ文字"
.It "rt	数値	unused	"
.Va \&ac
使用時の ring タイムアウト
.It "rw	bool	偽	入力に raw モードを"
.Em 用いずに
、cbreak を用いる
.It "sp	数値	unused	(入力および出力の) 回線速度"
.It "su	文字列" Ta So Li ^Z Sc Ta
.No "サスペンド文字"
.It "tc	文字列	none	テーブルの続き"
.It "to	数値	0	タイムアウト (秒数)"
.It "tt	文字列" Ta Dv NULL Ta
.No "端末の型 (環境変数用)"
.It "ub	bool	偽	(プロンプトなどの) バッファリングしない出力を行う"
.It "we	文字列" Ta So Li ^W Sc Ta
.No "単語消去文字"
.It "xc	bool	偽	制御文字を
.Ql ^X
の形で出力
.Em しない
.It "xf	文字列" Ta So Li ^S Sc Ta Dv XOFF
(出力ストップ) 文字
.It "xn	文字列" Ta So Li ^Q Sc Ta Dv XON
(出力開始) 文字
.It "Lo	文字列	C	バナーメッセージでの \&%d のために用いるロケール"
.El
.Pp
以下のケーパビリティはもはや
.Xr getty 8
によってサポートされていません。
.Bl -column 名称 文字列 /usr/bin/login
.It "bd	数値	0	バックスペースでの遅延"
.It "cb	bool	偽	crt バックスペースモードを用いる"
.It "cd	数値	0	復帰 (carriage return) での遅延"
.It "fd	数値	0	フォームフィード (垂直移動) での遅延"
.It "lc	bool	偽	端末では小文字が使える"
.It "nd	数値	0	改行 (ラインフィード) での遅延"
.It "uc	bool	偽	端末では大文字しか使えない"
.El
.Pp
回線速度が指定されていない場合、getty が起動された時に設定されている速度は
変更されません。
入力速度または出力速度を指定したときは、
指定した方向の回線速度のみが上書き更新されます。
.Pp
メッセージの出力時、ログイン名の入力時、
getty が処理を済ませて端末を手放す時に用いる
端末モードの値は
ブール型フラグの指定に基づいて決定されます。
もしこの決定が適切でないことが分かった場合、
これら3つのどれか (あるいはすべて) の値は、数値指定
.Va \&c0 ,
.Va \&c1 ,
.Va \&c2 ,
.Va \&i0 ,
.Va \&i1 ,
.Va \&i2 ,
.Va \&l0 ,
.Va \&l1 ,
.Va \&l2 ,
.Va \&o0 ,
.Va \&o1 ,
.Va \&o2
のいずれかで上書きされます。
これらの数値指定では、フラグの値
(通常は、0 を頭につけた 8 進数)
そのものを指定することができます。
これらのフラグは termio の
.Va c_cflag ,
.Va c_iflag ,
.Va c_lflag ,
および
.Va c_oflag
の各フィールドにそれぞれ対応します。
それらのセットの各々は、完全に指定しなければ有効になりません。
.Va \&f0 ,
.Va \&f1 ,
および
.Va \&f2
は TTY サブシステムの旧版の実装に対する後方互換性を意図した物です。
これらのフラグには、sgttyb の
.Va sg_flags
フィールドの (32 ビット) 値の下位 16 ビットが含まれます。また、上位 16 ビットは
ローカルモードを収めるワードを表します。
.Pp
もし
.Xr getty 8
がヌル文字 (回線ブレークを示すものと見なされます) を受け取った場合、
プログラムは
.Va \&nx
エントリに示されたテーブルを用いて再始動します。
もしこのエントリがなければ、今まで用いていたテーブルを再び用います。
.Pp
遅延はミリ秒単位で指定し、tty ドライバが使用可能な遅延のうち最も
近いものが用いられます。
より大きな確実性が必要な場合は、0 から 1, 2, 3 までの値の
遅延はドライバの特別な遅延アルゴリズムから選択するものと解釈されます。
.Pp
.Va \&cl
画面消去文字列には、その前に必要な遅延時間をミリ秒単位の
(10 進数) 数値で (termcap 風に) 書くことができます。
この遅延はパディング文字
.Va \&pc
を繰り返して用いることによりシミュレートされます。
.Pp
初期化メッセージ
.Va \&im
ログインメッセージ
.Va \&lm
および初期化ファイル
.Va \&if
は、以下の文字の並びをどれでも含めることができます。これらは
.Xr getty 8
が実行されている環境から得た情報に展開されます。
.Pp
.Bl -tag -offset indent -width \&%xxxxxxxxxxxxxx
.It \&%d
現在の日付と時間を、
.Va \&Lo
と
.Va \&df
に従って整形したもの。
.It \&%h
マシンのホスト名。通常は
.Xr gethostname 3
によってシステムから得ますが、テーブルの
.Va \&hn
エントリで指定して、この値を書き換えることができます。
どちらの場合でも、これは
.Va \&he
文字列を用いて編集することができます。
.Va \&he
文字列の中にある 1 個の '@' は 実際のホスト名から最終的なホスト名に
1文字のコピーを引き起こします。
.Va \&he
文字列中の '#' は実際のホスト名の次の1文字をスキップさせます。
\&'@' でも '#' でもない各文字は最終的なホスト名にコピーされます。
余分な '@' と '#' は無視されます。
.It \&%t
tty の名前。
.It "\&%m, \&%r, \&%s, \&%v"
それぞれ、
.Xr uname 3
が返す
マシンの型、オペレーティングシステムのリリース、オペレーティングシステムの
名前、そしてカーネルのバージョンです。
.It \&%%
1 個の
.Dq %
文字。
.El
.Pp
getty がログインプロセス
(通常は
.Dq Pa /usr/bin/login
ですが、
.Va \&lo
文字列で指定されていればそれ)を実行するとき、このプロセスの環境には
.Va \&tt
文字列 (が存在すれば) で指定した
端末の型が設定されます。
.Va \&ev
文字列は、プロセスの環境にデータを追加するために使用することができます。
これはコンマで区切られた文字列からなり、それぞれは、
.Li name=value
という形式になっていると仮定されます。
.Pp
もしタイムアウトとして、
.Va \&to
に 0 以外の値を指定した場合、
指定された秒数経過した後に終了します。
すなわち、getty はログイン名を受け取って制御を
.Xr login 1
に渡すか、または alarm シグナルを受け取って終了します。
これはダイヤルイン回線をハングアップするために有用です。
.Pp
.Xr getty 8
からの出力は、
.Va \&op
か
.Va \&np
が指定された場合を除いて、偶数パリティを用います。
.Va \&op
文字列と
.Va \&ap
を一緒に指定すると、
入力としてはパリティが何であっても許可し、出力としては奇数パリティを
生成します。
注意: これは、getty が実行されているときのみ適用され、端末ドライバの
制限によりここまで完全な実装ができないかもしれません。
.Xr getty 8
ユーティリティは
.Dv RAW
モードのときは入力文字のパリティ検査を行いません。
.Pp
もし
.Va \&pp
文字列が指定されていて、PPP リンク確立シーケンスが認識されると、
getty は
.Va \&pp 
オプションで指定されているプログラムを起動します。
これは PPP 着信を取り扱うために用いることができます。
.Va \&pl
も真の場合、
.Xr getty 8
はユーザ名プロンプトとPPP 検出フェーズをスキップし、
.Va \&pp
で指定されたプログラムを即時に起動します。
.Pp
.Xr getty 8
は以下の2つのケーパビリティを用いて利用できるチャットスクリプト機能を
提供します。これによって、
基本的なインテリジェントモデムをある程度取り扱えるようにします。
.Pp
.Bl -tag -offset indent -width \&xxxxxxxx -compact
.It ic
モデムを初期化するチャットスクリプト。
.It ac
コールに答えるチャットスクリプト。
.El
.Pp
チャットスクリプトは、受信を想定した文字列/送信する文字列の対の連なり
からなります。チャット文字列が始まるとき、
.Xr getty 8
は最初の文字列を待ち、その文字列を見つけたら 2 番目の文字列を送ります。
以後も同様に処理を進めます。
指定された文字列は 1 個以上のタブあるいはスペースで区切られています。
文字列には標準 ASCII 文字と、特別な「エスケープ」を含めることが
できます。エスケープは、バックスラッシュに続き 1 文字以上の文字が
続いたもので、それは
以下のように解釈されます。
.Pp
.Bl -tag -offset indent -width \&xxxxxxxx -compact
.It \ea
ベル文字。
.It \eb
バックスペース。
.It \en
改行。
.It \ee
エスケープ。
.It \ef
フォームフィード。
.It \ep
0.5秒の一時停止。
.It \er
復帰文字。
.It \eS , \es
空白文字。
.It \et
タブ。
.It \exNN
16 進数のバイト値。
.It \e0NNN
8 進数のバイト値。
.El
.Pp
.Ql \ep
文字列は送信文字列でのみ有効で、前の文字と次の文字を送る間に 0.5 秒の
一時停止を発生することに注意のこと。
16 進数値は最大で 16 進数 2 桁で、 8 進数値は最大で 8 進数 3 桁です。
.Pp
.Va \&ic
チャットシーケンスはモデムやそれに類似したデバイスを初期化するのに
用いられます。ヘイズ互換のコマンドセットを持つモデム用の初期化チャット
スクリプトの典型例は、以下のようなものでしょう。
.Pp
.Dl :ic="" ATE0Q0V1\er OK\er ATS0=0\er OK\er:
.Pp
このスクリプトは何も待たず (つまり常に成功し)、モデムが正しいモード
(コマンドエコーを抑制し、応答を返す際に冗長モードで返す)
に確実になるようなシーケンスを送り、それから自動応答を
切ります。
終了する前に、"OK" という反応を待ちます。
この初期化シーケンスは、モデムの応答をチェックして
モデムが正しく機能しているかを確かめるために
用いられます。
初期化スクリプトが完了するのに失敗した場合、
.Xr getty 8
はこれを致命的な状態であると見なし、その結果として、
.Xr syslogd 8
を用いてログを残してから終了します。
.Pp
同様に、アンサーチャットスクリプトは
(通常) "RING" に対して手動で電話に応答するために
用いることができます。
アンサースクリプトを指定して起動した場合、
.Xr getty 8
ユーティリティは、
ポートをノンブロッキングモードでオープンし、それ以前の余分な入力をすべて
消去し、ポートへのデータを待ちます。
何らかのデータが取得可能になるとすぐ、アンサーチャットスクリプトが
開始し、文字列がスキャンされ、アンサーチャットスクリプトに従って
応答します。
ヘイズ互換のモデムでは、スクリプトは通常以下のような感じのものになるでしょう。
.Pp
.Dl :ac=RING\er ATA\er CONNECT:
.Pp
これは、"ATA" コマンドによってモデムに応答させ、続いて
入力をスキャンして文字列 "CONNECT" を探します。
もし
.Va \&ct
タイムアウトが生じる前にこの文字列を受け取った場合、
通常のログインシーケンスが開始されます。
.Pp
.Va \&ct
ケーパビリティはすべての送信文字列および想定される入力文字列
に適用されるタイムアウトの値を指定します。このタイムアウトは
文字列待ちを行うごと、および文字列送信を行うごとに設定されます。
少なくともリモートとローカルのモデムの間のコネクションが確立される
のにかかる時間 (通常およそ 10 秒) だけの長さは必要です。
.Pp
ほとんどの情況で、コネクションが検出された後に
追加の入力のすべてをフラッシュしたいと思うものですが、
この目的には
.Va \&de
ケーパビリティを使うことができます。これは、
コネクションが確立された後で短時間の遅延をかけ、
その間に接続データがすべてモデムによって送られてしまうのと
同じ効果を持ちます。
.Sh 関連項目
.Xr login 1 ,
.Xr gethostname 3 ,
.Xr uname 3 ,
.Xr termcap 5 ,
.Xr getty 8 ,
.Xr telnetd 8
.Sh バグ
特殊文字 (文字消去、行削除など) は
.Xr login 1
によってシステムのデフォルトに再設定されてしまいます。
.Em 常に、
ログイン名としてタイプした '#' あるいは '^H' は1文字消去として
扱われ、'@' は行消去として扱われます。
.Pp
遅延機能は実クロックです。
全般的に柔軟性がないという問題はさておき、遅延アルゴリズムのいくつかは
実装されていません。
端末ドライバが正常な遅延の設定をサポートしている必要があります。
.Pp
.Em \&he
ケーパビリティは全く知的ではありません。
.Pp
忌まわしい
.Xr termcap 5
フォーマットより、もっと合理的なものを選ぶべきでした。
.Sh 歴史
.Nm
ファイルフォーマットは
.Bx 4.2
で登場しました。
