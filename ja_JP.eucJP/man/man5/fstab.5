.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fstab.5	8.1 (Berkeley) 6/5/93
.\" %FreeBSD: src/share/man/man5/fstab.5,v 1.26 2004/07/03 18:29:22 ru Exp %
.\"
.\" $FreeBSD$
.\"
.Dd June 5, 1993
.Dt FSTAB 5
.Os
.Sh 名称
.Nm fstab
.Nd ファイルシステムに関する静的情報
.Sh 書式
.In fstab.h
.Sh 解説
.Nm
ファイルは、さまざまなファイルシステムについて記述した情報を格納します。
.Nm
はプログラムによって読み出されるだけで、書き込みはされません。
このファイルを適切に作成、保守するのはシステム管理者の責務です。
各ファイルシステムは個別の行に記述されます。
各々の行のフィールドはタブまたはスペースによって区切られます。
.Xr fsck 8 ,
.Xr mount 8 ,
.Xr umount 8
が
.Nm
を通じて必要な処理を連続して繰り返すため、
.Nm
のレコードの順序は重要な意味を持ちます。
.Pp
第 1 フィールド
.Pq Fa fs_spec
はマウントされるブロック型スペシャルデバイス、またはリモートのファイル
システムを表します。
.Em ufs
形式のファイルシステムでは、特殊ファイル名はブロック型特殊ファイル名であり、
キャラクタ型特殊ファイル名ではありません。
プログラムがキャラクタ型特殊ファイル名を必要とする場合、そのプログラム
が特殊ファイル名の中の最後の ``/'' の後ろに ``r'' を追加することで
キャラクタ特殊ファイル名を作成する必要があります。
.Pp
第 2 フィールド
.Pq Fa fs_file
はファイルシステムのマウントポイントを表します。
スワップパーティションでは、このフィールドには ``none'' と記述すべきです。
.Pp
第 3 フィールド
.Pq Fa fs_vfstype
はファイルシステムの形式を表します。
システムはさまざまなファイルシステム形式をサポートできます。
ルート、 /usr および /tmp のファイルシステムだけはカーネルに静的に組み
込まれている必要があります。
他のすべてのファイルシステムはマウント時に自動的にロードされます
(例外 : UFS 系 - FFS, LFS は現在のところデマンドロードは
できません)。
いまだに他のファイルシステムも同様に静的に組み込むのを好む人もいるようです。
.Pp
第 4 フィールド
.Pq Fa fs_mntops
は、ファイルシステムに関連するマウントオプションを表します。
これはコンマで区切られたオプションのリストとして記述されます。
これは少なくともマウントの形式 (以下の
.Fa fs_type
参照) を含み、加えてファイルシステム形式に特有のいくつかの追加の
オプションを含みます。
指定可能なオプションフラグに関しては、
.Xr mount 8
ページおよび
.Xr mount_nfs 8
等のファイルシステム固有のページの、オプションフラグ
.Pq Fl o
を参照してください。
.Pp
``userquota'' および ``groupquota'' オプションの双方、またはいずれかが
指定されている場合、ファイルシステムは自動的に
.Xr quotacheck 8
コマンドによって処理され、ユーザおよびグループクォータが
.Xr quotaon 8
で有効にされます。
デフォルトでは、ファイルシステムのクォータは関連するファイルシステムの
ルートに置かれた
.Pa quota.user
および
.Pa quota.group
というファイルで管理されます。
これらのデフォルトは、クォータオプションの直後に等号とデフォルトに代わる
絶対パス名を置くことで変更することができます。
従って、
.Pa /tmp
のユーザクォータファイルを
.Pa /var/quotas/tmp.user
に置く場合、そのファイルの場所は以下のように指定されます。
.Bd -literal -offset indent
userquota=/var/quotas/tmp.user
.Ed
.Pp
``noauto'' オプションが指定されている場合、ファイルシステムはシステム
起動時に自動的にマウントされません。
サードパーティタイプのネットワークファイルシステム
(ベースシステムに含まれない追加ソフトウェアがサポートするタイプ)
がシステム起動時に自動的にマウントされるようにするには、
.Va extra_netfs_types
.Xr rc.conf 5
変数を使用し、
.Xr rc 8
起動スクリプトのネットワークファイルシステムタイプのリストを
拡張する必要があります。
.Pp
マウント形式は
.Fa fs_mntops
フィールドから取り出され、
.Fa fs_type
フィールドに個別に保存されます (
.Fa fs_mntops
フィールドからは削除されません)。
.Fa fs_type
が ``rw'' または ``ro'' ならば、
.Fa fs_file
フィールドで指定されたファイルシステムは、読み書き可能、または読み出し
専用で指定の特殊ファイルに正常にマウントされます。
.Fa fs_type
が ``sw'' ならば、特殊ファイルはシステムのリブート処理の最後に
.Xr swapon 8
コマンドによってスワップ領域の一部として使用されます。
.Fa fs_spec
と
.Fa fs_type
以外のフィールドは使用されません。
.Fa fs_type
が ``xx'' と指定されている場合、このエントリは無視されます。
これは、現在使用されていないディスクパーティションを表すのに便利です。
.Pp
第 5 フィールド
.Pq Fa fs_freq
は、どのファイルシステムがダンプされる必要があるか決定するために
.Xr dump 8
コマンドによって使用されます。
第5フィールドが与えられていない場合は 0 が返され、
.Nm dump
コマンドはそのファイルシステムをダンプする必要がないと見なします。
.Pp
第 6 フィールド
.Pq Fa fs_passno
は、リブート時にファイルシステムのチェックが行われる順序を決定するために
.Xr fsck 8
プログラムによって使用されます。
ルートファイルシステムは
.Fa fs_passno
に 1、他のファイルシステムは
.Fa fs_passno
に 2 が指定されているべきです。
１つのドライブ内のファイルシステムは逐次的にチェックされますが、
異なるドライブ上のファイルシステムは、ハードウェアの並列性を利用して
同時にチェックされます。
第6フィールドが与えられていないか 0 の場合、0 が返され、
.Xr fsck 8
コマンドはそのファイルシステムをチェックする必要がないと見なします。
.Bd -literal
#define	FSTAB_RW	"rw"	/* 読み書き可能デバイス */
#define	FSTAB_RQ	"rq"	/* クォータ付き読み書き可能デバイス */
#define	FSTAB_RO	"ro"	/* 読み出し専用デバイス */
#define	FSTAB_SW	"sw"	/* スワップデバイス */
#define	FSTAB_XX	"xx"	/* 完全に無視 */

struct fstab {
	char	*fs_spec;	/* ブロック型スペシャルデバイス名 */
	char	*fs_file;	/* ファイルシステムのパスのプレフィックス */
	char	*fs_vfstype;	/* ufs,nfs などのファイルシステム形式 */
	char	*fs_mntops;	/* -o に準拠したマウントオプション */
	char	*fs_type;	/* fs_mntops から FSTAB_* のコピー */
	int	fs_freq;	/* ダンプ周期の日数 */
	int	fs_passno;	/* 並列 fsck のパス番号 */
};
.Ed
.Pp
.Pa fstab
のレコードを適切に読み出すには、
.Xr getfsent 3 ,
.Xr getfsspec 3 ,
.Xr getfstype 3 ,
.Xr getfsfile 3
ルーチンを使用します。
.Sh 関連ファイル
.Bl -tag -width /etc/fstab -compact
.It Pa /etc/fstab
.Nm
ファイルは
.Pa /etc
に存在します。
.El
.Sh 関連項目
.Xr getfsent 3 ,
.Xr getvfsbyname 3 ,
.Xr dump 8 ,
.Xr fsck 8 ,
.Xr mount 8 ,
.Xr quotacheck 8 ,
.Xr quotaon 8 ,
.Xr swapon 8 ,
.Xr umount 8
.Sh 歴史
.Nm
ファイルフォーマットは
.Bx 4.0
から登場しました。
