.\"
.\" Copyright (c) 1997-2004 Erez Zadok
.\" Copyright (c) 1990 Jan-Simon Pendry
.\" Copyright (c) 1990 Imperial College of Science, Technology & Medicine
.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Jan-Simon Pendry at Imperial College, London.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgment:
.\"      This product includes software developed by the University of
.\"      California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	%W% (Berkeley) %G%
.\"
.\" $Id: amd.conf.5,v 1.22 2004-09-24 13:28:55 metal Exp $
.\" %FreeBSD: src/contrib/amd/scripts/amd.conf.5,v 1.16 2004/07/06 13:16:49 mbr Exp %
.\"
.\" $FreeBSD$
.\"
.Dd April 7, 1997
.Dt AMD.CONF 5
.Os
.Sh 名称
.Nm amd.conf
.Nd amd コンフィギュレーションファイル
.Sh 書式
.Nm
.Sh 解説
.Nm
ファイルは amd のコンフィギュレーションファイルであり、
am-utils 一式に含まれます。
.Pp
.Nm
は、自動マウントプログラム
.Xr amd 8
用の実行時コンフィギュレーション情報を含んでいます。
.Sh ファイルフォーマット
このファイルはセクションとパラメータから成ります。
セクションは角括弧で囲んだセクション名で始まり、
次のセクションが開始するかファイルの終りに達するまで続きます。
セクションには
.Sq name = value
という形式のパラメータが含まれます。
.Pp
このファイルは行指向です。すなわち、改行までの各行は、
1 つのコメント、セクション名あるいはパラメータを表します。
継続行を記述する方法はありません。
.Pp
セクション名、パラメータ名及びその値は、大文字小文字を区別します。
.Pp
パラメータ中の最初の等号のみ重要な意味を持ちます。
最初の等号の前後にある空白は取り除かれます。
セクション及びパラメータ名の中の先頭、末尾あるいは途中にある空白は
意味を持ちません。
パラメータ値の先頭や末尾にある空白は取り除かれます。
パラメータ値内部に空白を置くことはできません。
ただし、
.Sq name = Qq some\ value
のように、パラメータ値全体を二重引用符でくくった場合を除きます。
.Pp
井桁記号 (#) で始まる行は無視されます。
空白文字のみ含む行も同じく無視されます。
.Pp
パラメータ記述において等号に続く値は文字列ないしブール値です。
文字列の場合、空白を含まなければ引用符は不要です。
ブール値の場合は yes あるいは no と記述します。
すべての値において大文字小文字が区別されます。
キャッシュタイムアウトのような一部の項目は数値をとります。
.Sh セクション
.Ss "[global] セクション"
このセクションのパラメータは、
.Nm amd
全体に適用されるか、または、これに続くすべての通常マップに適用されます。
1 つのコンフィギュレーションファイルにはグローバルセクションをただ 1 つだけ
定義すべきです。
.Pp
このセクションはコンフィギュレーションファイル中の最初に記述しておくことを
強く推奨します。
もしそうしなければ、グローバルセクションより先に記述された
通常マップセクションでは、後に定義されるグローバルな値を利用できません。
.Ss "通常 [/map] セクション"
通常の (グローバルでない) セクションのパラメータは、単一のマップエントリに
適用されます。例えば、マップセクション
.Bq Pa /homes
が定義されていると、それに続くすべてのパラメータは、
amd が管理しているマウントポイント
.Pa /homes
に適用されます。
.Sh パラメータ
.Ss "すべてのセクションに共通のパラメータ"
以下のパラメータは、グローバルセクションとマップ用セクションの
いずれにおいても指定できます。
マップ用セクションで指定されたエントリは、
デフォルト値あるいはグローバルセクションで定義された値を上書きします。
そのような共通のパラメータがグローバルセクション中でのみ指定されている場合は、
それに続くすべての通常マップセクションにその指定が適用されます。
.Bl -tag -width 4n
.It Ic browsable_dirs Xo
(文字列、デフォルト = no)
.Xc
.Qq yes
にすると、amd のトップレベルのマウントポイントが
.Xr readdir 3
呼び出しでブラウズ可能になります。
つまり、例えば
.Xr ls 1
を実行することでそのディレクトリでどんなキーがマウント可能か
知ることができるようになります。
必ずしもすべてのエントリが
.Xr readdir 3
に対して見えるようになるわけではありません。
.Qq Pa /default
エントリやワイルドカードエントリ、さらに
.Qq Pa /
を含むエントリは見えるようになりません。
もしこのオプションに対して
.Qq full
を指定すれば、
.Qq Pa /default
以外はすべて見えるようになります。
注意:
もし
.Qq ls -l
や
.Qq ls -F
のような
.Xr stat 2
を行おうとするコマンドを走らせると、
.Nm amd
はそのマップ中の
.Em すべての
エントリをマウントしようとします。
これはよく
.Em mount storm
と呼ばれます。
.It Ic map_options Xo
(文字列、デフォルト = オプションなし)
.Xc
このオプションは、例えば
.Ql cache\&:\&=all
のように、
.Nm amd
のコマンドラインでマップオプションを指定するのと同じ働きをします。
.It Nm map_type Xo
(文字列、デフォルト = 全マップタイプを検索)
.Xc
このオプションが指定されると、amd は指定されたタイプに対するマップのみ
初期化します。
.Nm amd
のデフォルトのマップ検索は時間がかかるうえ、
使っていなくても
.Tn NIS
を初期化してしまうといった
望まない副作用を持つことがありますが、
そのような事態を避けるのにこのオプションが有効です。
指定可能な値は以下のものです。
.Pp
.Bl -tag -width "nisplus" -compact
.It Ic file
通常ファイル
.It Ic hesiod
MIT の hesiod ネームサービス
.It Ic ldap
軽量ディレクトリアクセスプロトコル
.It Ic ndbm
(新しい) dbm 形式のハッシュファイル
.It Ic nis
ネットワークインフォメーションサービス (バージョン 2)
.It Ic nisplus
ネットワークインフォメーションサービス プラス (バージョン 3)
.It Ic passwd
ローカルのパスワードファイル
.It Ic union
ユニオンマップ
.El
.It Ic mount_type Xo
(文字列、デフォルト = nfs)
.Xc
amd のすべてのマウントタイプで、
.Tn NFS
が必須です。
つまり、実行しているローカルホストに対して、
.Nm amd
はマップのマウントポイントにおける
.Tn NFS
サーバとなります。
もし
.Qq autofs
を指定すると、amd はエラーを記録し、
.Tn NFS
に変換します。
.It Ic search_path Xo
(文字列、デフォルト = サーチパスなし)
.Xc
ファイルマップに対するサーチパスを
(コロンで区切った形式で)
指定します。
サーチパスを用いることで、
各サイトはローカルなマップのカスタマイズや上書きが可能になり、
必要に応じていくつかの場所にマップを分散配置させることができます。
.El
.Ss "グローバルセクションにのみ適用されるパラメータ"
.Bl -tag -width 4n
.It Ic arch Xo
(文字列、デフォルト = コンパイル時の値)
.Xc
.Nm amd
の変数
.Va arch
の値を上書きできます。
.It Ic auto_dir Xo (文字列、デフォルト = Pa /a )
.Xc
.Nm amd
の
.Fl a
オプションと同じです。
実際のマウントポイント用に amd がサブディレクトリを作成する
プライベートディレクトリを設定します。
.It Ic cache_duration Xo
(数値、デフォルト = 300)
.Xc
.Nm amd
の
.Fl c
オプションと同じです。
検索されたマップエントリがキャッシュ中に残る秒数を設定します。
.It Ic cluster Xo
(文字列、デフォルト = クラスタなし)
.Xc
.Nm amd
の
.Fl C
オプションと同じです。使用する、別の
.Tn HP-UX
クラスタを指定します。
.It Ic debug_options Xo
(文字列、デフォルト = デバッグオプションなし)
.Xc
.Nm amd
の
.Fl D
オプションと同じです。
.Nm amd
のデバッグオプションを指定します。
am-utils が
.Fl -enable-debug
を用いてデバッグ機能付きで構築されている場合のみ有効です。
.Qq mem
オプションを含めすべてのオプションが、
.Fl -enable-debug Ns = Ns Ic mem
のようにしてオンにできます。
これら以外の場合、デバッグオプションは無視されます。
オプションはコンマで区切ります。
先頭に文字列
.Qq no
を付けることでその意味を反転できます。
サポートされているデバッグオプション一覧を得るには
.Nm amd Fl v
を実行して下さい。
取りうる値は以下の通りです。
.Pp
.Bl -tag -width "daemon" -compact
.It Ic all
全オプション
.It Ic amq
.Xr amq 8
に登録する
.It Ic daemon
デーモンモードに移行する
.It Ic fork
サーバを fork する
.It Ic full
プログラムトレース
.It Ic info
info サービスに固有のデバッグ情報
(hesiod, nis など)
.It Ic mem 
メモリアロケーションをトレースする
.It Ic mtab
ローカルの
.Pa ./mtab
ファイルを用いる
.It Ic str
文字列操作のデバッグ
.It Ic test
完全なデバッグモードだがデーモンにしない
.It Ic trace
プロトコルのトレース
.El
.It Ic dismount_interval Xo
(数値、デフォルト = 120)
.Xc
.Nm amd
の
.Fl w
オプションと同じです。
キャッシュ期間を超えたファイルシステムのマウントを外そうとするまでの時間を
秒単位で指定します。
.It Ic fully_qualified_hosts Xo
(文字列、デフォルト = no)
.Xc
.Qq yes
に設定すると、
.Nm amd
は完全なホスト名 (fully-qualified host name) を用いて RPC 認証を行います。
システムによってはこの仕組みが必要です。
特にドメインにまたがるマウントを行う場合に必要となります。
この機能を有効にするため、
.Nm amd
の変数
.Va ${hostd}
が用いられます。
.Va ${domain}
は空であってはいけません。
.It Ic hesiod_base Xo
(文字列、デフォルト = automount)
.Xc
hesiod マップのためのベース名を指定します。
.It Ic karch Xo
(文字列、デフォルト = システムのカーネルアーキテクチャ)
.Xc
.Nm amd
の
.Fl k
オプションと同じです。
システムのカーネルアーキテクチャを上書き指定できます。
例えば Sun
(Sparc)
マシンに便利です。
この場合、一つの
.Nm amd
バイナリを作成し、それを複数のマシンで走らせますが、それぞれに
正しい
.Va karch
変数
(例えば sun4c, sun4m, sun4u など)
を設定したいと思うでしょう。
注意: もしこのオプションを指定しなければ、
.Nm amd
は
.Xr uname 3
を用いてそのマシンのカーネルアーキテクチャを判別します。
.It Ic ldap_base Xo
(文字列、デフォルト = 未設定)
.Xc
LDAP のためのベース名を指定します。
.It Ic ldap_cache_maxmem Xo
(数値、デフォルト = 131072)
.Xc
LDAP エントリをキャッシュするために amd が使用する最大メモリ量を指定します。
.It Ic ldap_cache_seconds Xo
(数値、デフォルト = 0)
.Xc
エントリをキャッシュに保持する秒数を指定します。
.It Ic ldap_hostports Xo
(文字列、デフォルト = 未設定)
.Xc
LDAP のホストおよびポート値を指定します。
.It Ic local_domain Xo
(文字列、デフォルト = サブドメインなし)
.Xc
.Nm amd
の
.Fl d
オプションと同じです。
ローカルのドメイン名を指定します。
このオプションが与えられない場合、
完全なホスト名から最初の要素を取り除くことでドメイン名を決定します。
.It Ic log_file Xo (文字列、デフォルト = Ns Pa /dev/stderr )
.Xc
.Nm amd
の
.Fl l
オプションと同じです。
.Nm amd
のイベントログを記録するファイル名を指定します。
文字列
.Pa /dev/stderr
を指定すると、
.Nm amd
はイベントを標準エラー出力ファイル記述子に送ります。
もし文字列
.Pa syslog
を指定すると、
.Nm amd
はシステムログ記録機構
.Xr syslogd 8
を用いてイベントを記録します。
デフォルトで用いられる syslog ファシリティは
.Ev LOG_DAEMON
です。
これを変更するには、ログファイル名に続いて、単一のコロンで区切って
ファシリティ名を記述します。例えば
.Pa logfile
として文字列
.Qq syslog:local7
を指定すると、
.Nm amd
は
.Ev LOG_LOCAL7
ファシリティを用いて
.Xr syslog 3
経由でメッセージを記録します
(そのファシリティが当該システムに存在する場合)。
.It Ic log_options Xo
(文字列、デフォルト = ロギングオプションなし)
.Xc
.Nm amd
の
.Fl x
オプションと同じです。
.Nm amd
のロギングオプションを指定します。
複数のオプションはコンマで区切ります。
先頭に
.Dq no
をつけることで、その意味を反転させることができます。
ロギングオプション
.Dq debug
は、
am-utils
が
.Fl -enable-debug
付きで構築された場合のみ利用可能です。
.Nm amd Fl H
を実行するとサポートされているデバッグオプションとロギングオプションの
一覧が得られます。
指定可能な値は以下の通りです。
.Pp
.Bl -tag -width "warning" -compact
.It Ic all
すべてのメッセージ
.It Ic debug
デバッグメッセージ
.It Ic error
重大ではないシステムエラー
.It Ic fatal
重大なエラー
.It Ic info
参考情報
.It Ic map
マップエラー
.It Ic stats
より詳細な統計情報
.It Ic user
重大ではないユーザエラー
.It Ic warn
警告
.It Ic warning
警告
.El
.It Ic nfs_proto Xo
(文字列、デフォルト = まず tcp、次に udp)
.Xc
デフォルトでは、
amd
は TCP を試行し、その次に UDP を試行します。
このオプションを使用すると、
すべての
.Tn NFS
プロトコルに TCP または UDP を強制します。
これは amd maps 中の設定に優先します。
amd
が NFSv3 サポート付きでコンパイルされているが不安定な場合に有用でしょう。
このオプションを使用することで、
NFSv3 サポートが再度必要となるような時まで、
動的に 
(amd
を再コンパイルすることなく) NFSv3 の使用を完全に止められます。
.It Ic nfs_retransmit_counter Xo
(数値、デフォルト = 110)
.Xc
.Nm amd
の
.Fl t Ar interval.counter
オプションの
.Ic counter
部と同じです。
再送カウンタの値を 1/10 秒単位で指定します。
.It Ic nfs_retry_interval Xo
(数値、デフォルト = 8)
.Xc
.Nm amd
の
.Fl t Ar interval.counter
オプションの
.Ic interval
部と同じです。
NFS/RPC の再試行 (UDP のみ) の間の
.Tn NFS
タイムアウトインターバルを
1/10
秒単位で指定します。
この値は、カーネルが
amd
との通信に使用します。
.Pp
.Nm amd
は、カーネルの RPC 再送信機構がマウントの再試行を引き起こすことに
依存しています。
.Ic nfs_retransmit_counter
および
.Ic nfs_retry_interval
の値は、システム全体の再試行インターバルを変更します。
インターバルが長過ぎると、対話的な応答性が落ちます。
インターバルが短か過ぎると、リトライ回数が多くなり過ぎます。
.It Ic nfs_allow_insecure_port Xo
(文字列、デフォルト = no)
.Xc
通常 amd は、非特権ポート
(Unix システムでは 1024 以上のポート)
からの要求を拒否し、特権を持つユーザとカーネルのみが
NFS 要求を送出できるようにします。
しかし、いくつかのカーネル (あるバージョンの Darwin, MacOS X, Linux) には、
ある特定の状況において非特権ポートを使用するバグがあり、
これによって amd は直ちに停止してしまいます。
このパラメータによって、多少セキュリティを犠牲にすることで、
そのようなシステム上でも amd を正常に動作させることができます。
amd のログに "ignoring request from foo:1234, port not reserved" のような
メッセージがあった場合、このパラメータを有効にして、
もう一度試してみてください。
.It Ic nfs_vers Xo
(数値、デフォルト = まずバージョン 3、次に 2)
.Xc
デフォルトでは、
amd
はバージョン 3 を試行し、それからバージョン 2 を試行します。
このオプションを使用すると、
すべての
.Tn NFS
プロトコルに 3 または 2 を強制します。
これは amd maps 中の設定に優先します。
.Nm amd
が NFSv3 サポート付きでコンパイルされているが不安定な場合に有用でしょう。
このオプションを使用することで、
NFSv3 サポートが再度必要となるような時まで、
動的に 
(amd
を再コンパイルすることなく) NFSv3 の使用を完全に止められます。
.It Ic nis_domain Xo
(文字列、デフォルト = ローカル
.Tn NIS
ドメイン名)
.Xc
.Nm amd
の
.Fl y
オプションと同じです。
.Tn NIS
マップを取得するために、別の
.Tn NIS
ドメインを指定します。
デフォルトはシステムのドメイン名です。
.Tn NIS
サポートが利用可能でない場合、このオプションは無視されます。
.It Ic normalize_hostnames Xo
(ブール値、デフォルト = no)
.Xc
.Nm amd
の
.Fl n
オプションと同じです。
.Dq yes
を指定すると、
.Va ${rhost}
の参照先の名前は、前もってホストデータベースからの相対値に正規化されます。
別名 (エイリアス) を
.Qq 公式な
名前に変換する効果があります。
.It Ic os Xo
(文字列、デフォルト = コンパイル時の値)
.Xc
.Nm amd
の
.Fl O
オプションと同じです。
コンパイル時に決まったオペレーティングシステム名を上書きできます。
以前との互換性を保つためには組み込み済みの名前はふさわしくない、
という場合に便利です。
例えば、もし組み込まれた名前が
.Dq sunos5
の場合、これを上書きして
.Dq sos5
とすることで、後者の OS 名を前提に書かれた以前のマップを利用できます。
.It Ic osver Xo
(文字列、デフォルト = コンパイル時の値)
.Xc
.Nm amd
の
.Fl o
オプションと同じです。
コンパイル時に決まったオペレーティングシステムのバージョン番号を
上書きします。
以前との互換性を保つためには組み込み済みのバージョンはふさわしくない、
という場合に便利です。
例えば、もし組み込まれたバージョン番号が
.Dq 2.5.1
の場合、これを上書きして
.Dq 5.5.1
とすることで、後者のバージョンを前提に書かれた以前のマップを利用できます。
.It Ic pid_file Xo (文字列、デフォルト = Ns Pa /dev/stdout )
.Xc
実行しているデーモンのプロセス ID を格納するファイルを指定します。
これを指定しない場合、
.Nm amd
は自分のプロセス ID を標準出力にのみ書き出します。
実行後に
.Nm amd
を kill する際に便利です。
注意: 実行中の
.Nm amd
のプロセス ID は
.Nm amq Fl p
によっても得られます。
このファイルは
.Ar print_pid
オプションがオンの場合のみ使用されます。
.It Ic plock Xo
(ブール値、デフォルト = yes)
.Xc
.Nm amd
の
.Fl S
オプションと同じです。
.Dq yes
を指定すると、実行中の
.Nm amd
の実行可能ページをメモリ上にロックします。
.Xr plock 3
をサポートしているシステムでは、
.Nm amd
プロセスをメモリ上にロックできます。
このようにして、オペレーティングシステムが必要に応じて
.Nm amd
プロセスをスケジュールしたり、ページアウトさせたり、スワップさせたりする
可能性を減らします。
これにより
.Nm amd
の性能は向上しますが、その反面、
.Nm amd
プロセスが使用しているメモリが予約される
(他のプロセスがそのメモリを使えなくなる)
という代償もあります。
.It Ic portmap_program Xo
(数値、デフォルト = 300019)
.Xc
公式の番号とは別の、ポートマップ RPC プログラム番号を指定します。
これは複数の
.Nm amd
プロセスを実行させる場合に便利です。
例えば、メインの
.Nm amd
プロセスに全く影響を与えることなく、別の
.Nm amd
を
.Dq test
モードで実行できます。
安全のため、指定する別のプログラム番号は 300019 から 300029 まで
の範囲になければなりません。
.Nm amq
は、接続するための別のプログラム番号を指定するのに用いる
.Fl P
オプションを持っています。
このように、
.Nm amq
は同じホスト上で実行されている複数の
.Nm amd
プロセスを完全に制御することが可能です。
.It Ic print_pid Xo
(ブール値、デフォルト = no)
.Xc
.Nm amd
の
.Fl p
オプションと同じです。
.Dq yes
を指定すると、
.Nm amd
は起動時にそのプロセス ID を表示します。
.It Ic print_version Xo
(ブール値、デフォルト = no)
.Xc
.Nm amd
の
.Fl v
オプションと同じですが、バージョンを表示しても
.Nm amd
は実行を続けます。
.Dq yes
の場合、
.Nm amd
は、コンフィギュレーション設定やコンパイル時の値を含む
バージョン情報文字列を表示します。
.It Ic restart_mounts Xo
(ブール値、デフォルト = no)
.Xc
.Nm amd
の
.Fl r
オプションと同じです。
.Dq yes
とすると、
.Nm amd
はマウントテーブルを走査して、現在どのファイルシステムがマウントされて
いるのか判断します。その中に自動マウントすべきファイルシステムがあれば、
.Nm amd
はそれを継承します。
.It Ic selectors_on_default Xo
(ブール値、デフォルト = no)
.Xc
.Dq yes
とすると、マップの
.Pa /default
エントリが検索され、そのマップ中の他のすべてのキーのデフォルト値を
設定する前に、すべてのセレクタを処理します。
あるパラメータに基づき、ある完全なマップに対して異なるオプションを
設定したい場合に有用です。
例えば、slip ベースの低速ネットワーク越しの
.Tn NFS
性能を改善するためには、次のようにします。
.Pp
.Bd -literal
/defaults \\
    wire==slip-net;opts:=intr,rsize=1024,wsize=1024 \\
    wire!=slip-net;opts:=intr,rsize=8192,wsize=8192
.Ed
.It Ic show_statfs_entries Xo
(ブール値、デフォルト = no)
.Xc
.Dq yes
とすると、ブラウズ可能なすべてのマップは、
.Qq df
実行時にエントリ数
(key 数)
をあわせて表示します
.Po この機能は、
.Xr statfs 2
呼び出しに対して非 0 値を返すことで実現されています
.Pc
。
.It Ic unmount_on_exit Xo
(ブール値、デフォルト = no)
.Xc
.Dq yes
とすると、
.Nm amd
は関知しているすべてのファイルシステムをアンマウントしようとします。
通常、
.Nm amd
はすべての
(特に)
.Tn NFS
マウントされたファイルシステムをそのまま残します。
注意:
.Ar restart_mounts
オプションまたは
.Fl r
フラグが指定されていない限り、
.Nm amd
は起動時以前にマウントされていたファイルシステムのことを関知しません。
.El
.Ss "通常のマップセクションに適用されるパラメータ"
.Bl -tag -width 4n
.It Ic map_name Xo
(文字列、必須)
.Xc
キーが配置されるマップの名前です。
.It Ic tag Xo
(文字列、デフォルト = タグなし)
.Xc
コンフィギュレーションファイルの各マップエントリにはタグをつけることが
できます。タグが指定されない場合、そのマップセクションは常に
.Nm amd
で処理されます。
タグが指定されている場合、
.Nm amd
に
.Fl T
オプションが指定され、そのコマンドラインオプションの値が
マップセクションのタグ名と一致する場合のみ、
.Nm amd
はそのマップを処理します。
.El
.Sh 使用例
以下に示すものは、私がいつも使っている実際の
.Nm amd
コンフィギュレーションです。
.Bd -literal
# グローバルオプションセクション
[ global ]
normalize_hostnames =    no
print_pid =              no
restart_mounts =         yes
auto_dir =               /n
log_file =               /var/log/amd
log_options =            all
#debug_options =         all
plock =                  no
selectors_on_default =   yes
# config.guess は "sunos5" を選びました。
# 今のところこれを変えようとは思いません。
os =                     sos5
# "os" を設定後 print_version を有効にすると、設定後のものが表示されます。
print_version =          no
map_type =               file
search_path =            /etc/amdmaps:/usr/lib/amd:/usr/local/AMD/lib
browsable_dirs =         yes

# マウントポイントの定義
[ /u ]
map_name =               amd.u

[ /proj ]
map_name =               amd.proj

[ /src ]
map_name =               amd.src

[ /misc ]
map_name =               amd.misc

[ /import ]
map_name =               amd.import

[ /tftpboot/.amd ]
tag =                    tftpboot
map_name =               amd.tftpboot
.Ed
.Sh 関連項目
.Xr amd 8 ,
.Xr amq 8
.Sh 作者
.An Erez Zadok Aq ezk@cs.columbia.edu ,
Department of Computer Science, Columbia University, New York, USA.
.Pp
.An Jan-Simon Pendry Aq jsp@doc.ic.ac.uk ,
Department of Computing, Imperial College, London, UK.
.Pp
am-utils の他の作者並びに貢献者のリストが、am-utils と共に配布されている
.Pa AUTHORS
ファイルにあります。
.Sh 歴史
.Nm amd
ユーティリティは
.Bx 4.4
で初めて登場しました。
