.\"	$NetBSD: netconfig.5,v 1.2 2000/11/08 13:18:28 lukem Exp $
.\" $NetBSD: netconfig.5,v 1.2 2000/11/08 13:18:28 lukem Exp $
.\" %FreeBSD: src/lib/libc/rpc/netconfig.5,v 1.1 2001/03/19 12:49:51 alfred Exp %
.\" $FreeBSD$
.\" WORD:
.\" WORD: transport			トランスポート
.\" WORD: configuration data base	設定データベース
.\" WORD: transport names		トランスポート名
.\" WORD: semantics			セマンティクス
.\" WORD: format			フォーマット
.\" WORD: connectionless		コネクションレス
.\" WORD: connection-oriented		コネクション指向
.\" WORD: ordered			順序付き
.\" WORD: see below			下記参照(下には何もなくてどこを見ろと言うのか..)
.\" WORD: unused			未使用
.\" WORD: parse				構文解析
.\" WORD: names of the libraries	ライブラリ名の並び
.\"
.Dd November 17, 2000
.Dt NETCONFIG 5
.Os
.Sh 名称
.Nm netconfig
.Nd ネットワーク設定データベース
.Sh 書式
.Pa /etc/netconfig
.Sh 解説
.Nm
ファイルでは、
.Dq トランスポート名 
のリストを定義して、それぞれのセマンティクスやプロトコルを記述しています。
.Fx 
では、このファイルは RPC ライブラリのコードだけが使用しています。
.Pp
エントリは次のようなフォーマットになっています:
.Pp
.Ar network_id semantics flags family protoname device libraries
.Pp
エントリを構成するフィールドは次の通りです:
.Bl -tag -width network_id
.It Ar network_id
記述するトランスポートの名称
.It Ar semantics
トランスポートのセマンティクスを記述します。
これは次のうちの一つです:
.Bl -tag -width tpi_cots_ord -offset indent
.It Sy tpi_clts
コネクションレストランスポート
.It Sy tpi_cots
コネクション指向トランスポート
.It Sy tpi_cots_ord
コネクション指向順序付きトランスポート
.It Sy tpi_raw
素のコネクション
.El
.It Ar flags
このフィールドはブランクか(
.Dq Li - 
と指定します)、
または
.Dq Li v 
を含みます。
.Dq Li v 
を含むときは
.Xr getnetconfig 3
関数で見ることが出来るということを表します。
.It Ar family
トランスポートのプロトコルファミリで、
現在は次のうちの一つです:
.Bl -tag -width loopback -offset indent
.It Sy inet6
IPv6
.Pq Dv PF_INET6
プロトコルファミリ
.It Sy inet
IPv4
.Pq Dv PF_INET
プロトコルファミリ
.It Sy loopback
.Dv PF_LOCAL
プロトコルファミリ
.El
.It Ar protoname
トランスポートのプロトコル名で、
現在は
.Sy udp ,
.Sy tcp
のどちらかか、もしくは空です。
.It Ar device
.Fx 
では、このフィールドは常に空です。
.It Ar libraries
.Fx 
では、このフィールドは常に空です。
.El
.Pp
このファイル内のエントリの順序によって、指定されたネットワークタイプに対する 
RPC ライブラリコードのトランスポートの優先順位が決まります。
例えば、サンプルとしてネットワーク設定ファイルが下のようになっていたとします:
.Bd -literal -offset indent
udp6       tpi_clts      v     inet6    udp     -       -
tcp6       tpi_cots_ord  v     inet6    tcp     -       -
udp        tpi_clts      v     inet     udp     -       -
tcp        tpi_cots_ord  v     inet     tcp     -       -
rawip      tpi_raw       -     inet      -      -       -
local      tpi_cots_ord  -     loopback  -      -       -
.Ed
.Pp
このとき、ネットワークタイプとして
.Sy udp
を使用して RPC ライブラリ関数を呼び出すと
.Xr ( rpc 3 
参照)、
まず最初に
.Sy udp6 
を試してから
.Sy udp 
を試します。
.Pp
.Xr getnetconfig 3
や、その関連の関数はこのファイルを構文解析して次のようなフォーマットの
構造体を返します:
.Bd -literal
struct netconfig {
    char *nc_netid;              /* ネットワーク ID */
    unsigned long nc_semantics;  /* セマンティクス (下記参照) */
    unsigned long nc_flag;       /* フラグ (下記参照) */
    char *nc_protofmly;          /* プロトコルファミリ */
    char *nc_proto;              /* プロトコル名 */
    char *nc_device;             /* ネットワークデバイスのパス名 (未使用) */
    unsigned long nc_nlookups;   /* 参照するライブラリの数 (未使用) */
    char **nc_lookups;           /* ライブラリ名の並び (未使用) */
    unsigned long nc_unused[9];  /* 予約 */
};
.Ed
.Sh 関連ファイル
.Bl -tag -width /etc/netconfig -compact
.It Pa /etc/netconfig
.El
.Sh 関連項目
.Xr getnetconfig 3 ,
.Xr getnetpath 3
