.\"***************************************************************************
.\" Copyright (c) 1998,2002 Free Software Foundation, Inc.                   *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: term.5,v 1.10 2002-12-16 00:33:20 horikawa Exp $
.\" $FreeBSD$
.TH TERM 5
.\" WORD: compiled		コンパイル済みの
.\" WORD: linear search		線形探索(パス名から inodeを)
.\" WORD: boolean value		ブール値
.\" WORD: terminate		終端する
.ds n 5
.ds d /usr/share/misc/terminfo
.SH 名称
term \- コンパイル済みの term ファイルの形式
.SH 書式
.B term
.SH 解説
.PP
コンパイル済みの terminfo 属性記述はディレクトリ \fB\*d\fP の下にあります。
\s-1UNIX\s+1 システムの巨大なディレクトリを線形探索するのを避けるため、
\fB\*b/c/name\fP という形の 2 階層の命名規則が用いられます。
(ここで、
.I name
は端末の名前で、
.I c
は
.I name
の最初の文字です。)
ですから、
.I act4
は、 \fB\*d/a/act4\fP というファイル名で見つけることができます。
同じ端末を示す同義な名前は、同じコンパイル済みファイルへの複数の
リンクとして実装されています。
.PP
この形式は、全てのハードウェアで同じになるように選ばれています。
1 バイトが 8 ビット以上であることは仮定していますが、バイトオーダや
符号拡張の方式については仮定していません。
.PP
コンパイル済みのファイルは
.I tic
プログラムにより生成され、
.I setupterm
ルーチンにより読み取られます。
このファイルは 6 つの部分に分割されます。すなわち、
ヘッダ、
端末の名称、
ブール値のフラグ、
数値、
文字列、および
文字列テーブルです。
.PP
ヘッダセクションはファイルの冒頭にあります。
このセクションは、以下に示す形式の short 型の整数 6 個からなります。
これらの整数は
(1) マジックナンバ (8 進で 0432)、
(2) 名称セクションのバイト単位での大きさ、
(3) ブール値のセクションに含まれるバイトの個数、
(4) 数値セクションに含まれる short 型整数の個数、
(5) 文字列セクションに含まれるオフセットの個数 (short 型整数)、
(6) 文字列テーブルのバイト単位での大きさ
です。
.PP
short 型の整数は 2 個の 8 ビットバイトに格納されています。
最初のバイトは値の最下位 8 ビットを、2 番目のバイトは最上位 8 ビットを
含みます。(すなわち、値は 256*second+first と表現されます。)
値 \-1 は 2 バイト 0377, 0377 で表現されますが、その他の負の値は構文違反です。
一般に、この値は、あるケーパビリティがその端末に備わっていないことを
示します。
この形式は \s-1VAX\s+1 と \s-1PDP\s+1-11 のハードウェアに
一致するものであることにご注意下さい
(これらはリトルエンディアンマシンです)。これに一致しないハードウェアの
マシンでは、整数を 2 個のバイトとして読み込み、
リトルエンディアン値を算出する必要があります。
.PP
次に現れるのは端末名セクションです。
これは、端末のさまざまな名前を `|' 文字で区切って列挙した、
terminfo 記述の最初の行を含みます。
このセクションは 1 個の \s-1ASCII NUL\s+1 文字で終端されます。
.PP
ブール型のフラグは、フラグ 1 個につき 1 バイトを占めます。
このバイトは、フラグが存在するかしないかに従って、0 か 1 となる必要があります。
ケーパビリティはファイル <term.h> に含まれるのと同じ順番に並びます。
.PP
数値セクションが偶数バイト目から開始されるように、
ブール値のセクションと数値セクションの間には、
必要なら 1 個のナルバイトを挿入します
(これは PDP-11 のワードアドレスアーキテクチャの名残であり、
元々は奇数バイト境界上のワードをアドレスすることで発生する IOT トラップを
避けるためにデザインされました)。
すべての short 型整数は short 型のワード境界に揃えて配置されます。
.PP
数値セクションはフラグセクションと同様です。
各ケーパビリティは 2 バイトを占め、リトルエンディアンの
short 型整数として格納されます。
もし表現された値が \-1 なら、そのケーパビリティは存在しないものと
解釈されます。
.PP
文字列セクションもまた同様です。
各ケーパビリティは上記の形式に従い、2 バイトの short 型整数として
格納されます。
値 \-1 は、ケーパビリティが存在しないことを意味します。
それ以外の場合、値は、文字列テーブルの先頭からのオフセットとして
解釈されます。
^X や \ec といった記法で示された特殊文字は、その記法を解釈した結果の形で
格納され、印刷可能表現では格納されません。
パッド情報 $<nn> とパラメータ情報 %x は解釈を行なわずそのままの形で
格納されます。
.PP
最後のセクションは文字列テーブルです。これは文字列セクションで参照されている
すべての文字列ケーパビリティの値を含みます。
各文字列はナルで終端されています。
.PP
.I setupterm
ルーチンでは、ファイルに実際に存在するケーパビリティ
とは異なるものが予想され得ることにご注意下さい。
.I setupterm
が再コンパイルされた後にデータベースが更新される
(ファイルにいくつかの未知のエントリが含まれる結果になります)か、
データベースが最後にコンパイルされた後にプログラムが再コンパイルされる
(存在しないエントリを生む結果になります)両方の可能性があります。
ルーチン
.I setupterm
は両方の可能性に備える必要があります \-
これが、データ内に個数と大きさが含まれている理由です。
また、新しいケーパビリティは常に、ブール値、数値、文字列の
ケーパビリティリストのそれぞれの最後に追加しなければなりません。
.PP
数値にリトルエンディアンを使用して他には自ら記述した書式を使用しても、
商用 UNIX バージョンとのバイナリ terminfo エントリの互換性を
信用することは賢くはありません。
問題は、少なくとも 3 種の terminfo (HP-UX AIX, OSF/1) が
SVr1 後に System V がら分岐し、
System V と XSI の Curses 拡張と (バイナリ書式において) 衝突する
拡張ケーパビリティを文字列テーブルに追加したことです。
terminfo ソースの互換性に関する詳細な議論は、
\fBterminfo\fR(\*n) を参照してください。
.PP
例として、Lear-Siegler ADM-3 の記述の 16 進数ダンプを示します。
これは、ポピュラーですが、馬鹿な初期の端末です:
.nf
.sp
adm3a|lsi adm3a,
        am,
        cols#80, lines#24,
        bel=^G, clear=\032$<1>, cr=^M, cub1=^H, cud1=^J,
        cuf1=^L, cup=\\E=%p1%{32}%+%c%p2%{32}%+%c, cuu1=^K,
        home=^^, ind=^J,
.sp
.ft CW
\s-20000  1a 01 10 00 02 00 03 00  82 00 31 00 61 64 6d 33  ........ ..1.adm3
0010  61 7c 6c 73 69 20 61 64  6d 33 61 00 00 01 50 00  a|lsi ad m3a...P.
0020  ff ff 18 00 ff ff 00 00  02 00 ff ff ff ff 04 00  ........ ........
0030  ff ff ff ff ff ff ff ff  0a 00 25 00 27 00 ff ff  ........ ..%.'...
0040  29 00 ff ff ff ff 2b 00  ff ff 2d 00 ff ff ff ff  ).....+. ..-.....
0050  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0060  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0070  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0080  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0090  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00a0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00b0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00c0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00d0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00e0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00f0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0100  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0110  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0120  ff ff ff ff ff ff 2f 00  07 00 0d 00 1a 24 3c 31  ....../. .....$<1
0130  3e 00 1b 3d 25 70 31 25  7b 33 32 7d 25 2b 25 63  >..=%p1% {32}%+%c
0140  25 70 32 25 7b 33 32 7d  25 2b 25 63 00 0a 00 1e  %p2%{32} %+%c....
0150  00 08 00 0c 00 0b 00 0a  00                       ........ .\s+2
.ft R
.fi
.sp
.PP
いくつかの制限: コンパイル済みのエントリは 4096 バイトを超えることが
できません。名前フィールドは 128 バイトを超えることができません。
.SH 関連ファイル
\*d/*/*	コンパイル済みの端末ケーパビリティデータベース
.SH 関連項目
\fBcurses\fR(3X), \fBterminfo\fR(\*n).
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
