<!--
    The FreeBSD Documentation Project
    The FreeBSD Japanese Documentation Project

    $FreeBSD$
    Original revision: 1.30
-->
<!DOCTYPE ARTICLE PUBLIC "-//FreeBSD//DTD DocBook V4.1-Based Extension//EN" [
<!ENTITY % articles.ent PUBLIC "-//FreeBSD//ENTITIES DocBook FreeBSD Articles Entity Set//EN">
%articles.ent;
]>

<!-- Recently, I wanted to figure out how to use some additional fonts that
     I had accumulated.  I finally figured out *how to do it* from the various
     man pages and documentation.  Since it might be of use to other users,
     and I didn't see any reference to this topic in the FAQ or handbook, I
     thought I'd try my hand at a simple cookbook tutorial addressing the
     use of fonts.  I have included my unanswered questions at the end of
     the document.

     Anyway, here's what I put together.  This is my present understanding of
     fonts and how to use them with FreeBSD.  I am sure that there are errors or
     misunderstandings, but it contains enough valid information to allow the
     use of additional fonts with Ghostscript, X11 and Groff.  This is my first
     attempt to write anything along the lines of a tutorial/FAQ, so I am sure
     it is pretty raw.  There are probably better ways to do some of this stuff,
     and I would welcome being corrected.
 -->

<!-- The section "Setting a virtual console to 80x60 line mode" was
     updated to reflect changes in FreeBSD system configuration
     files by Mark Ovens <mark@ukug.uk.FreeBSD.org> 27/5/00
 -->

<article>
  <articleinfo>
    <title>フォントと FreeBSD</title>

    <subtitle>A Tutorial</subtitle>

    <authorgroup>
      <author>
	<firstname>Dave</firstname>

	<surname>Bodenstab</surname>

	<affiliation>
	  <address>
	    <email>imdave@synet.net</email>
	  </address>
	</affiliation>
      </author>
    </authorgroup>

    <pubdate>1996 年 8 月 7 日 (水)</pubdate>

    <legalnotice id="trademarks" role="trademarks">
      &tm-attrib.freebsd;
      &tm-attrib.adobe;
      &tm-attrib.apple;
      &tm-attrib.linux;
      &tm-attrib.microsoft;
      &tm-attrib.opengroup;
      &tm-attrib.general;
    </legalnotice>

    <abstract>
      <para>ここでは FreeBSD の syscons ドライバや
	<application>X11</application>, <application>Ghostscript</application>,
	<application>Groff</application>
        で利用することができるさまざまなフォントファイルについて説明しています。
	また、syscons ディスプレイを 80x60 行モードに切り替える方法や、
	上述のアプリケーションでタイプ 1 フォントを利用する方法を例示します。</para>
    </abstract>
  </articleinfo>

  <sect1 id="intro">
    <title>はじめに</title>

    <para>数多くのフォントのソースを入手することができますが、これらを 
      FreeBSD でどのようにして使うかはあまりよく知られていないかもしれません。
      その答えは、使いたいと思う構成要素の説明書を注意深く探すことによって見つけることができます。
      しかし、これはとても時間がかかる作業です。本チュートリアルは、
      フォントに関して興味がある向きに、
      その近道を教えようと試みるものであります。</para>
  </sect1>

  <sect1 id="terminology">
    <title>基本用語</title>

    <para>フォント形式の種類やそれに関連したフォントファイルの拡張子は多数存在します。
      その内でここで解説するものは以下の通りです。</para>

    <variablelist>
      <varlistentry>
	<term><filename>.pfa</filename>、<filename>.pfb</filename></term>

	<listitem>
	  <para>&postscript; タイプ 1 フォント。拡張子
	    <filename>.pfa</filename> は
	    <emphasis>A</emphasis>scii 形式のそして拡張子
	    <filename>.pfb</filename> は <emphasis>B</emphasis>inary
	    形式を意味する。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>.afm</filename></term>

	<listitem>
	  <para>タイプ 1 フォントに関連するフォントメトリック情報。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>.pfm</filename></term>

	<listitem>
	  <para>タイプ 1 フォントに関連するプリンタ用フォントメトリック情報。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>.ttf</filename></term>

	<listitem>
	  <para>&truetype; フォント。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>.fot</filename></term>

	<listitem>
	  <para>TrueType フォントへの間接的な参照ファイル
	    (実際にはフォントファイルではない)。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>.fon</filename>、<filename>.fnt</filename></term>

	<listitem>
	  <para>スクリーン表示用ビットマップフォント。</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para><filename>.fot</filename> ファイルは、&windows; で用いられ、
      実際の &truetype; フォント (<filename>.ttf</filename>)
      ファイルへのシンボリックリンクに類する役割を果たします。
      <filename>.fon</filename> フォントも Windows で用いられていますが、
      FreeBSD でこの形式のフォントを利用する方法を筆者は知りません。</para>
  </sect1>

  <sect1 id="font-formats">
    <title>どのフォント形式を利用できますか?</title>

    <para>どのフォントファイル形式が有用であるかは、
      利用するアプリケーションに依ります。
      FreeBSD 自身はフォントファイルは利用しません。
      アプリケーションプログラムやドライバ (あるいはその両方) によっては、
      あるフォントファイルを利用するようにできるかもしれません。
      以下は、アプリケーション、及び、
      ドライバとそれが利用できるフォントタイプの拡張子の対応表を簡単に示します。</para>

    <variablelist>
      <varlistentry>
	<term>ドライバ</term>

	<listitem>
	  <variablelist>
	    <varlistentry>
	      <term>syscons</term>

	      <listitem>
		<para><filename>.fnt</filename></para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>アプリケーション</term>

	<listitem>
	  <variablelist>
	    <varlistentry>
	      <term><application>Ghostscript</application></term>

	      <listitem>
		<para><filename>.pfa</filename>、
		  <filename>.pfb</filename>、
		  <filename>.ttf</filename></para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><application>X11</application></term>

	      <listitem>
		<para><filename>.pfa</filename>、
		  <filename>.pfb</filename></para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><application>Groff</application></term>

	      <listitem>
		<para><filename>.pfa</filename>、
		  <filename>.afm</filename></para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><application>Povray</application></term>

	      <listitem>
		<para><filename>.ttf</filename></para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>拡張子 <filename>.fnt</filename> は極めて頻繁に使われています。
      (訳注: この拡張子がフォント (font) という名前から連想しやすいので)
      あるアプリケーションに特化したフォントを作成しようとした際にはいつでも、
      この拡張子が選択される方がそうでないときよりもかなり多いのではないかと著者は疑っています。
      このため、この拡張子を持つファイル全てが同じ形式にはなっていないようです。
      特に、<filename>.fnt</filename> ファイルは 
      FreeBSD 上では syscons によって利用されていますが、これと &ms-dos; や
      &windows; 環境で出会った <filename>.fnt</filename>
      とは同じ形式ではないかもしれません。
      筆者は FreeBSD で提供されている以外の <filename>.fnt</filename>
      ファイルを利用する試みは一切行っていません。</para>
  </sect1>

  <sect1 id="virtual-console">
    <title>仮想コンソールを 80x60 行モードに設定する</title>

    <para>まず、8x8 サイズのフォントがロードされていなくてはなりません。
      そのためには、<filename>/etc/rc.conf</filename>
      に以下の行が含まれているべきです
      (フォントの名称をあなたの locale に対応するものに書き換えてください)。</para>

    <informalexample>
      <programlisting>font8x8="iso-8x8"		# font 8x8 from /usr/share/syscons/fonts/* (or NO).</programlisting>
    </informalexample>

    <para>実際にモードを切り替えるコマンドは
      &man.vidcontrol.1; です。</para>

    <informalexample>
      <screen>&prompt.user; <userinput>vidcontrol VGA_80x60</userinput></screen>
    </informalexample>

    <para>&man.vi.1; のような、さまざまなスクリーン指向のプログラムに対して、
      現在の画面サイズが分かるようにしておかなくてはなりません。これは 
      <command>ioctl</command> を通じて (&man.syscons.4; などの)
      コンソールドライバに呼び掛けることで行われ、</para>

    <para>これらを一度に済ませるために、
      これらのコマンドを起動用のスクリプトに書いておき、
      これをシステム起動時に実行するかもしれません。
      この方法では <filename>/etc/rc.conf</filename> に以下の行を追加します
    </para>

	<informalexample>
	  <programlisting>allscreens_flags="VGA_80x60"	# Set this vidcontrol mode for all virtual screens
	  </programlisting>
	</informalexample>

    <para>参考文献: &man.rc.conf.5;、&man.vidcontrol.1;</para>
  </sect1>

  <sect1 id="type1-fonts-x11">
    <title>タイプ 1 フォントを <application>X11</application> で利用する</title>

    <para><application>X11</application> では、
      <filename>.pfa</filename> 形式、もしくは、
      <filename>.pfb</filename> 形式のフォントのどちらでも利用できます。
      <application>X11</application> では、フォントは
      <filename>/usr/X11R6/lib/X11/fonts</filename>
      以下のさまざまなサブディレクトリに置かれています。
      それぞれのディレクトリにある
      <filename>fonts.dir</filename> ファイルの内容によって、
      それぞれのフォントのファイルと <application>X11</application>
      上でのフォント名が関連付けられています。</para>

    <para><filename>Type1</filename>
      という名前のディレクトリが既に存在しています。
      新しいフォントを追加する最も簡単な方法は、
      このディレクトリのそのフォントファイルを置くことです。
      新しいフォントは別なディレクトリに置いておき、<filename>Type1</filename>
      ディレクトリに追加フォントへのシンボリックリンクを張る方がより優れています。
      なぜなら、この方法をとることでオリジナルで供給されているフォントと混乱することなく、
      これらのフォントを追加した跡を残すことがより簡単にできるからです。
      この方法は、例えば、次のように行います。</para>

    <informalexample>
      <screen><lineannotation>フォントファイルを入れるディレクトリを作成します。</lineannotation>
&prompt.user; <userinput>mkdir -p /usr/local/share/fonts/type1</userinput>
&prompt.user; <userinput>cd /usr/local/share/fonts/type1</userinput>

<lineannotation>ここに .pfa または .pfb ファイルと .afm ファイルを置きます。</lineannotation>
<lineannotation>フォントの readme ファイルやその他のドキュメントをこのディ</lineannotation>
<lineannotation>レクトリに置いても構いません。</lineannotation>
&prompt.user; <userinput>cp /cdrom/fonts/atm/showboat/showboat.pfb .</userinput>
&prompt.user; <userinput>cp /cdrom/fonts/atm/showboat/showboat.afm .</userinput>

<lineannotation>フォントのクロスリファレンスのためにインデックスを変更します。</lineannotation>
&prompt.user; <userinput>echo showboat - InfoMagic CICA, Dec 1994, /fonts/atm/showboat &gt;&gt;INDEX</userinput></screen>
    </informalexample>

    <para>さて、新しいフォントを <application>X11</application> で利用するためには、
      そのフォントファイルを利用できるようにして、
      フォント名のファイルを更新する必要があります。
      <application>X11</application> のフォント名は次のようになっています。</para>

    <informalexample>
      <screen>-bitstream-charter-medium-r-normal-xxx-0-0-0-0-p-0-iso8859-1
     |        |      |    |   |     |  | | | | | |    \    \
     |        |      |    |   |     \  \ \ \ \ \ \     +----+- character set
     |        |      |    |   \      \  \ \ \ \ \ +- average width
     |        |      |    |    \      \  \ \ \ \ +- spacing
     |        |      |    \     \      \  \ \ \ +- vertical res.
     |        |      |     \     \      \  \ \ +- horizontal res.
     |        |      |      \     \      \  \ +- points
     |        |      |       \     \      \  +- pixels
     |        |      |        \     \      \
  foundry  family  weight   slant  width  additional style</screen>
    </informalexample>

    <para>新しいフォントそれぞれに対して、新しい名前を付ける必要があります。
      フォント付属のドキュメントにフォントに関する情報があれば、
      名前を作る際の基になるかもしれません。そのような情報がない場合は、
      フォントに対して &man.strings.1;
      を使うと何らかのアイデアが得ることができます。例えば、</para>

    <informalexample>
      <screen>&prompt.user; <userinput>strings showboat.pfb | more</userinput>
%!FontType1-1.0: Showboat 001.001
%%CreationDate: 1/15/91 5:16:03 PM
%%VMusage: 1024 45747
% Generated by Fontographer 3.1
% Showboat
 1991 by David Rakowski.  Alle Rechte Vorbehalten.
FontDirectory/Showboat known{/Showboat findfont dup/UniqueID known{dup
/UniqueID get 4962377 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
12 dict begin
/FontInfo 9 dict dup begin
 /version (001.001) readonly def
 /FullName (Showboat) readonly def
 /FamilyName (Showboat) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -106 def
 /UnderlineThickness 16 def
 /Notice (Showboat
 1991 by David Rakowski.  Alle Rechte Vorbehalten.) readonly def
end readonly def
/FontName /Showboat def
--stdin--</screen>
    </informalexample>

    <para>この情報から、次のような名前が考えられます:</para>

    <informalexample>
      <screen>-type1-Showboat-medium-r-normal-decorative-0-0-0-0-p-0-iso8859-1</screen>
    </informalexample>

    <para>この名前の構成は次の通りです。</para>

    <variablelist>
      <varlistentry>
	<term>型 (foundry)</term>

	<listitem>
	  <para>新フォントは <literal>type1</literal>
	    と名付けることにしましょう。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>族 (family)</term>

	<listitem>
	  <para>フォントの名前です。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>重み (weight)</term>

	<listitem>
	  <para>normal (普通)、bold (太い)、medium (中間)、
	    semibold (やや太め) などがあります。上記の
	    &man.strings.1; の出力より、
	    フォントの重みは <emphasis>medium</emphasis> 
	    であると考えられます。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>傾斜 (slant)</term>

	<listitem>
	  <para><emphasis remap=bf>r</emphasis>oman (ローマン体)、<emphasis
	      remap=bf>i</emphasis>talic (イタリック体)、<emphasis
	      remap=bf>o</emphasis>blique (斜字体) などがあります。
	    <emphasis>ItalicAngle</emphasis> が0になっていることにより、
	    <emphasis>roman</emphasis> を使っています。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>幅</term>

	<listitem>
	  <para>normal (普通)、wide (幅広)、condensed (圧縮)、extended(拡張)
	    などがあります。上記で調べた結果から、
	    <emphasis>normal</emphasis> を仮定します。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>追加スタイル</term>

	<listitem>
	  <para>通常は省略されますが、フォントに装飾用 (decorative)
	    英大文字が含まれていることをここで示します。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>スペーシング</term>

	<listitem>
	  <para>proportional (プロポーショナル (訳注:
	    字形に応じて幅が変化するフォント)) または monospaced
	    (単一幅フォント) があります。ここでは
	    <emphasis>Proportional</emphasis> としてありますが、これは 
	    <emphasis>isFixedPitch</emphasis> が false (偽)
	    になっているためです。</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>これらの名前は全て任意なのですが、
      既存の慣習と互換性を保つよう努力すべきでしょう。
      <application>X11</application> プログラムでは、
      フォントはワイルドカードを含んだ名前で参照されます。ですから、
      フォント名は何らかの意味づけを持って選択されるべきでしょう。
      (訳注 : 適当なフォントを探すとき、)
      ある人は単純に以下の名前を使うことから始めるかもしれません。

      <informalexample>
	<screen>&hellip;-normal-r-normal-&hellip;-p-&hellip;
	</screen>
      </informalexample>

      そして、
      &man.xfontsel.1;
      で該当するフォントを調べてみて、そのフォントの形を見ながら、
      名前を調節するかもしれません。</para>

    <para>それでは、ここまでの例を完結させることにしましょう。</para>

    <informalexample>
      <screen><lineannotation>X11 に対してフォントをアクセスできるようにします。</lineannotation>
&prompt.user; <userinput>cd /usr/X11R6/lib/X11/fonts/Type1</userinput>
&prompt.user; <userinput>ln -s /usr/local/share/fonts/type1/showboat.pfb .</userinput>

<lineannotation>fonts.dir と fonts.scale を編集して、フォントを記述する行を追加し、最初の行にある総フォント数を増やします。</lineannotation>
&prompt.user; <userinput>ex fonts.dir
:1p
25
:1c
26
.
:$a
showboat.pfb -type1-showboat-medium-r-normal-decorative-0-0-0-0-p-0-iso8859-1
.
:wq</userinput>

<lineannotation><filename>fonts.scale</filename> は <filename>fonts.dir</filename>と同一内容のようですので&hellip;</lineannotation>
&prompt.user; <userinput>cp fonts.dir fonts.scale</userinput>

<lineannotation>X11 に内容が変更されたことを伝えます。</lineannotation>
&prompt.user; <userinput>xset fp rehash</userinput>

<lineannotation>新しいフォントを試してみます。</lineannotation>
&prompt.user; <userinput>xfontsel -pattern -type1-*</userinput></screen>
    </informalexample>

    <para>参考文献: &man.xfontsel.1;、&man.xset.1;、<citetitle>The X
	Windows System in a Nutshell</citetitle>、<ulink
	url="http://www.ora.com/">O'Reilly &amp;
	Associates</ulink></para>
  </sect1>

  <sect1 id="type1-fonts-ghostscript">
    <title>タイプ 1 フォントを Ghostscript で利用する</title>

    <para><application>Ghostscript</application> では、
      <filename>Fontmap</filename> ファイルに従ってフォントを参照して
      います。このファイルを <application>X11</application> の
      <filename>fonts.dir</filename>
      ファイルと同様な方法で変更しなくてはなりません。
      <application>Ghostscript</application> では、
      <filename>.pfa</filename> 形式または <filename>.pfb</filename>
      形式のフォントのいずれか一方を使用することができます。
      前章の例で登場したフォントを使って、ここではこのフォントを
      <application>Ghostscript</application>
      で使用する方法について述べます。</para>

    <informalexample>
      <screen><lineannotation>フォントを Ghostscript のフォントディレクトリに置きます。</lineannotation>
&prompt.user; <userinput>cd /usr/local/share/ghostscript/fonts</userinput>
&prompt.user; <userinput>ln -s /usr/local/share/fonts/type1/showboat.pfb .</userinput>

<lineannotation>Ghostscript にフォントを認識させるために Fontmap を編集します。</lineannotation>
&prompt.user; <userinput>cd /usr/local/share/ghostscript/4.01</userinput>
&prompt.user; <userinput>ex Fontmap
:$a
/Showboat        (showboat.pfb) ; % From CICA /fonts/atm/showboat
.
:wq</userinput>

<lineannotation>Ghostscript を用いてフォントを試してみます。</lineannotation>
&prompt.user; <userinput>gs prfont.ps</userinput>
Aladdin Ghostscript 4.01 (1996-7-10)
Copyright (C) 1996 Aladdin Enterprises, Menlo Park, CA.  All rights
reserved.
This software comes with NO WARRANTY: see the file PUBLIC for details.
Loading Times-Roman font from /usr/local/share/ghostscript/fonts/tir_____.pfb...
 /1899520 581354 1300084 13826 0 done.
GS&gt;<userinput>Showboat DoFont</userinput>
Loading Showboat font from /usr/local/share/ghostscript/fonts/showboat.pfb...
 1939688 565415 1300084 16901 0 done.
&gt;&gt;showpage, press &lt;return&gt; to continue&lt;&lt;
&gt;&gt;showpage, press &lt;return&gt; to continue&lt;&lt;
&gt;&gt;showpage, press &lt;return&gt; to continue&lt;&lt;
GS&gt;<userinput>quit</userinput></screen>
    </informalexample>

    <para>参考文献: <application>Ghostscript バージョン
      4.01</application> で配布されている
      <filename>fonts.txt</filename></para>
  </sect1>

  <sect1 id="type1-fonts-groff">
    <title>タイプ 1 フォントを Groff で利用する</title>

    <para>ここまでで新しいフォントを <application>X11</application> と
      <application>Ghostscript</application>
      の両方で用いることができるようになりましたが、
      この新しいフォントをどのようにすれば
      <application>groff</application> で使うことができるでしょうか?
      まず第一に、&postscript; のタイプ 1 フォントを扱っていますから、
      これを適用できる <application>groff</application> デバイスは
      <emphasis>ps</emphasis> デバイスです。次に、各々のフォントを
      <application>groff</application> で使用できるようにフォントファ
      イルを作らなくてはなりません。
      <application>groff</application> でのフォント名は
      <filename>/usr/share/groff_font/devps</filename>
      の中のファイル名になります。上述の例では、フォントファイルは 
      <filename>/usr/share/groff_font/devps/SHOWBOAT</filename>
      とすることができるでしょう。このファイルは <application>groff</application>
      によって提供されているツールを用いて生成しなくてはなりません。</para>

    <para>最初に <command>afmtodit</command> というツールを使います。
      このコマンドは通常ではインストールされませんので、
      ソースプログラム群から該当プログラムを取り出さなくてはなりません。
      このファイルの最初の一行を変更しなくてはならないことが分かっています。
      著者は次のようにしました。</para>

    <informalexample>
      <screen>&prompt.user; <userinput>cp /usr/src/gnu/usr.bin/groff/afmtodit/afmtodit.pl /tmp</userinput>
&prompt.user; <userinput>ex /tmp/afmtodit.pl
:1c
#!/usr/bin/perl -P-
.
:wq</userinput></screen>
    </informalexample>

    <para>このツールはメトリックファイル (<filename>.afm</filename> 拡張子)
      から <application>groff</application> フォントファイルを生成してくれます。
      フォント使用方法例を続けることにしましょう。</para>

    <informalexample>
      <screen><lineannotation><filename>.afm</filename> ファイルの多くは Mac 形式&hellip すなわち行が ^M で区切られています。
これを行を ^J で区切る &unix; スタイルに変換する必要があります。</lineannotation>
&prompt.user; <userinput>cd /tmp</userinput>
&prompt.user; <userinput>cat /usr/local/share/fonts/type1/showboat.afm |
	tr '\015' '\012' &gt;showboat.afm</userinput>

<lineannotation>そして、groff フォントファイルを生成します。</lineannotation>
&prompt.user; <userinput>cd /usr/share/groff_font/devps</userinput>
&prompt.user; <userinput>/tmp/afmtodit.pl -d DESC -e text.enc /tmp/showboat.afm generate/textmap SHOWBOAT</userinput></screen>
    </informalexample>

    <para>これでフォントを SHOWBOAT という名前で参照することができました。</para>

    <para>システムでプリンタを扱うために
      <application>Ghostscript</application> を使用しているならば、
      これで作業は完了しました。しかしながら、本物の &postscript;
      プリンタを使っている場合は、フォントを使用可能にする為に、
      当該フォントをプリンタにダウンロードする必要があります
      (showboat フォントがプリンタに偶然にも最初から組み込まれている場合、
      もしくはプリンタからアクセスされるフォントディスクの中に入ってい
      る場合はこの限りではありません)。
      フォント利用の最終段階として、
      ダウンロード可能な形式のフォントを生成します。
      ツール <command>pfbtops</command> は (訳注 : <filename>.pfb</filename> 形式から)
      <filename>.pfa</filename> 形式のフォントを生成するために、そして、
      <filename>download</filename> というファイルを編集し、
      フォントの内部名を参照するように変更しなくてはなりません。
      この内部名は以下で示すように groff 
      フォントファイルから容易に調べることができます。</para>

    <informalexample>
      <screen><lineannotation><filename>.pfa</filename> フォントファイルを生成する。</lineannotation>
&prompt.user; <userinput>pfbtops /usr/local/share/fonts/type1/showboat.pfb &gt;showboat.pfa</userinput></screen>
    </informalexample>

    <para>もちろん、<filename>.pfa</filename> が既に利用可能であれば、
      参照できるようにシンボリックリンクを張って下さい。</para>

    <informalexample>
      <screen><lineannotation>内部フォント名を得る。</lineannotation>
&prompt.user; <userinput>fgrep internalname SHOWBOAT</userinput>
internalname Showboat

<lineannotation>該当フォントをダウンロードしなくてはならないことを groff に通知する。</lineannotation>
&prompt.user; <userinput>ex download
:$a
Showboat      showboat.pfa
.
:wq</userinput></screen>
    </informalexample>

    <para>フォントを試用する。</para>

    <informalexample>
      <screen>&prompt.user; <userinput>cd /tmp</userinput>
&prompt.user; <userinput>cat &gt;example.t &lt;&lt;EOF
.sp 5
.ps 16
This is an example of the Showboat font:
.br
.ps 48
.vs (\n(.s+2)p
.sp
.ft SHOWBOAT
ABCDEFGHI
.br
JKLMNOPQR
.br
STUVWXYZ
.sp
.ps 16
.vs (\n(.s+2)p
.fp 5 SHOWBOAT
.ft R
To use it for the first letter of a paragraph, it will look like:
.sp 50p
\s(48\f5H\s0\fRere is the first sentence of a paragraph that uses the
showboat font as its first letter.
Additional vertical space must be used to allow room for the larger
letter.
EOF</userinput>
&prompt.user; <userinput>groff -Tps example.t &gt;example.ps</userinput>

<lineannotation>ghostscript/ghostviewを使って表示する。</lineannotation>
&prompt.user; <userinput>ghostview example.ps</userinput>

<lineannotation>印刷する (訳注 : プリンタ名は適宜変更して下さい)。</lineannotation>
&prompt.user; <userinput>lpr -Ppostscript example.ps</userinput></screen>
    </informalexample>

    <para>参考文献:
      <filename>/usr/src/gnu/usr.bin/groff/afmtodit/afmtodit.man</filename>、
      &man.groff.font.5;、&man.groff.char.7;、&man.pfbtops.1;</para>
  </sect1>

  <sect1 id="convert-truetype">
    <title>TrueType フォントを groff 用に groff/PostScript
      フォーマットに変換する</title>

    <para>これにはいくつかユーティリティが必要ですが、
      ベースシステムの一部としてインストールされてはいないので若干の作業が必要となります。
      インストールするものは:</para>

    <variablelist>
      <varlistentry>
	<term><command>ttf2pf</command></term>

	<listitem>
	  <para>TrueType から PostScript への変換ユーティリティです。
	    これは TrueType フォントからアスキーフォントメトリック
	    (<filename>.afm</filename>) ファイルへの変換を行います。</para>

	  <para>現時点では <ulink
	      url="http://sunsite.icm.edu.pl/pub/GUST/contrib/BachoTeX98/ttf2pf/"></ulink>
	    から入手できます。
	    注意: これらのファイルは PostScript によるプログラムなので、
	    <keycap>Shift</keycap> キーを押しながらリンクをクリックして
	    ディスクにダウンロードしてください。
	    さもないとあなたのブラウザは <application>ghostview</application>
	    を立ちあげます。</para>

	  <para>重要なファイルは:</para>

	  <itemizedlist>
	    <listitem>
	      <para><filename>GS_TTF.PS</filename></para>
	    </listitem>

	    <listitem>
	      <para><filename>PF2AFM.PS</filename></para>
	    </listitem>

	    <listitem>
	      <para><filename>ttf2pf.ps</filename></para>
	    </listitem>
	  </itemizedlist>

	  <para>大文字と小文字が奇妙に混在しているのは、
	    DOS シェルのことも考慮しているためです。
	    <filename>ttf2pf.ps</filename> はそれ以外のファイルを
	    大文字として扱いますので、
	    ファイル名の変更はそれに対応させてください
	    (実際には <filename>GS_TTF.PS</filename> と
	    <filename>PFS2AFM.PS</filename> は、一応
	    <application>Ghostscript</application> の配布物の一部ですが、
	    個別のユーティリティとしても問題なく利用できます。
	    FreeBSD には後者が入っていないようです)。
	    <filename>/usr/local/share/groff_font/devps</filename>
	    にインストールするとよいかもしれません。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><command>afmtodit</command></term>

	<listitem>
	  <para>はアスキーフォントメトリックファイルから
	    <application>groff</application> とともに使うフォントファイルを作ります。
	    これは通常、
	    <filename>/usr/src/contrib/groff/afmtodit</filename>
	    ディレクトリに存在していて、
	    使えるようにするには作業が必要です。</para>

	  <note>
	    <para>もしも <filename>/usr/src</filename>
	      ツリーで作業をすることを躊躇うなら、
	      このディレクトリの内容を作業用の場所にコピーすればいいです。</para>
	  </note>

	  <para>作業エリアで以下のようにしてこのユーティリティします。</para>

	  <screen><prompt>#</prompt> <userinput>make -f Makefile.sub afmtodit</userinput>
	  </screen>

	  <para>もし、まだ存在していなければ
	    <filename>/usr/contrib/groff/devps/generate/textmap</filename>
	    を	    
	    <filename>/usr/share/groff_font/devps/generate</filename>
	    にコピーします。</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>これらのユーティリティが所定の場所に収まったら
      いつでも開始できます。</para>

    <orderedlist>
      <listitem>
	<para><filename>.afm</filename> ファイルを以下のようにして作ります。</para>

	<screen><prompt>%</prompt> <userinput>gs <optional>-dNODISPLAY</optional> <optional>-q</optional> -- ttf2pf.ps <replaceable>TTF_name</replaceable> <optional><replaceable>PS_font_name</replaceable> <optional><replaceable>AFM_name</replaceable></optional></optional></userinput>
	</screen>

	<para>ここで、<replaceable>TTF_name</replaceable> はあなたの
	  TrueType フォントの名前で、<replaceable>PS_font_name</replaceable>
	  は <filename>.pfa</filename> ファイルのためのファイル名で、
	  <replaceable>AFM_name</replaceable> は <filename>.afm</filename>
	  ファイルに望む名前です.
	  <filename>.pfa</filename> や <filename>.afm</filename>
	  用の出力ファイル名を明示しなければ、
	  デフォルト名は TrueType フォントファイル名から作成されます。</para>

	<para>この時、アスキー PostScript フォントメトリックファイルである
	  <filename>.pfa</filename> ファイルも同時に作られます
	  (<filename>.pfb</filename> はバイナリ形式です)。
	  これは不要となるでしょうが、(私が考えるに)
	  フォントサーバには役立つでしょう。</para>

	<para>例として、30f9 バーコードフォントをデフォルトのファイル名で変換するには以下のようにします。</para>

	<screen><prompt>%</prompt> <userinput>gs -dNODISPLAY -- ttf2pf.ps 3of9.ttf</userinput>
Aladdin Ghostscript 5.10 (1997-11-23)
Copyright (C) 1997 Aladdin Enterprises, Menlo Park, CA.  All rights reserved.
This software comes with NO WARRANTY: see the file PUBLIC for details.
Converting 3of9.ttf to 3of9.pfa and 3of9.afm.
	</screen>

	<para>変換後のフォントを 
	  <filename>A.pfa</filename> と <filename>B.afm</filename>
	  にするなら以下のようにします。</para>

	<screen><prompt>%</prompt> <userinput>gs -dNODISPLAY -- ttf2pf.ps 3of9.ttf A B</userinput>
Aladdin Ghostscript 5.10 (1997-11-23)
Copyright (C) 1997 Aladdin Enterprises, Menlo Park, CA.  All rights reserved.
This software comes with NO WARRANTY: see the file PUBLIC for details.
Converting 3of9.ttf to A.pfa and B.afm.
	</screen>
      </listitem>

      <listitem>
	<para><application>groff</application> PostScript ファイルを作ります。</para>

	<para>以下のコマンドの実行が用意なように
	  <filename>/usr/share/groff_font/devps</filename> に
	  ディレクトリを変更します。
	  恐らく root 特権が必要になるでしょう
	  (そこでの作業が気にいらないなら、このディレクトリの
	  <filename>DESC</filename>、
	  <filename>text.enc</filename>、
	  <filename>generate/textmap</filename>
	  ファイルが参照されるということに注意してください)。</para>

	<screen><prompt>%</prompt> <userinput>afmtodit -d DESC -e text.enc file.afm \
	    generate/textmap <replaceable>PS_font_name</replaceable></userinput>
	</screen>

	<para>ここで、<filename>file.afm</filename>
	  は <replaceable>AFM_name</replaceable>
	  で、上で <command>ttf2pf.ps</command> で作ったものです。
	  <replaceable>PS_font_name</replaceable>
	  はコマンドから使われるフォント名で、
	  &man.groff.1; がこのフォントを参照するために使うものです。
	  たとえば、最初の <command>tiff2pf.ps</command>
	  コマンドを上述のように行っていたとすると、
	  3of9 バーコードフォントは以下のコマンドで作成できます。</para>

	<screen><prompt>%</prompt> <userinput>afmtodit -d DESC -e text.enc 3of9.afm \
                 generate/textmap 3of9</userinput>
	</screen>

	<para>得られる <replaceable>PS_font_name</replaceable>
	  ファイル (この例では <filename>3of9</filename>)
	  はディレクトリ <filename>/usr/share/groff_font/devps</filename>
	  に、コピーするなり移動するなりして置かれることに気をつけてください。</para>

	<para><filename>ttf2pf.ps</filename> がわりつけるフォント名は
	  TrueType フォントファイル中に見つかったものになります。
	  それとは異なる名前を使いたかったら、
	  <filename>.afm</filename> ファイルを編集してから
	  <command>afmtodit</command> を実行する必要があります。
	  &man.groff.1; から &man.gs.1; へパイプするつもりならば、
	  その名前は同時にフォントマップファイルで使われているものである必要があります。</para>
      </listitem>
    </orderedlist>
  </sect1>

  <sect1 id="truetype-for-other-programs">
    <title>TrueType フォントを他のプログラムで使うことができますか?</title>

    <para>TrueType フォント形式は Windows、Windows 95、Mac
      で用いられます。この形式は極めて有名であり、
      非常にたくさんのフォントが利用できます。</para>

    <para>残念ながら、この形式を (訳注: FreeBSD で) この形式を利用でき
      るアプリケーションは、筆者が知る限りほとんどなく、
      <application>Ghostscript</application> と
      <application>Povray</application> しか思いつきません。
      ドキュメントによれば、<application>Ghostscript</application> の
      対応は不十分であり、タイプ 1 フォントより粗悪な結果になるようです。
      <application>Povray</application> バージョン 3 もまた TrueType
      フォントを利用可能ですが、筆者は、ドキュメントを一連のレイトレー
      スしたページとして作成する人が多いのではないかと疑っています :-)。</para>
      <!--
        もとの訳注は少しずれているように感じたので削りました。
	  I rather doubt many people will be creating documents
	  as a series of raytraced pages
	とドキュメントを作る部分は未来形なので、むしろ
	  でも、TrueType フォントを使わないで、ドキュメントまで ray trace
	  して作っちゃうユーザーが多いんじゃないの
	という冗談で、PovRay の開発側のドキュメントに対する苦情の成分は
	ないのではないかと思います。
      -->

    <para>このなんとも悲惨な状況は変わりつつあります。
      <ulink url="http://www.freetype.org/">FreeType プロジェクト</ulink>
      では FreeType の便利なツールを開発しています。</para>

    <itemizedlist>
      <listitem>
        <para>XFree86 4.x に含まれている freetype モジュール。
	詳細は <ulink
        url="&url.books.handbook;/x-fonts.html">FreeBSD
        ハンドブック</ulink>か <ulink
        url="http://www.xfree86.org/4.0.2/fonts.html">XFree86 4.0.2
        Fonts</ulink> ページを見てください。</para>
      </listitem>

      <listitem>
	<para><application>X11</application> 用の
	  <application>xfsft</application> フォントサーバは
	  一般のフォントに加えて TrueType フォントを提供します。
	  現在ベータ版であるにもかかわらずたいへん評判がいいものです。
	  詳しくは
	  <ulink url="http://www.dcs.ed.ac.uk/home/jec/programs/xfsft/">
	  Juliusz Chroboczek's page</ulink> をごらんください。
	  FreeBSD への移植についての情報は
	  <ulink url="http://math.missouri.edu/~stephen/software/">
	  Stephen Montgomery's software page</ulink> にあります。</para>
      </listitem>

      <listitem>
	<para><application>xfstt</application> は
	  <application>X11</application> 用のもうひとつのフォントサーバで、
	  <ulink url=" ftp://sunsite.unc.edu/pub/Linux/X11/fonts/"></ulink>
	  から入手できます。</para>
      </listitem>

      <listitem>
	<para><command>ttf2bdf</command> というプログラムは、
	X の環境下で TrueType フォントのセットから BDF
	形式のファイルを作るものです。
	Linux 用のバイナリが
	<ulink url="ftp://crl.nmsu.edu/CLR/multiling/General/"></ulink> から
	入手できます。</para>
      </listitem>

      <listitem>
	<para>そしてその他 &hellip;</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="obtaining-additional-fonts">
    <title>どこでフォントを入手できますか?</title>

    <para>インターネット上でたくさんのフォントを利用することができます。
      これらは完全に無料であるか、シェアウェアです。加えて、
      たくさんのフォントが収録されたあまり高価ではない CDROM
      がたくさんあります。インターネットでのアクセスポイント
      (1996年8月現在)を以下に示します。</para>

    <itemizedlist>
      <listitem>
	<para><ulink
	    url="http://www.simtel.net/"></ulink></para>
      </listitem>

      <listitem>
	<para><ulink url="http://www.freshmeat.net/"></ulink></para>
      </listitem>

      <listitem>
	<para>Ports Collection の <filename>x11-fonts/</filename></para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="additional-questions">
    <title>その他の質問</title>

    <itemizedlist>
      <listitem>
	<para><filename>.pfm</filename> ファイルを利用するものはあるのか?</para>
      </listitem>

      <listitem>
	<para><filename>.afm</filename> ファイルを <filename>.pfa</filename> 
	  もしくは <filename>.pfb</filename> から作成できるか?</para>
      </listitem>

      <listitem>
	<para>非標準キャラクタ名がある PostScript フォントを
	  <application>groff</application> キャラクタにマッピングする
	  ファイルをどのように作成するか?</para>
      </listitem>

      <listitem>
	<para>xditview と devX??
	デバイスで新たなファイル全てにアクセスするためのセットアップをすることができるか?</para>
      </listitem>

      <listitem>
	<para><application>Povray</application> と
	  <application>Ghostscript</application> で TrueType
	  フォントを利用する例があるといいだろう。</para>
      </listitem>
    </itemizedlist>
  </sect1>
</article>
