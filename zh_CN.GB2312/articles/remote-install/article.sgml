<!--
     The FreeBSD Documentation Project
     The FreeBSD Chinese (Simplified) Documentation Project

     Original Revision: 1.6
-->
<!DOCTYPE article PUBLIC "-//FreeBSD//DTD DocBook V4.1-Based Extension//EN" [
<!ENTITY % articles.ent PUBLIC "-//FreeBSD//ENTITIES DocBook FreeBSD Articles Entity Set//EN">
%articles.ent;
]>

<article>
  <articleinfo>
    <title>&os; 操作系统在无远程控制台下的远程安装</title>

    <author>
      <firstname>Daniel</firstname>
      <surname>Gerzo</surname>
      <affiliation>
	<address><email>danger@FreeBSD.org</email></address>
      </affiliation>
      <!-- 11 April 2008 -->
    </author>

    <pubdate>$FreeBSD$</pubdate>

    <legalnotice id="trademarks" role="trademarks">
      &tm-attrib.freebsd;
      &tm-attrib.general;
    </legalnotice>

    <copyright>
      <year>2008</year>
      <holder>The &os; Documentation Project</holder>
    </copyright>

    <abstract>
      <para>本文归档了当远程控制台不可用的情况下 &os; 操作系统的远程安装。
        文章背后的主要灵感归功于和 &a.mm; 还有由 &a.pjd;
        提供的宝贵输入合作的结果。</para>
    </abstract>
  </articleinfo>

  <sect1 id="background">
    <title>背景</title>

    <para>世界上有很多的服务器主机供应商，
      但是他们中只有很少的一部分正式支持 &os;，
      他们通常为他们提供的服务器上安装 &linux;
      发行版提供支持。</para>

    <para>在某些情况下，如果你请求这些公司他们会安装一个你首选的 &linux;
      发行版。有了这个选择，我们将试图安装 &os;。
      在其他情况下，他们可能提供一个急救系统用于紧急情况。
      使用这个可能将有利于我们的目的更好的实现。</para>

    <para>本文涵盖了引导一个包含 RAID-1 及 <application>ZFS</application>
      性能的 &os; 系统的远程安装的基本安装配置所必须的步骤。</para>
  </sect1>

  <sect1 id="intro">
    <title>简介</title>

    <para>这一节会摘要本文的目的以及更好阐述这里所概括的东西。
      本文中的这些指令将有益于那些使用不支持 &os;
      的托管设施提供的服务的人。</para>

    <procedure>
      <step>
        <para>如我们提到过的 <link linkend="background">背景</link>
          的那一节，许多的有声望的服务器主机托管公司提供了各种的急救系统。
          可以从他们自己的 <acronym>局域网</acronym> 启动并可以通过
          <application>SSH</application> 访问。
          他们通常提供这种支持目的用于帮助他们的顾客修正损坏的操作系统。
          如文章将说明的，我们将能够通过这些急救系统的帮助来安装 &os;。</para>
	<!-- XXXTR: Solaris has a restore command, something like
	     sysrestore, FreeBSD Should have one too. -->
      </step>

      <step>
        <para>文章的下一小节会描述如何配置，并在本地机器上构建最小限度的
          &os;。该版本最终会从随机存储盘运行到远程机器上面去。
          这将允许我们使用 <application>sysinstall</application>
          实用程序从一个 <acronym>FTP</acronym>
          镜像安装一套完整的 &os; 操作系统。</para>
      </step>

      <step>
        <para>文章的剩余内容除了描述 <application>ZFS</application>
          文件系统的配置还将描述系统本身的安装步骤。</para>
      </step>
    </procedure>

    <sect2 id="requirements">
      <title>需求</title>

      <para>想要成功地做下去，你必须：</para>

      <itemizedlist>
	<listitem>
          <para>拥有一个可通过 <application>SSH</application>
            网络访问的操作系统。</para>
	</listitem>

	<listitem>
          <para>理解 &os; 的安装过程</para>
	</listitem>

	<listitem>
          <para>熟悉 &man.sysinstall.8; 实用程序</para>
	</listitem>

	<listitem>
          <para>拥有 &os; 安张的 <acronym>ISO</acronym>
            镜像文件或者易于使用的 <acronym>CD</acronym></para>
	</listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 id="preparation">
    <title>准备工作 - <application>mfsBSD</application></title>

    <para>在 &os; 可能安装到目标系统上之前，
      需要先构建一个最小化的从磁盘启动的 &os; 操作系统映像文件。
      此方法中新系统必须能够从网络访问，
      并且安装的其他过程能够在没有远程访问到系统控制台的情况下完成。</para>

    <para><application>mfsBSD</application> 设置工具能够被用来构建一个微小的
      &os; 映像。如 <application>mfsBSD</application> 名字的含义
      (<quote>mfs</quote> 的意思是 <quote>memory file system</quote> 内存文件系统)，
      最后的映像全部从随机存储器运行。多亏了这个特性，
      磁盘的操作将不会有任何限制，因此它能够被用来安装一个完整的 &os; 操作系统。
      <application>mfsBSD</application> 的主页在
      <ulink url="http://people.freebsd.org/~mm/mfsbsd/"></ulink>，
      包含了指向最新释出的设置工具。</para>

    <para>请注意关于 <application>mfsBSD</application>
      内幕以及它所有的适用都超出了本文的内容，
      感兴趣的读者应该去查阅 <application>mfs</application>
      的原始文档得到更多详细内容。</para>

    <para>下载并解压出最新的 <application>mfsBSD</application>
      版本，并改变自己的当前工作目录到存在 <application>mfsBSD</application>
      脚本文件的目录：</para>

    <screen>&prompt.root; <userinput>fetch http://people.freebsd.org/~mm/mfsbsd/mfsbsd-latest.tar.gz</userinput>
&prompt.root; <userinput>tar xvzf mfsbsd-<replaceable>1.0-beta1</replaceable>.tar.gz</userinput>
&prompt.root; <userinput>cd <replaceable>mfsbsd-1.0-beta1</replaceable>/</userinput></screen>

    <sect2 id="mfsbsd-config">
      <title><application>mfsBSD</application> 的配置</title>

      <para>引导 <application>mfsBSD</application> 之前，
        必须设置一些重要的配置选项。
        最重要的是我们必须有正确地，自然地，网络配置。
        最适合的方法配置网络选项取决于我们是否事先知道我们会用到的网络接口，
        而且网络接口驱动程序应被系统为我们的硬件载入。
        我们将看到 <application>mfsBSD</application> 
        如何能够在任一种情况下被配置。</para>

      <para>另外一件重要的事情是设置 <username>root</username> 的密码。
        这将通过编辑 <filename>conf/rootpw.conf</filename> 文件来完成。
        请记住该文件将把你的密码保存在简单的文本中，
        所以在此我们不推荐你使用真实的密码。然而，
        这只是一个临时使用一次的密码，你可以在随后安装好的系统中更改它。</para>

      <sect3>
        <title>编辑 <filename>conf/interfaces.conf</filename> 的方法</title>

        <para>如果我们安装好的网卡是未知类型的，
          我们可以使用 <application>mfsBSD</application> 的自动探测功能。
          <application>mfsBSD</application> 启动脚本能够探测到正确的驱动来使用，
          基于网络接口的 MAC 地址，我们假设在
          <filename>conf/interfaces.conf</filename> 文件中设置如下选项：</para>

	<programlisting>initconf_interfaces="ext1"
initconf_mac_ext1="00:00:00:00:00:00"
initconf_ip_ext1="192.168.0.2"
initconf_netmask_ext1="255.255.255.0"</programlisting>

        <para>别忘了添加 <literal>defaultrouter</literal>
          信息到 <filename>conf/rc.conf</filename> 文件中：</para>

	<programlisting>defaultrouter="192.168.0.1"</programlisting>
      </sect3>

      <sect3>
        <title>编辑 <filename>conf/rc.conf</filename> 的方法</title>

        <para>当网络接口的驱动是已知类型的，使用
          <filename>conf/rc.conf</filename> 文件添加联网选项会更加方便。
          该文件的语法跟 &os; 中标准的 &man.rc.conf.5; 文件的语法相同。</para>

        <para>例如，当你知道被使用的将是一个 &man.re.4; 网络接口设备，
          你可以在 <filename>conf/rc.conf</filename> 文件中设置如下选项：</para>

	<programlisting>defaultrouter="192.168.0.1"
ifconfig_re0="inet 192.168.0.2 netmask 255.255.255.0"</programlisting>
      </sect3>
    </sect2>

    <sect2 id="mfsbsd-build">
      <title>构建一个 <application>mfsBSD</application> 映像</title>

      <para>构建一个 <application>mfsBSD</application>
        映像文件的过程是非常简单明了的。</para>

      <para>第一步是挂载 &os; 的安装 <acronym>CD</acronym>，
        或者挂载安装 <acronym>ISO</acronym> 文件到
        <filename class="directory">/cdrom</filename>。
        因为例子的缘故，在文章中我们将假定你下载的是 &os; 7.0-RELEASE
        <acronym>ISO</acronym> 文件。使用 &man.mdconfig.8;
        实用程序挂载 <acronym>ISO</acronym> 映像文件到
        <filename class="directory">/cdrom</filename> 目录非常简单：</para>

      <screen>&prompt.root; <userinput>mdconfig -a -t vnode -u 10 -f <replaceable>7.0-RELEASE-amd64-disc1.iso</replaceable></userinput>
&prompt.root; <userinput>mount_cd9660 /dev/md10 /cdrom</userinput></screen>

      <para>紧接着，构建可启动的 <application>mfsBSD</application>
        映像：</para>

      <screen>&prompt.root; <userinput>make BASE=/cdrom/<replaceable>7.0-RELEASE</replaceable></userinput></screen>

      <note>
        <para>上面的 <command>make</command> 命令必须在
          <application>mfsBSD</application> 目录树的最高一层运行，也就是：
          <filename class="directory">~/mfsbsd-1.0-beta1/</filename>。</para>
      </note>
    </sect2>

    <sect2>
      <title>启动 <application>mfsBSD </application></title>

      <para>现在 <application>mfsBSD</application> 映像已经准备好了，
        必须把它上传到远程的一个正在运行的急救系统上或者一个预安装了
        &linux; 发行版的系统上。最适合做这个工作的工具是
        <application>scp</application>：</para>

      <screen>&prompt.root; <userinput>scp disk.img root@192.168.0.2:.</userinput></screen>

      <para>想要正确的引导 <application>mfsBSD</application> 映像，
        必须把它安放在机器的第一块（可启动）设备上。
        这可能会和使用的例子我们假定的一样，第一块可启动磁盘设备是
        <devicename>sda</devicename>：</para>

      <screen>&prompt.root; <userinput>dd if=/root/disk.img of=/dev/sda bs=1m</userinput></screen>

      <para>如果一切正常，该映像现在应该存在于第一块设备的
        <acronym>MBR</acronym>（主引导区）而机器也应该能够被启动了。
        使用工具 &man.ping.8; 来查看机器是否被正确启动。
        一旦它回复在线状态，就应该能够使用 <username>root</username>
        用户和配置好的密码通过 &man.ssh.1; 来访问它了。</para>
    </sect2>
  </sect1>

  <sect1 id="installation">
    <title>&os; 操作系统的安装</title>

    <para><application>mfsBSD</application> 成功被引导后它就应该能够通过
      &man.ssh.1; 登入了。这一节会描述如何创建 slices 并标记 slices 的 label，
      为 RAID-1 配置 <application>gmirror</application>，
      还有如何使用 <application>sysinstall</application> 
      来安装一个最小的FreeBSD操作系统版本。</para>

    <sect2>
      <title>准备磁盘</title>

      <para>首要的任务是为 &os; 分配磁盘空间，也就是，
        创建 slices 和 partitions。很显然，
        当前运行的系统是全部被载入到系统内存中的因此操作磁盘将没有任何问题。
        要完成这个任务，可以是使用 <application>sysinstall</application>
        或者 &man.fdisk.8; 中的二者任一并结合工具 &man.bsdlabel.8;。</para>

      <para>在开始时，将所有磁盘都标记成空的，
        在每个磁盘上重复如下命令：</para>

      <screen>&prompt.root; <userinput>dd if=/dev/zero of=/dev/<replaceable>ad0</replaceable> count=2</userinput></screen>

      <para>下面，使用你喜欢的工具创建 slices 并标记磁盘 label。
        比较简单的方法是使用 <application>sysinstall</application>，
        强大也可能几乎没有漏洞方法是使用标准的基于文本的 &unix; 工具，
        类似于 &man.fdisk.8; 和 &man.bsdlabel.8; 
        这些工具的使用也会在这一节中包括。前者已经被包括在 &os; 手册的
        <ulink url="&url.books.handbook;/install-steps.html">安装FreeBSD</ulink>
        一章中了。如本节中刚提到的，这篇文章会展示如何设置一个带有 RAID-1
        和 <application>ZFS</application> 性能的系统。我们的设置由一个小工具
        &man.gmirror.8; 镜像为 <filename class="directory">/</filename> (root)，
        <filename class="directory">/usr</filename> 和
        <filename class="directory">/var</filename> 文件系统，
        并把剩余的磁盘空间被分配为 &man.zpool.8; 镜像出的
        <application>ZFS</application> 文件系统。请注意，
        <application>ZFS</application> 文件系统将在 &os;
        操作系统成功安装并启动后才会被配置。</para>

      <para>下面的例子会描述如何去创建 slices 和 labels，
        在每个 partition 上初始化 &man.gmirror.8;
        并如何在每个被镜像过的 partition 上创建
        <application>UFS2</application> 文件系统：</para>

      <screen>&prompt.root; <userinput>fdisk -BI /dev/ad0</userinput> <co id="fdisk">
&prompt.root; <userinput>fdisk -BI /dev/ad1</userinput>
&prompt.root; <userinput>bsdlabel -wB /dev/ad0s1</userinput> <co id="bsdlabel-writing">
&prompt.root; <userinput>bsdlabel -wB /dev/ad1s1</userinput>
&prompt.root; <userinput>bsdlabel -e /dev/ad0s1</userinput> <co id="bsdlabel-editing">
&prompt.root; <userinput>bsdlabel /dev/ad0s1 > /tmp/bsdlabel.txt && bsdlabel -R /dev/ad1s1 /tmp/bsdlabel.txt</userinput> <co id="bsdlabel-restore">
&prompt.root; <userinput>gmirror label root /dev/ad[01]s1a</userinput> <co id="gmirror1">
&prompt.root; <userinput>gmirror label var /dev/ad[01]s1d</userinput>
&prompt.root; <userinput>gmirror label usr /dev/ad[01]s1e</userinput>
&prompt.root; <userinput>gmirror label -F swap /dev/ad[01]s1b</userinput> <co id="gmirror2">
&prompt.root; <userinput>newfs /dev/mirror/root</userinput> <co id="newfs">
&prompt.root; <userinput>newfs /dev/mirror/var</userinput>
&prompt.root; <userinput>newfs /dev/mirror/usr</userinput></screen>

      <calloutlist>
	<callout arearefs="fdisk">
          <para>在整个磁盘上创建一个 slice
            并初始化包含在磁盘第一个扇区启动代码。
            重复在系统上全部的磁盘上执行此命令。</para>
	</callout>

	<callout arearefs="bsdlabel-writing">
          <para>为每块磁盘写入一个包括启动代码的内容的标准
            label。</para>
	</callout>

	<callout arearefs="bsdlabel-editing">
          <para>现在，手动去编辑磁盘的 label。可以查阅 &man.bsdlabel.8;
            的联机手册来找到如何建立 partitions 的方法。创建如下
            partions，<literal>a</literal> 为
            <filename class="directory">/</filename> (root) 文件系统，
            <literal>b</literal> 为 swap 交换空间，
            <literal>d</literal> 为
            <filename class="directory">/usr</filename>
            还有最后 <literal>f</literal> 被用于
            <application>ZFS</application>。</para>
	</callout>

	<callout arearefs="bsdlabel-restore">
          <para>引入你刚才创建的 label 到第二块磁盘，
            所以两块磁盘会使用同样的 label。</para>
	</callout>

	<callout arearefs="gmirror1">
          <para>在每个 partition 上初始化 &man.gmirror.8;。</para>
	</callout>

	<callout arearefs="gmirror2">
          <para>注意 <option>-F</option> 选项被用在 swap
            交换分区的 partition。 &man.gmirror.8;
            这个指令认为设备处于可靠的状态除非电源系统故障。</para>
	</callout>

	<callout arearefs="newfs">
          <para>在每个被镜像的分区上创建一个
            <application>UFS2</application> 的文件系统。</para>
        </callout>
      </calloutlist>
    </sect2>

    <sect2>
      <title>系统安装</title>

      <para>这是最重要的一部分。
        此节将描述如何在我们上一小节已经准备好的磁盘上安装一个最小的
        &os; 版本。要达成这个目的，所有的文件安系统需要被挂载乃至于
        <application>sysinstall</application> 可以把 &os;
        系统的内容写到磁盘上：</para>

      <screen>&prompt.root; <userinput>mount /dev/mirror/root /mnt</userinput>
&prompt.root; <userinput>mkdir /mnt/var /mnt/usr</userinput>
&prompt.root; <userinput>mount /dev/mirror/var /mnt/var</userinput>
&prompt.root; <userinput>mount /dev/mirror/usr /mnt/usr</userinput></screen>

      <para>当你做完这些时，打开 &man.sysinstall.8;。
        从主菜单选择自定义 <guimenuitem>Custom</guimenuitem> 安装。
        选中 <guimenuitem>Options</guimenuitem> 选项然后按回车确认。
        使用方向键获取帮助，移动鼠标指针到 <literal>Install Root</literal>
        选项，按 <keycap>空格</keycap> 更改为
        <filename class="directory">/mnt</filename>。
        按 <keycap>回车</keycap> 提交你的更改并使用
        <keycap>q</keycap> 退出 <guimenuitem>Options</guimenuitem>
        （选项）菜单。</para>

      <warning>
        <para>注意这一步骤非常重要，如果被跳过了，
          <application>sysinstall</application>
          将不能安装 &os;。</para>
      </warning>

      <para>到 <guimenuitem>Distributions</guimenuitem>（发行版）菜单选项，
            使用方向键移动鼠标指针到 <option>Minimal</option>（最小化）选项，
            并使用 <keycap>空格键</keycap> 选中该选项。
            本文使用了最小版本来保存网络联通信息，因为系统本身会通过
            <application>ftp</application> 来安装。使用
            <option>Exit</option>（退出）选项退出这个菜单。</para>

      <note>
        <para><guimenuitem>Partition</guimenuitem> 和
          <guimenuitem>Label</guimenuitem> 菜单将被跳过，
          这些没有多少价值了。</para>
      </note>

      <para><guimenuitem>Media</guimenuitem>（媒介）菜单，
        选择 <option>FTP</option> 选项。
        选择一个距离你最近的镜像站点并交给
        <application>sysinstall</application>
        假定网络已经配置完好。你将再回到
        <guimenuitem>Custom</guimenuitem>
        （自定义）菜单。</para>

      <para>最后，选择最后的选项来执行系统的安装过程，
        <guimenuitem>Commit</guimenuitem>，
        当安装完成后退出 <application>sysinstall</application>
        即可。</para>
    </sect2>

    <sect2>
      <title>后期安装步骤</title>

      <para>&os; 操作系统现在应该安装完毕了；通常情况下，
        安装过程还没有结束。还需要进行一些安装后期的步骤使得容许
        &os; 在将来启动并能够登入系统。</para>

      <para>你现在必须 &man.chroot.8; 
        到刚安装的全新的系统中来完成安装。
        使用如下命令： </para>

      <screen>&prompt.root; <userinput>chroot /mnt</userinput></screen>

      <para>要达到我们的目的，进行如下步骤：</para>

      <itemizedlist>
	<listitem>
          <para>拷贝 <literal>GENERIC</literal>（通用）内核到
            <filename class="directory">/boot/kernel</filename>
            目录：</para>

	  <screen>&prompt.root; <userinput>cp -Rp /boot/GENERIC/* /boot/kernel</userinput></screen>
	</listitem>

	<listitem>
          <para>创建 <filename>/etc/rc.conf</filename>，
            <filename>/etc/resolv.conf</filename> 还有
            <filename>/etc/fstab</filename> 文件。
            不要忘记正确地设置网络信息并在
            <filename>/etc/rc.conf</filename> 
            文件中启用 <application>sshd</application>。
            <filename>/etc/fstab</filename>
            文件内容类似于下面的内容：</para>

	  <programlisting># Device                Mountpoint      FStype  Options         Dump    Pass#
/dev/mirror/swap        none            swap    sw              0       0
/dev/mirror/root        /               ufs     rw              1       1
/dev/mirror/usr         /usr            ufs     rw              2       2
/dev/mirror/var         /var            ufs     rw              2       2
/dev/cd0                /cdrom          cd9660  ro,noauto       0       0</programlisting>
	</listitem>

	<listitem>
          <para>创建 <filename>/boot/loader.conf</filename>
            文件，并写入如下内容：</para>

	  <programlisting>geom_mirror_load="YES"
zfs_load="YES"</programlisting>
	</listitem>

	<listitem>
          <para>执行下面的命令，使得
            <application>ZFS</application> 在下次启动后可用：</para>

	  <screen>&prompt.root; <userinput>echo 'zfs_enable="YES"' >> /etc/rc.conf </userinput></screen>
	</listitem>

	<listitem>
          <para>可以用 &man.adduser.8; 工具来添加额外的用户。
            不要忘记添加一个用户到 <groupname>wheel</groupname>
            组，这样你可以在重新启动后获得 root 权限。</para>
	</listitem>

	<listitem>
          <para>反复检验你的设置是否正确。</para>
	</listitem>
      </itemizedlist>

      <para>现在你的系统在下次启动后应该可用了。使用
        &man.reboot.8; 命令重新启动你的系统。</para>
    </sect2>
  </sect1>

  <sect1 id="zfs">
    <title>ZFS</title>

    <para>如果你的系统重新启动后还完好，现在应该能够登入了。
      欢迎来到崭新的 &os; 安装，进行远程的不使用远程控制台的安装。</para>

    <para>最后还剩下的步骤是配置 &man.zpool.8; 并创建一些
      &man.zfs.8; 文件系统。建立并管理
      <application>ZFS</application> 非常简单。
      首先，创建一个镜像的pool：</para>

    <screen>&prompt.root; <userinput>zpool create tank mirror /dev/ad[01]s1f</userinput></screen>

    <para>再接着,创建一些文件系统：</para>

    <screen>&prompt.root; <userinput>zfs create tank/ports</userinput>
&prompt.root; <userinput>zfs create tank/src</userinput>
&prompt.root; <userinput>zfs set compression=gzip tank/ports</userinput>
&prompt.root; <userinput>zfs set compression=on tank/src</userinput>
&prompt.root; <userinput>zfs set mountpoint=/usr/ports tank/ports</userinput>
&prompt.root; <userinput>zfs set mountpoint=/usr/src tank/src</userinput></screen>

    <para>这就是全部步骤了。如果你对 &os; 上的
      <application>ZFS</application> 感兴趣，请查阅 &os;  WIKI 中的
      <ulink url="http://wiki.freebsd.org/ZFS">ZFS</ulink> 一节。</para>
  </sect1>
</article>
