<!--
     The FreeBSD Italian Documentation Project

     $FreeBSD$
     Original revision: 1.39
-->

<!DOCTYPE article PUBLIC "-//FreeBSD//DTD DocBook V4.1-Based Extension//EN" [
<!ENTITY % articles.ent PUBLIC "-//FreeBSD//ENTITIES DocBook FreeBSD Articles Entity Set//EN">
%articles.ent;
]>

<article lang="it">
  <articleinfo>
    <title>Installazione e Utilizzo di FreeBSD con altri Sistemi
      Operativi</title>

    <authorgroup>
      <author>
        <firstname>Jay</firstname>

        <surname>Richmond</surname>

        <affiliation>
          <address><email>jayrich@sysc.com</email></address>
        </affiliation>
      </author>
    </authorgroup>

    <pubdate>6 Agosto 1996</pubdate>

    <legalnotice id="trademarks" role="trademarks">
      &tm-attrib.freebsd;
      &tm-attrib.ibm;
      &tm-attrib.linux;
      &tm-attrib.microsoft;
      &tm-attrib.powerquest;
      &tm-attrib.general;
    </legalnotice>

    <abstract>
      <para>Questo documento spiega come far coesistere felicemente
        FreeBSD con altri sistemi operativi come Linux, &ms-dos;,
        &os2;, e &windows; 95.
        Un ringraziamento speciale va a: Annelise Anderson
        <email>andrsn@stanford.edu</email>, Randall Hopper
        <email>rhh@ct.picker.com</email>, e &a.jkh;.</para>

      &trans.it.max;
    </abstract>
  </articleinfo>

  <sect1>
    <title>Introduzione</title>

    <para>Molta gente non pu&ograve; far convivere questi sistemi operativi
      senza avere a disposizione un hard disk di grosse dimensioni,
      perci&ograve; sono state incluse informazioni speciali sui drive EIDE
      di grosse dimensioni.  Poich&eacute; ci sono cos&igrave; tante
      combinazioni di possibili sistemi operativi e configurazioni di hard disk,
      la <xref linkend="ch5"> potrebbe esserti di aiuto pi&ugrave;
      di altre.  Contiene descrizioni di specifiche configurazioni che
      usano molteplici sistemi operativi.</para>

    <para>Questo documento assume che tu abbia gi&agrave; fatto posto sul tuo
      hard disk per un altro sistema operativo.  Ogni volta che
      ripartizioni il tuo hard disk, corri il rischio di distruggere
      e quindi perdere i dati sulle partizioni originali.  In ogni caso,
      se il tuo hard disk &egrave; completamente occupato dal DOS, potresti
      usare FIPS (incluso nel CDROM di FreeBSD nella directory
      <filename class="directory">\TOOLS</filename> oppure via
      <ulink url="ftp://ftp.FreeBSD.org/pub/FreeBSD/tools/">ftp</ulink>).
      Ti permette di ripartizionare il tuo hard disk senza distruggere i
      dati gi&agrave; contenuti.  C'&egrave; anche un programma commerciale
      chiamato <application>&partitionmagic;</application>, che ti permette
      di ridimensionare e cancellare partizioni senza conseguenze.</para>
  </sect1>

  <sect1 id="ch2">
    <title>Panoramica sui Boot Manager</title>

    <para>Si tratta solo di brevi descrizioni dei diversi boot manager che
      potresti trovare.  A seconda del tuo computer, potresti trovare
      utile usarne pi&ugrave; di uno sullo stesso sistema.</para>

    <variablelist>
      <varlistentry>
        <term>Boot Easy</term>

        <listitem>
          <para>Questo &egrave; il boot manager standard fornito con FreeBSD.
            Ha la possibilit&agrave; di far partire qualsiasi cosa, incluso BSD,
            &os2; (HPFS), &windows; 95 (FAT e FAT32), e Linux.
            Le partizioni vengono scelte con i tasti funzione (F1-F12).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Boot Manager di &os2;</term>

        <listitem>
          <para>Questo fa partire FAT, FAT32, HPFS, FFS (FreeBSD), ed EXT2
            (Linux).  Le partizioni vengono scelte usando i tasti freccia.
            L'&os2; Boot Manager &egrave;
            l'unico ad usare una propria partizione separata, diversamente
            dagli altri, che usano il master boot record (MBR).  Di conseguenza,
            deve essere installato prima del 1024esimo cilindro per evitare
            problemi di avvio.  Pu&ograve; far partire Linux usando LILO quando
            questo &egrave; parte del settore di avvio, non dell'MBR.
            Leggi gli <ulink
              url="http://www.linuxresources.com/LDP/HOWTO/HOWTO-INDEX.html">HOWTO
              di Linux</ulink> sul World Wide Web per avere pi&ugrave;
            informazioni su come far partire Linux con il boot manager di
            &os2;.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>OS-BS</term>

        <listitem>
          <para>Questa &egrave; un'alternativa a Boot Easy.  Ti d&agrave;
            pi&ugrave; controllo sul processo di avvio, con la
            possibilit&agrave; di impostare la partizione di default da cui
            partire e il timeout di avvio.
            La versione beta di questo programma ti permette di avviare
            scegliendo il sistema operativo con i tasti freccia.  &Egrave;
            incluso nel cd di FreeBSD nella directory
            <filename>\TOOLS</filename> oppure via <ulink
              url="ftp://ftp.FreeBSD.org/pub/FreeBSD/tools/">ftp</ulink>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>LILO, o LInux LOader</term>

        <listitem>
          <para>Questo &egrave; un boot manager limitato.  Far&agrave; partire
            FreeBSD, sebbene siano necessari alcuni accorgimenti e sistemazioni
            nel file di configurazione.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <note id="fat32">
      <title>A proposito di FAT32</title>

      <para>FAT32 &egrave; il rimpiazzo al file system FAT incluso nella Release
        Beta SR2 di Microsoft, che dovrebbe essere installata
        con &windows; 95 a partire dalla fine del 1996.  Converte il
        normale file system FAT e ti permette di usare cluster di
        dimensioni pi&ugrave; piccole per hard disk di dimensioni maggiori.
        Inoltre FAT32 modifica il settore di avvio tradizionale e la tabella
        di allocazione, rendendola incompatibile con alcuni Boot
        Manager.</para>
    </note>
  </sect1>

  <sect1 id="ch3">
    <title>Una Installazione Tipica</title>

    <para>Diciamo che ho due grandi hard disk EIDE e voglio installarci
      FreeBSD, Linux, e &windows; 95.</para>

    <para>Ecco come potrei fare usando questi due hard disk:</para>

    <itemizedlist>
      <listitem>
        <para><filename>/dev/wd0</filename> (Primo hard disk)</para>
      </listitem>

      <listitem>
        <para><filename>/dev/wd1</filename> (Secondo hard disk)</para>
      </listitem>
    </itemizedlist>

    <para>Tutti e due hanno 1416 cilindri.</para>

    <procedure>
      <step>
        <para>Parto dalla partizione &ms-dos; o dal dischetto di avvio
          di &windows; 95 che contiene l'utility <filename>FDISK.EXE</filename>
          e creo una piccola partizione primaria da 50&nbsp;MB
          (35-40 per &windows; 95, pi&ugrave; un po' di spazio per respirare)
          sul primo disco.  Creo anche una partizione pi&ugrave; grande sul
          secondo hard disk per le applicazioni di &windows; e per i
          dati.</para>
      </step>

      <step>
        <para>Faccio ripartire ed installo &windows; 95 (pi&ugrave; facile a
          dirsi che a farsi) sulla partizione <filename>C:</filename>.</para>
      </step>

      <step>
        <para>La prossima cosa che far&ograve; sar&agrave; installare Linux.
          Non sono sicuro per le altre distribuzioni, ma la <ulink
            url="http://www.slackware.com">Slackware</ulink> include
          LILO (guarda la <xref linkend="ch2">).  Quando ripartiziono il
          mio hard disk con l'<command>fdisk</command> di Linux,
          metter&ograve; tutto ci&ograve; che riguarda Linux sul primo hard
          disk (probabilmente 300&nbsp;MB per una partizione di
          root decente e un po' di spazio di swap).</para>
      </step>

      <step>
        <para>Dopo aver installato Linux, quando viene chiesto di
          installare LILO, <emphasis>assicurati</emphasis> di installarlo sul
          settore di avvio della partizione di Linux, non
          nell'MBR (Master Boot Record).</para>
      </step>

      <step>
        <para>La parte rimanente di hard disk va a FreeBSD.
          Assicurati anche che la <quote>slice</quote> root di FreeBSD
          non vada oltre il 1024esimo cilindro.  (Il 1024esimo
          cilindro &egrave; circa intorno ai 528&nbsp;MB in un disco ipotetico,
          il mio, di 720&nbsp;MB).  User&ograve; il resto dell'hard disk
          (circa 270&nbsp;MB) per <filename class="directory">/usr</filename> e
          <filename class="directory">/</filename>.  Il resto del secondo hard
          disk (la grandezza varia a seconda di quanto spazio
          ho lasciato agli applicativi e ai dati per &windows;
          quando ho creato la partizione nel primo passo) pu&ograve;
          essere usata per <filename class="directory">/usr/src</filename>
          e per lo spazio di swap.</para>
      </step>

      <step>
        <para>Se visualizzato con l'utility <command>fdisk</command>
          di &windows; 95, l'hard disk dovrebbe risultare in questo modo:
          <screen>---------------------------------------------------------------------

                  Display Partition Information

Current fixed disk drive: 1

Partition  Status  Type  Volume_Label  Mbytes  System  Usage
C: 1          A   PRI DOS                50    FAT**     7%
   2          A   Non-DOS (Linux)       300             43%

Total disk space is  696 Mbytes (1 Mbyte = 1048576 bytes)

Press Esc to continue

---------------------------------------------------------------------

                  Display Partition Information

Current fixed disk drive: 2

Partition  Status  Type  Volume_Label  Mbytes  System  Usage
D: 1          A   PRI DOS                420   FAT**    60%

Total disk space is  696 Mbytes (1 Mbyte = 1048576 bytes)

Press Esc to continue

---------------------------------------------------------------------</screen>
          ** Potrebbe essere FAT16 o FAT32 se stai usando l'aggiornamento OEM
          SR2.  Guarda la <xref linkend="ch2">.</para>
      </step>

      <step>
        <para>Installazione di FreeBSD.  Assicurati di avviare il computer
          con il primo hard disk configurato con <quote>NORMAL</quote> nel BIOS.
          Se non &egrave; cos&igrave;, dovrai settare la vera geometria
          del disco all'avvio (per arrivare a fare ci&ograve;, fai partire
          &windows; 95 e consulta  Microsoft Diagnostics
          (<filename>MSD.EXE</filename>), o controlla il BIOS) con il
          parametro <literal>hd0=1416,16,63</literal> dove <replaceable>
          1416</replaceable> &egrave; il numero di cilindri sull'hard disk,
          <replaceable>16</replaceable> &egrave; il numero di testine per
          traccia, o <quote>heads per track</quote>, e
          <replaceable>63</replaceable> &egrave; il numero di settori per
          traccia sul drive.</para>
      </step>

      <step>
        <para>Quando partiziono l'hard disk, cerco sempre di mettere Boot
          Easy sul primo hard disk.  Non mi preoccupo del secondo hard
          disk, non parte nulla da quello.</para>
      </step>

      <step>
        <para>Al riavvio, Boot Easy dovrebbe riconoscere le tre partizioni
          avviabili, cio&egrave; quella DOS (ovvero &windows; 95), Linux, e
          BSD (FreeBSD).</para>
      </step>
    </procedure>
  </sect1>

  <sect1 id="ch4">
    <title>Considerazioni Speciali</title>

    <para>Molti sistemi operativi sono molto pignoli su come e dove devono
      essere messi sull'hard disk.  &windows; 95 deve essere sulla prima
      partizione primaria sul primo hard disk.  &os2; fa eccezione.  Pu&ograve;
      essere installato in una partizione primaria o estesa sul primo o sul
      secondo hard disk.  Se non sei sicuro, mantieni la parte avviabile di
      partizione sotto il 1024esimo cilindro.</para>

    <para>Se installi &windows; 95 su un sistema BSD esistente, questo
      <quote>distrugger&agrave;</quote> l'MBR, e dovrai reinstallare il boot
      manager precedente.  Boot Easy pu&ograve; essere reinstallato usando
      l'utility <filename>BOOTINST.EXE</filename> inclusa nella directory
      <filename class="directory">\TOOLS</filename> sul cdrom, oppure
      via <ulink url="ftp://ftp.FreeBSD.org/pub/FreeBSD/tools/"> ftp</ulink>.
      Puoi anche ricominciare l'installazione e andare all'editor delle
      partizioni.  Da l&igrave;, marcare la partizione di FreeBSD come
      avviabile, scegliere Boot Manager, e quindi digitare W per scrivere le
      informazioni nell'MBR.  Puoi ora riavviare, e Boot Easy dovrebbe
      riconoscere &windows; 95 e DOS.</para>

    <para>Ricordati che &os2; pu&ograve; leggere partizioni FAT e HPFS, ma non
      FFS (FreeBSD) o EXT2 (Linux).  Diversamente &windows; 95 pu&ograve;
      leggere e scrivere solo su FAT o FAT32 (guarda la <xref linkend="ch2">).
      FreeBSD pu&ograve; leggere gran parte degli altri file system, ma al
      momento non pu&ograve; leggere partizioni HPFS.  Linux pu&ograve; leggere
      partizioni HPFS, ma non pu&ograve; scrivervi.  Versioni recenti del kernel
      di Linux (2.x) possono leggere e scrivere su partizioni di &windows; 95 di
      tipo VFAT (VFAT &egrave; ci&ograve; che permette a &windows; 95 di avere
      i nomi di file lunghi - &egrave; molto simile alla FAT).
      Linux pu&ograve; leggere e scrivere sulla maggior parte dei file system.
      Capito? Lo spero...</para>
  </sect1>

  <sect1 id="ch5">
    <title>Esempi</title>

    <para><emphasis>(La sezione ha bisogno di lavoro, per favore spedisci
        il tuo esempio a <email>jayrich@sysc.com</email>)</emphasis>.</para>

    <para>FreeBSD + &windows; 95: Se hai installato FreeBSD dopo &windows; 95,
      dovresti vedere <literal>DOS</literal> nel menu di Boot Easy.  Questo
      &egrave; &windows; 95.  Se hai installato &windows; 95 dopo FreeBSD, leggi
      la <xref linkend="ch4"> sopra.
      Fin quando il tuo hard disk non ha pi&ugrave; di 1024 cilindri, non
      dovrebbero esserci problemi.
      Se una partizione va oltre il 1024esimo cilindro, e hai
      messaggi di errore come <errorname>invalid system disk</errorname> sotto
      DOS (&windows; 95) e FreeBSD non parte, prova a cercare una opzione nel
      BIOS chiamata <quote>&gt; 1024 cylinder support</quote> o
      <quote>NORMAL/LBA mode</quote>.
      DOS potrebbe necessitare dell'LBA (Logical Block Addressing -
      Indirizzamento Logico dei Blocchi) per partire correttamente.  Se l'idea
      di cambiare delle impostazioni nel BIOS ogni volta che si accende il
      computer non ti piace, puoi far partire FreeBSD da DOS con l'utility
      <filename>FBSDBOOT.EXE</filename> che trovi sul CD (dovrebbe trovare la
      tua partizione FreeBSD e farla partire).</para>

    <para>FreeBSD + &os2; + &windows; 95: Nulla di nuovo qui.  Il boot manager
      di &os2; pu&ograve; far partire tutti questi sistemi operativi,
      cosicch&eacute; non dovrebbero esserci problemi.</para>

    <para>FreeBSD + Linux: Puoi usare Boot Easy per far partire tutti e due i
      sistemi operativi.</para>

    <para>FreeBSD + Linux + &windows; 95: (guarda la <xref
        linkend="ch3">)</para>
  </sect1>

  <sect1 id="sources">
    <title>Altre Fonti di Aiuto</title>

    <para>Ci sono molti <ulink
      url="http://www.linuxresources.com/LDP/HOWTO/HOWTO-INDEX.html">HOW-TO su
        Linux</ulink> che trattano come affrontare il problema di avere
      pi&ugrave; sistemi operativi sullo stesso hard disk.</para>

    <para>Il <ulink
        url="http://www.linuxresources.com/LDP/HOWTO/mini/Linux+DOS+Win95+OS2.html">Linux+DOS+Win95+OS2
        mini-HOWTO</ulink> offre aiuto su come configurare il boot manager di
      &os2; e il <ulink
        url="http://www.linuxresources.com/LDP/HOWTO/mini/Linux+FreeBSD.html">Linux+FreeBSD
        mini-HOWTO</ulink> potrebbe essere anch'esso interessante.
      Anche il <ulink
        url="http://www.in.net/~jkatz/win95/Linux-HOWTO.html">Linux-HOWTO</ulink>
      &egrave; di grande aiuto.</para>

    <para>L'<ulink
        url="http://www.tburke.net/info/ntldr/ntldr_hacking_guide.htm">&windowsnt;
        Loader Hacking Guide</ulink> fornisce buone informazioni sul
      multibooting di &windowsnt;, '95, e DOS con altri sistemi
      operativi.</para>

    <para>E il pacchetto di Hale Landis, <quote>How It Works</quote> contiene
      alcune utili informazioni su tutti i tipi di geometrie dei drive e su
      argomenti legati al processo di avvio.  Puoi trovarlo su <ulink
        url="ftp://fission.dt.wdc.com/pub/otherdocs/pc_systems/how_it_works/allhiw.zip"></ulink>.</para>

    <para>Inoltre non perderti la documentazione del kernel di FreeBSD sul
      processo di avvio, disponibile nella distribuzione dei sorgenti del kernel
      (si scompatta in <ulink
        url="file://localhost/usr/src/sys/i386/boot/biosboot/README.386BSD">file:/usr/src/sys/i386/boot/biosboot/README.386BSD</ulink>.</para>
  </sect1>

  <sect1>
    <title>Dettagli Tecnici</title>

    <para><emphasis>(Contributo di Randall Hopper,
      <email>rhh@ct.picker.com</email>)</emphasis></para>

    <para>Questa sezione prova a fornire abbastanza informazioni di base
      sugli hard disk e sul processo di avvio cos&igrave; da
      essere poi capaci di determinare le cause dei problemi pi&ugrave;
      frequenti che potreste affrontare al momento dell'installazione e della
      configurazione di pi&ugrave; sistemi operativi.  Inizia con un
      linguaggio semplice, cos&igrave; potresti voler scorrere la pagina fino a
      quando non ti sembri difficile e cominciare quindi da quel punto a
      leggere.</para>

    <sect2>
      <title>Introduzione agli Hard Disk</title>

      <para>Sono generalmente usati tre termini fondamentali per descrivere
        l'allocazione dei dati sull'hard disk: Cylinders (Cilindri), Heads
        (Testine), e Sectors (Settori).  Non &egrave; particolarmente importante
        sapere esattamente cosa significano questi termini e quale sia il loro
        compito specifico, ma interessa sapere che, insieme, identificano dove
        si trovano fisicamente i dati sull'hard disk.</para>

      <para>Ogni hard disk ha un particolare numero di cilindri, di testine, e
        di settori per ogni parte di cilindro relativa a una singola testina
        (che generalmente viene chiamato track, o traccia).
        Questi dati contribuiscono a determinare la geometria
        fisica del disco dell'hard disk.  Ci sono
        generalmente 512 byte per settore, e 63 settori per traccia, mentre
        il numero di cilindri e testine varia a seconda del tipo di hard disk.
        In questo modo puoi trovare la quantit&agrave; di dati che il disco
        potrebbe contenere semplicemente calcolando:</para>

      <informalexample>
        <para>(numero di cilindri) &times; (numero di testine) &times; (63
          settori/traccia) &times; (512 byte/settore)</para>
      </informalexample>

      <para>Per esempio, sul mio Western Digital AC31600 EIDE, questo
        &egrave;:</para>

      <informalexample>
        <para>(3148 cilindri) &times; (16 testine) &times; (63
          settori/traccia) &times; (512 byte/settore)</para>
      </informalexample>

      <para>che sarebbe 1,624,670,208 byte, o circa 1.6 Giga.</para>

      <para>Puoi scoprire la geometria fisica del disco (cio&egrave; il numero
        di cilindri, testine, e il fattore settori/tracciati) del tuo hard disk
        usando ATAID o altri programmi reperibili su Internet.  Probabilmente il
        tuo hard disk ti &egrave; stato venduto con queste informazioni.
        Comunque stai attento: se stai usando l'opzione LBA del BIOS (vedi la
        <xref linkend="limits">), non puoi usare un qualsiasi programma per
        conoscere la geometria fisica.  Questo perch&eacute; molti programmi (ad
        esempio <filename>MSD.EXE</filename> o l'fdisk di FreeBSD) non
        identificano la geometria fisica del disco, fanno invece riferimento
        alla <firstterm>geometria traslata</firstterm> (Numeri virtuali usando
        LBA).  Continua a leggere per saperne di pi&ugrave;.</para>

      <para>Un altro aspetto interessante di questi termini.  Dati 3
        numeri&mdash;un numero di cilindri, un numero di testine, e un numero
        di settori per tracciato&mdash;si pu&ograve; identificare uno specifico
        settore assoluto (un blocco di 512 byte di dati) sull'hard disk.  I
        cilindri e le testine sono numerati partendo da 0, e i settori sono
        numerati partendo da 1.</para>

      <para>Per quelli che sono interessati a dettagli pi&ugrave; tecnici,
        informazioni sulla geometria dei dischi, settori di avvio, BIOS, e
        altro, possono trovare grandi quantit&agrave; di informazioni in
        Internet.  Basta fare una ricerca con Lycos, Yahoo e altri digitando
        <literal>boot sector</literal> o <literal>master boot record</literal>.
        Tra le numerose informazioni utili che si possono trovare c'&egrave; il
        pacchetto di documentazione <citetitle>How It Works</citetitle> (in
        italiano <quote>Come Funziona</quote>) di Hale Landis.  Guarda la
        <xref linkend="sources"> per alcuni puntatori a questo
        pacchetto.</para>

      <para>Ok, troppa terminologia finora. Adesso parliamo del processo di
        avvio.</para>
    </sect2>

    <sect2 id="booting">
      <title>Il Processo di Avvio</title>

      <para>Sul primo settore del tuo disco (Cyl 0, Head 0, Sector 1) risiede
        il Master Boot Record (MBR).  Questo contiene una mappa del tuo disco.
        Identifica fino a 4 <firstterm>partizioni</firstterm>, ciascuna delle
        quali &egrave; uno spazio, una parte, di quel disco.  FreeBSD chiama
        queste partizioni <firstterm>slices</firstterm> per evitare confusione
        con le sue partizioni, di cui ora non parleremo.
        Ciascuna partizione pu&ograve; contenere un sistema operativo
        diverso.</para>

      <para>Ogni elemento che rappresenta una partizione presente nell'MBR ha un
        <firstterm>Partition ID</firstterm>, un valore <firstterm>Start
          Cylinder/Head/Sector</firstterm>, e un valore <firstterm>End
          Cylinder/Head/Sector</firstterm>.  Il Partition ID mostra di che tipo
        di partizione si tratta (di che sistema operativo) e i valori di
        inizio/fine dicono dove questa si trova.  La <xref linkend="tbl-pid">
        mostra una lista di partition ID pi&ugrave; comuni.</para>

      <table id="tbl-pid">
        <title>Partition ID</title>

        <tgroup cols="2">
          <thead>
            <row>
              <entry>ID (hex)</entry>

              <entry>Descrizione</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>01</entry>

              <entry>DOS12 primaria (12-bit FAT)</entry>
            </row>

            <row>
              <entry>04</entry>

              <entry>DOS16 primaria (16-bit FAT)</entry>
            </row>

            <row>
              <entry>05</entry>

              <entry>DOS estesa</entry>
            </row>

            <row>
              <entry>06</entry>

              <entry>DOS primaria di grande dimensione (&gt; 32MB)</entry>
            </row>

            <row>
              <entry>0A</entry>

              <entry>&os2;</entry>
            </row>

            <row>
              <entry>83</entry>

              <entry>Linux (EXT2FS)</entry>
            </row>

            <row>
              <entry>A5</entry>

              <entry>FreeBSD, NetBSD, 386BSD (UFS)</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>Nota che non tutte le partizioni sono avviabili (per esempio quelle
        DOS estese).  Alcune lo sono, altre no.  Ci&ograve; che rende una
        partizione avviabile &egrave; la configurazione del <firstterm>Partition
          Boot Sector</firstterm> che si trova all'inizio di ciascuna
        partizione.</para>

      <para>Quando configuri il tuo boot manager preferito, questo cerca gli
        elementi nella tavola delle partizioni sull'MBR di tutti i tuoi hard
        disk e fa in modo che tu possa dare un nome a tutte gli elementi della
        lista.  Quindi all'avvio, il boot manager viene invocato da un codice
        particolare presente nell'MBR del primo hard disk che viene rilevato sul
        tuo sistema.  Questo guarda la tavola delle partizioni dell'MBR
        corrispondente alla partizione che hai scelto, usa l'informazione sullo
        Start Cylinder/Head/Sector per quella partizione, carica il Partition
        Boot Sector per quella partizione, e sli d&agrave; il controllo.
        Quel settore di avvio per la partizione contiene abbastanza informazioni
        per cominciare a caricare il sistema operativo di quella
        partizione.</para>

      <para>Un particolare che abbiamo sorvolato e che &egrave; importante
        conoscere.  Tutti gli hard disk hanno l'MBR.  Ad ogni modo, quello
        importante &egrave; quello del disco che viene rilevato per primo dal
        BIOS.  Se hai solo hard disk IDE, &egrave; il primo disco IDE
        (cio&egrave; il disco primario del controller primario).
        Stessa cosa per i sistemi SCSI.  Se hai sia
        SCSI che IDE invece, i dischi IDE vengono riconosciuti per primi dal
        BIOS, quindi il primo disco IDE &egrave; quello che viene riconosciuto
        per primo.  Il boot manager che installerai si trover&agrave; quindi
        sull'MBR del primo disco riconosciuto come descritto.</para>
    </sect2>

    <sect2 id="limits">
      <title>Limitazioni sull'Avvio e Avvertimenti</title>

      <para>Ora un po' di cose interessanti alle quali devi stare
        attento.</para>

      <sect3>
        <title>Il maledetto limite dei 1024 cilindri e l'aiuto dell'LBA del
          BIOS</title>

        <para>La prima parte del processo di avvio viene effettuata attraverso
          il BIOS, (se questo &egrave; un termine nuovo per te, il BIOS &egrave;
          un chip contenente del software presente sulla scheda madre che
          contiene il codice di avviamento per il computer).  Quindi, questa
          prima parte del processo &egrave; soggetta alle limitazioni
          dell'interfaccia del BIOS.</para>

        <para>L'interfaccia BIOS usata per leggere gli hard disk in questo
          momento (INT 13H, Subfunction 2) alloca 10 bit per il Cylinder Number,
          8 bit per l'Head Number, e 6 bit per il Sector Number.  Questo porta
          gli utenti ad essere sottoposti a dei limiti (per esempio i boot
          manager installati nell'MBR cos&igrave; come i loader installati nei
          Boot Sector) che ora vediamo:</para>

        <itemizedlist>
          <listitem>
            <para>1024 cilindri, massimo</para>
          </listitem>

          <listitem>
            <para>256 testine, massimo</para>
          </listitem>

          <listitem>
            <para>64 settori/traccia, massimo (in realt&agrave; 63,
              <literal>0</literal> non &egrave; disponibile)</para>
          </listitem>
        </itemizedlist>

        <para>Ora, hard disk grossi hanno molti cilindri, ma non molte testine,
          quindi invariabilmente con grandi hard disk il numero di cilindri
          sar&agrave; pi&ugrave; alto di 1024.  A causa di questo e della
          situazione dell'interfaccia BIOS, non puoi far partire un sistema
          operativo da qualsiasi punto del disco.  Il codice di avvio (il boot
          manager e il loader del sistema operativo devono essere nei settori di
          avvio di tutte le partizioni avviabili) deve risiedere entro il limite
          dei 1024 cilindri.  In pratica, se il tuo hard disk &egrave; generico
          e contiene 16 testine, questo si tramuta in:</para>

        <informalexample>
          <para>1024 cilindri/disco &times; 16 testine/disco &times; 63
            settori/traccia &times; 512 byte/settore</para>
        </informalexample>

        <para>che &egrave; intorno al summenzionato limite dei 528MB.</para>

        <para>Qui &egrave; dove entra in gioco l'LBA (Logical Block Addressing,
          Indirizzamento Logico dei Blocchi) del BIOS.  L'LBA del BIOS fornisce
          all'utente delle API del BIOS accesso ai cilindri fisici oltre al
          1024esimo attraverso l'interfaccia BIOS ridefinendo un cilindro.
          Quindi, rimappa cilindri e testine, facendo sembrare al BIOS che il
          computer contenga meno cilindri e pi&ugrave; testine di quanto in
          realt&agrave; non ne abbia.
          In altre parole, si avvantaggia del fatto che gli hard disk hanno
          relativamente poche testine e molti cilindri semplicemente bilanciando
          tra cilindri e testine facendo in modo che tutti e due i numeri
          rimangano sotto la soglia (1024 cilindri, 256 testine).</para>

        <para>Con l'LBA del BIOS, la limitazione agli hard disk &egrave;
          virtualmente eliminata (beh, spostata ad 8 Gigabyte).  Se hai un BIOS
          che supporta l'LBA, puoi mettere FreeBSD o qualsiasi altro OS in
          qualsiasi parte tu voglia senza toccare il limite dei 1024
          cilindri.</para>

        <para>Per usare ancora l'esempio del mio Western Digital da 1.6
          Giga, la sua geometria fisica &egrave;:</para>

        <informalexample>
          <para>(3148 cilindri, 16 testine, 63 settori/traccia, 512
            byte/settore)</para>
        </informalexample>

        <para>Ad ogni modo, il mio LBA del BIOS rimappa questo in:</para>

        <informalexample>
          <para>(787 cilindri, 64 testine, 63 settori/traccia, 512
            byte/settore)</para>
        </informalexample>

        <para>dandomi la stessa grandezza effettiva di disco, ma con numero di
          cilindri e testine entro i limiti dell'API del BIOS (casualmente,
          ho sia Linux che FreeBSD installati su uno dei miei hard disk sopra il
          1024esimo cilindro fisico, e tutti e due partono perfettamente, grazie
          all'LBA del BIOS).</para>
      </sect3>

      <sect3>
        <title>Boot Manager e Allocazione del Disco</title>

        <para>Un altro punto di cui tener conto al momento al momento
          dell'installazione di un boot manager, &egrave; quello di ricordarsi
          di allocare spazio per il tuo boot manager.  &Egrave; meglio aver
          presente fin da subito questo problema, per non accorgersene troppo
          tardi e dover quindi reinstallare uno o pi&ugrave; sistemi
          operativi.</para>

        <para>Se hai seguito il discorso nella <xref linkend="booting"> a
          proposito del Master Boot Sector (dove si trova l'MBR), dei Partition
          Boot Sectors, e dell processo di avvio, potresti esserti chiesto
          esattamente dove quel piccolo boot manager risiede sul tuo hard disk.
          Bene, alcuni boot manager sono abbastanza piccoli da risiedere nel
          Master Boot Sector (Cilindro 0, Testina 0, Settore 0) insieme alla
          tabella delle partizioni.  Alcuni invece hanno bisogno di un po' di
          spazio in pi&ugrave; e si estendono su alcuni settori oltre il Master
          Boot Sector nella traccia del Cilindro 0 Testina 0, dato che questa
          &egrave; tipicamente libera.</para>

        <para>Ecco qui.  Alcuni sistemi operativi (incluso FreeBSD) fanno in
          modo che le loro partizioni possano cominciare subito dopo il Master
          Boot Sector, cio&egrave; al cilindro 0, testina 0, settore 2 se vuoi.
          Infatti, se dai al sysinstall di FreeBSD un disco con una parte
          iniziale vuota oppure un disco vuoto, quello &egrave; il punto da cui
          comincer&agrave; la partizione FreeBSD di default (o almeno lo ha
          fatto quando sono caduto in questa trappola).  Poi quando vai ad
          installare il tuo boot manager, se &egrave; uno che occupa alcuni
          settori oltre all'MBR, andr&agrave; a sovrascrivere la parte iniziale
          dei dati della prima partizione.  Nel caso di FreeBSD, questo
          sovrascrive il label del disco, e fa in modo da rendere non avviabile
          la partizione di FreeBSD.</para>

        <para>Il modo pi&ugrave; semplice per eliminare questo problema (e
          lasciarti la flessibilit&agrave; di provare in seguito differenti boot
          manager) &egrave; quello di lasciare sempre la prima traccia del tuo
          hard disk completamente libera quando partizioni il tuo hard disk.
          Ci&ograve; significa lasciare libero lo spazio tra il cilindro 0,
          testina 0, settore 2 fino a cilindro 0, testina 0, settore 63, e
          cominciare la prima partizione sul cilindro 0, testina 1, settore 1.
          Per ci&ograve; che vale, quando crei una partizione DOS all'inizio del
          tuo hard disk, il DOS lascia sempre questo spazio libero di default
          (ecco perch&eacute; molti boot manager presumono che sia libero).
          Quindi creare una partizione DOS all'inizio del disco toglie questi
          problemi tutti insieme.  Mi piace fare da solo, creando una partizione
          DOS da 1 mega all'inizio, perch&eacute; questo evita che cambino le
          lettere dei drive DOS quando ripartiziono in seguito.</para>

        <para>Come riferimento, i seguenti boot manager usano il Master Boot
          Sector per immagazzinare il loro codice e i loro dati:</para>

        <itemizedlist>
          <listitem>
            <para>OS-BS 1.35</para>
          </listitem>

          <listitem>
            <para>Boot Easy</para>
          </listitem>

          <listitem>
            <para>LILO</para>
          </listitem>
        </itemizedlist>

        <para>Questi boot manager usano alcuni settori addizionali dopo
          il Master Boot Sector:</para>

        <itemizedlist>
          <listitem>
            <para>OS-BS 2.0 Beta 8 (settori 2-5)</para>
          </listitem>

          <listitem>
            <para>Boot Manager di &os2;</para>
          </listitem>
        </itemizedlist>
      </sect3>

      <sect3>
        <title>Cosa fare se il tuo computer non parte?</title>

        <para>In alcuni momenti quando installi dei boot manager, potresti
          lasciare l'MBR in uno stato in cui il computer non riesce pi&ugrave; a
          partire.  Questo &egrave; spiacevole, ma possibile quando si utilizza
          FDISK su di un boot manager gi&agrave; installato.</para>

        <para>Se hai una partizione DOS avviabile sul tuo hard disk, puoi
          partire da un floppy DOS, e poi eseguire il comando:</para>

        <informalexample>
          <screen>A:\> <userinput>FDISK /MBR</userinput></screen>
        </informalexample>

        <para>Per mettere il codice originale di avvio del DOS nel sistema.
          Puoi ora avviare DOS (e solamente DOS) dall'hard disk.
          Alternativamente, puoi far ripartire il programma di installazione del
          tuo boot manager da un floppy avviabile.</para>
      </sect3>
    </sect2>
  </sect1>
</article>
