Index: crypto/openssh/auth-chall.c
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/auth-chall.c,v
retrieving revision 1.6
retrieving revision 1.6.2.1
diff -p -c -r1.6 -r1.6.2.1
*** crypto/openssh/auth-chall.c	31 Mar 2003 13:45:36 -0000	1.6
--- crypto/openssh/auth-chall.c	24 Sep 2003 18:32:12 -0000	1.6.2.1
*************** verify_response(Authctxt *authctxt, cons
*** 93,99 ****
  			xfree(info);
  		}
  		/* if we received more prompts, we're screwed */
! 		res = (numprompts != 0);
  	}
  	device->free_ctx(authctxt->kbdintctxt);
  	authctxt->kbdintctxt = NULL;
--- 93,99 ----
  			xfree(info);
  		}
  		/* if we received more prompts, we're screwed */
! 		res = (res == 0 && numprompts == 0) ? 0 : -1;
  	}
  	device->free_ctx(authctxt->kbdintctxt);
  	authctxt->kbdintctxt = NULL;
Index: crypto/openssh/auth2-pam-freebsd.c
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/auth2-pam-freebsd.c,v
retrieving revision 1.11
retrieving revision 1.11.2.1
diff -p -c -r1.11 -r1.11.2.1
*** crypto/openssh/auth2-pam-freebsd.c	31 Mar 2003 13:48:18 -0000	1.11
--- crypto/openssh/auth2-pam-freebsd.c	24 Sep 2003 18:32:22 -0000	1.11.2.1
*************** pam_thread_conv(int n,
*** 134,141 ****
  	*resp = xmalloc(n * sizeof **resp);
  	buffer_init(&buffer);
  	for (i = 0; i < n; ++i) {
! 		resp[i]->resp_retcode = 0;
! 		resp[i]->resp = NULL;
  		switch (msg[i]->msg_style) {
  		case PAM_PROMPT_ECHO_OFF:
  			buffer_put_cstring(&buffer, msg[i]->msg);
--- 134,141 ----
  	*resp = xmalloc(n * sizeof **resp);
  	buffer_init(&buffer);
  	for (i = 0; i < n; ++i) {
! 		(*resp)[i].resp_retcode = 0;
! 		(*resp)[i].resp = NULL;
  		switch (msg[i]->msg_style) {
  		case PAM_PROMPT_ECHO_OFF:
  			buffer_put_cstring(&buffer, msg[i]->msg);
*************** pam_thread_conv(int n,
*** 143,149 ****
  			ssh_msg_recv(ctxt->pam_csock, &buffer);
  			if (buffer_get_char(&buffer) != PAM_AUTHTOK)
  				goto fail;
! 			resp[i]->resp = buffer_get_string(&buffer, NULL);
  			break;
  		case PAM_PROMPT_ECHO_ON:
  			buffer_put_cstring(&buffer, msg[i]->msg);
--- 143,149 ----
  			ssh_msg_recv(ctxt->pam_csock, &buffer);
  			if (buffer_get_char(&buffer) != PAM_AUTHTOK)
  				goto fail;
! 			(*resp)[i].resp = buffer_get_string(&buffer, NULL);
  			break;
  		case PAM_PROMPT_ECHO_ON:
  			buffer_put_cstring(&buffer, msg[i]->msg);
*************** pam_thread_conv(int n,
*** 151,157 ****
  			ssh_msg_recv(ctxt->pam_csock, &buffer);
  			if (buffer_get_char(&buffer) != PAM_AUTHTOK)
  				goto fail;
! 			resp[i]->resp = buffer_get_string(&buffer, NULL);
  			break;
  		case PAM_ERROR_MSG:
  			buffer_put_cstring(&buffer, msg[i]->msg);
--- 151,157 ----
  			ssh_msg_recv(ctxt->pam_csock, &buffer);
  			if (buffer_get_char(&buffer) != PAM_AUTHTOK)
  				goto fail;
! 			(*resp)[i].resp = buffer_get_string(&buffer, NULL);
  			break;
  		case PAM_ERROR_MSG:
  			buffer_put_cstring(&buffer, msg[i]->msg);
*************** pam_chauthtok_conv(int n,
*** 550,569 ****
  	for (i = 0; i < n; ++i) {
  		switch (msg[i]->msg_style) {
  		case PAM_PROMPT_ECHO_OFF:
! 			resp[i]->resp =
  			    read_passphrase(msg[i]->msg, RP_ALLOW_STDIN);
! 			resp[i]->resp_retcode = PAM_SUCCESS;
  			break;
  		case PAM_PROMPT_ECHO_ON:
  			fputs(msg[i]->msg, stderr);
  			fgets(input, sizeof input, stdin);
! 			resp[i]->resp = xstrdup(input);
! 			resp[i]->resp_retcode = PAM_SUCCESS;
  			break;
  		case PAM_ERROR_MSG:
  		case PAM_TEXT_INFO:
  			fputs(msg[i]->msg, stderr);
! 			resp[i]->resp_retcode = PAM_SUCCESS;
  			break;
  		default:
  			goto fail;
--- 550,569 ----
  	for (i = 0; i < n; ++i) {
  		switch (msg[i]->msg_style) {
  		case PAM_PROMPT_ECHO_OFF:
! 			(*resp)[i].resp =
  			    read_passphrase(msg[i]->msg, RP_ALLOW_STDIN);
! 			(*resp)[i].resp_retcode = PAM_SUCCESS;
  			break;
  		case PAM_PROMPT_ECHO_ON:
  			fputs(msg[i]->msg, stderr);
  			fgets(input, sizeof input, stdin);
! 			(*resp)[i].resp = xstrdup(input);
! 			(*resp)[i].resp_retcode = PAM_SUCCESS;
  			break;
  		case PAM_ERROR_MSG:
  		case PAM_TEXT_INFO:
  			fputs(msg[i]->msg, stderr);
! 			(*resp)[i].resp_retcode = PAM_SUCCESS;
  			break;
  		default:
  			goto fail;
Index: crypto/openssh/ssh_config
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/ssh_config,v
retrieving revision 1.21
retrieving revision 1.21.2.1
diff -p -c -r1.21 -r1.21.2.1
*** crypto/openssh/ssh_config	23 Apr 2003 17:10:53 -0000	1.21
--- crypto/openssh/ssh_config	24 Sep 2003 20:23:11 -0000	1.21.2.1
***************
*** 35,38 ****
  #   Cipher 3des
  #   Ciphers aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc
  #   EscapeChar ~
! #   VersionAddendum FreeBSD-20030423
--- 35,38 ----
  #   Cipher 3des
  #   Ciphers aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc
  #   EscapeChar ~
! #   VersionAddendum FreeBSD-20030924
Index: crypto/openssh/ssh_config.5
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/ssh_config.5,v
retrieving revision 1.9
retrieving revision 1.9.2.1
diff -p -c -r1.9 -r1.9.2.1
*** crypto/openssh/ssh_config.5	23 Apr 2003 17:10:53 -0000	1.9
--- crypto/openssh/ssh_config.5	24 Sep 2003 20:23:11 -0000	1.9.2.1
*************** host key database instead of
*** 623,629 ****
  Specifies a string to append to the regular version string to identify
  OS- or site-specific modifications.
  The default is
! .Dq FreeBSD-20030423 .
  .It Cm XAuthLocation
  Specifies the full pathname of the
  .Xr xauth 1
--- 623,629 ----
  Specifies a string to append to the regular version string to identify
  OS- or site-specific modifications.
  The default is
! .Dq FreeBSD-20030924 .
  .It Cm XAuthLocation
  Specifies the full pathname of the
  .Xr xauth 1
Index: crypto/openssh/sshd_config
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/sshd_config,v
retrieving revision 1.32
retrieving revision 1.32.2.1
diff -p -c -r1.32 -r1.32.2.1
*** crypto/openssh/sshd_config	23 Apr 2003 17:10:53 -0000	1.32
--- crypto/openssh/sshd_config	24 Sep 2003 20:23:11 -0000	1.32.2.1
***************
*** 14,20 ****
  # Note that some of FreeBSD's defaults differ from OpenBSD's, and
  # FreeBSD has a few additional options.
  
! #VersionAddendum FreeBSD-20030423
  
  #Port 22
  #Protocol 2,1
--- 14,20 ----
  # Note that some of FreeBSD's defaults differ from OpenBSD's, and
  # FreeBSD has a few additional options.
  
! #VersionAddendum FreeBSD-20030924
  
  #Port 22
  #Protocol 2,1
Index: crypto/openssh/sshd_config.5
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/sshd_config.5,v
retrieving revision 1.11
retrieving revision 1.11.2.1
diff -p -c -r1.11 -r1.11.2.1
*** crypto/openssh/sshd_config.5	23 Apr 2003 17:10:53 -0000	1.11
--- crypto/openssh/sshd_config.5	24 Sep 2003 20:23:11 -0000	1.11.2.1
*************** The default is
*** 650,656 ****
  Specifies a string to append to the regular version string to identify
  OS- or site-specific modifications.
  The default is
! .Dq FreeBSD-20030423 .
  .It Cm X11DisplayOffset
  Specifies the first display number available for
  .Nm sshd Ns 's
--- 650,656 ----
  Specifies a string to append to the regular version string to identify
  OS- or site-specific modifications.
  The default is
! .Dq FreeBSD-20030924 .
  .It Cm X11DisplayOffset
  Specifies the first display number available for
  .Nm sshd Ns 's
Index: crypto/openssh/version.h
===================================================================
RCS file: /home/ncvs/src/crypto/openssh/version.h,v
retrieving revision 1.20.2.2
retrieving revision 1.20.2.3
diff -p -c -r1.20.2.2 -r1.20.2.3
*** crypto/openssh/version.h	17 Sep 2003 14:47:55 -0000	1.20.2.2
--- crypto/openssh/version.h	24 Sep 2003 20:23:11 -0000	1.20.2.3
***************
*** 5,11 ****
  
  #define SSH_VERSION             (ssh_version_get())
  #define SSH_VERSION_BASE        "OpenSSH_3.6.1p1"
! #define SSH_VERSION_ADDENDUM    "FreeBSD-20030917"
  
  const char *ssh_version_get(void);
  void ssh_version_set_addendum(const char *add);
--- 5,11 ----
  
  #define SSH_VERSION             (ssh_version_get())
  #define SSH_VERSION_BASE        "OpenSSH_3.6.1p1"
! #define SSH_VERSION_ADDENDUM    "FreeBSD-20030924"
  
  const char *ssh_version_get(void);
  void ssh_version_set_addendum(const char *add);
