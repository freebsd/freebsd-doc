.\" $FreeBSD$
.PS

define  disk_box {
	offset = 0.3
	line dashed from $1 + (-offset, -offset) to ($1.x, $2.y) + (-offset, offset)
	line dashed from last line.end to $2 + (offset, offset)
	line dashed from last line.end to ($2.x, $1.y) + (offset, -offset)
	line dashed from last line.end to $1 + (-offset, -offset)
}

define disk {
       ellipse wid 1.4 ht 0.2 fill 0.4
       line down 0.1 from last ellipse.w
       line down 0.1 from last ellipse.e
       arc cw rad 3.4 to last ellipse.w + (0, -0.1)
       for i = 1 to 4 do {
       ellipse wid 1.4 ht 0.2 fill 0.4 at last ellipse.s - (0, 0.2) fill 0.4
       line down 0.1 from last ellipse.w
       line down 0.1 from last ellipse.e
       arc cw rad 3.4 to last ellipse.w + (0, -0.1)
       }
       disk_box(last ellipse.sw, 1st ellipse.ne)
}

A: box wid 2 "256k would be written in" "four 64k simultaneous writes" "to each of the four disks"

B1: box ht 0.2 wid 0.3 "64k" at A.e + (0.4, 0.5)
B2: box ht 0.2 wid 0.3 "64k" at A.e + (0.4, 0.2)
B3: box ht 0.2 wid 0.3 "64k" at A.e + (0.4, -0.1)
B4: box ht 0.2 wid 0.3 "64k" at A.e + (0.4, -0.4)

move to A.s + (-0.5, -1.9)
[disk];"disk 1" at last [].s above
spline from B4.e then right 0.5 then to last [].e + (-0.2, 0.0) ->

move to last [].e + (0.2,0)
[disk];"disk 2" at last [].s above
spline from B3.e then right 1.2 then to last [].e + (-0.4, -0.3) ->

move to last [].e + (0.2,0)
[disk];"disk 3" at last [].s above
spline from B2.e then right 2.4 then to last [].e + (-0.8, 0.28) ->

move to last [].e + (0.2,0)
[disk];"disk 4" at last [].s above
spline from B1.e then right 4 then to last [].e + (-0.5, 0.6) ->

spline from A.e then up 0.2 then to B1.w
spline from A.e then up 0.1 then to B2.w
spline from A.e then down 0.1 then to B3.w
spline from A.e then down 0.2 then to B4.w

.PE
