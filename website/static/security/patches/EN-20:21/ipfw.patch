--- sbin/ipfw/dummynet.c.orig
+++ sbin/ipfw/dummynet.c
@@ -1279,8 +1279,8 @@
 	struct dn_profile *pf = NULL;
 	struct ipfw_flow_id *mask = NULL;
 #ifdef NEW_AQM
-	struct dn_extra_parms *aqm_extra;
-	struct dn_extra_parms *sch_extra;
+	struct dn_extra_parms *aqm_extra = NULL;
+	struct dn_extra_parms *sch_extra = NULL;
 	int lmax_extra;
 #endif
 	
--- sbin/ipfw/ipfw2.c.orig
+++ sbin/ipfw/ipfw2.c
@@ -1618,6 +1618,9 @@
 			case O_TCPWIN:
 				s = "tcpwin";
 				break;
+			default:
+				s = "<unknown>";
+				break;
 			}
 			bprintf(bp, " %s %u", s, cmd->arg1);
 		} else
@@ -4003,7 +4006,7 @@
 		struct addrinfo *res;
 		char *s, *end;
 		int family;
-		u_short port_number;
+		u_short port_number = 0;
 
 		NEED1("missing forward address[:port]");
 
@@ -5600,7 +5603,7 @@
 static void
 ipfw_list_tifaces(void)
 {
-	ipfw_obj_lheader *olh;
+	ipfw_obj_lheader *olh = NULL;
 	ipfw_iface_info *info;
 	uint32_t i;
 	int error;
@@ -5608,7 +5611,6 @@
 	if ((error = ipfw_get_tracked_ifaces(&olh)) != 0)
 		err(EX_OSERR, "Unable to request ipfw tracked interface list");
 
-
 	qsort(olh + 1, olh->count, olh->objsize, ifinfo_cmp);
 
 	info = (ipfw_iface_info *)(olh + 1);
@@ -5625,7 +5627,3 @@
 
 	free(olh);
 }
-
-
-
-
--- sbin/ipfw/nat64lsn.c.orig
+++ sbin/ipfw/nat64lsn.c
@@ -99,6 +99,7 @@
 	stg = (ipfw_nat64lsn_stg_v1 *)(od + 1);
 	sz = od->head.length - sizeof(*od);
 	next_idx = 0;
+	proto = NULL;
 	while (sz > 0 && next_idx != 0xFF) {
 		next_idx = stg->next.index;
 		sz -= sizeof(*stg);
--- sbin/ipfw/tables.c.orig
+++ sbin/ipfw/tables.c
@@ -847,7 +847,7 @@
 static int
 table_show_one(ipfw_xtable_info *i, void *arg)
 {
-	ipfw_obj_header *oh;
+	ipfw_obj_header *oh = NULL;
 	int error;
 	int is_all;
 
@@ -1179,7 +1179,7 @@
 	struct servent *sent;
 	int masklen;
 
-	masklen = 0;
+	mask = masklen = 0;
 	af = 0;
 	paddr = (struct in6_addr *)&tentry->k;
 
