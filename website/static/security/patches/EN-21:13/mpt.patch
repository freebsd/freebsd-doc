    mpt(4): Remove incorrect S/G segments limits.
    
    First, two of those four checks are unreachable.
    Second, I don't believe there should be ">=" instead of ">".
    Third, bus_dma(9) already returns the same EFBIG if ">".
    
    This fixes false I/O errors in worst S/G cases with maxphys >= 2MB.
    
    MFC after:      1 week
    
    (cherry picked from commit 0f29396e493bd87ffa6a63fcb602b12e79d21a1e)
--- sys/dev/mpt/mpt_cam.c.orig
+++ sys/dev/mpt/mpt_cam.c
@@ -1292,10 +1292,6 @@
 	hdrp = req->req_vbuf;
 	mpt_off = req->req_vbuf;
 
-	if (error == 0 && ((uint32_t)nseg) >= mpt->max_seg_cnt) {
-		error = EFBIG;
-	}
-
 	if (error == 0) {
 		switch (hdrp->Function) {
 		case MPI_FUNCTION_SCSI_IO_REQUEST:
@@ -1315,12 +1311,6 @@
 		}
 	}
 
-	if (error == 0 && ((uint32_t)nseg) >= mpt->max_seg_cnt) {
-		error = EFBIG;
-		mpt_prt(mpt, "segment count %d too large (max %u)\n",
-		    nseg, mpt->max_seg_cnt);
-	}
-
 bad:
 	if (error != 0) {
 		if (error != EFBIG && error != ENOMEM) {
@@ -1694,10 +1684,6 @@
 	hdrp = req->req_vbuf;
 	mpt_off = req->req_vbuf;
 
-	if (error == 0 && ((uint32_t)nseg) >= mpt->max_seg_cnt) {
-		error = EFBIG;
-	}
-
 	if (error == 0) {
 		switch (hdrp->Function) {
 		case MPI_FUNCTION_SCSI_IO_REQUEST:
@@ -1716,12 +1702,6 @@
 		}
 	}
 
-	if (error == 0 && ((uint32_t)nseg) >= mpt->max_seg_cnt) {
-		error = EFBIG;
-		mpt_prt(mpt, "segment count %d too large (max %u)\n",
-		    nseg, mpt->max_seg_cnt);
-	}
-
 bad:
 	if (error != 0) {
 		if (error != EFBIG && error != ENOMEM) {
