<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>April-June</month>

    <year>2017</year>
  </date>

  <section>
    <title>Introduction</title>

    <p>&os; continues to defy the rumors of its demise.</p>

    <p>Much of the development work done this quarter was not
      particularly visible, especially the effort needed to ensure
      the upcoming 11.1 release has as few regressions as possible.
      Planning is also well under way for the 10.4 maintenance release
      which will quickly follow it.</p>

    <p>Further work focused on moving the arm architectures' support
      closer to tier-1 status and improving documentation.  In addition,
      large changes were made to the src and ports trees.</p>

    <p>These projects and others are further detailed below.</p>

    <p>&mdash;Mark Linimon</p>

    <p><hr /></p>

    <p>The deadline for submissions covering the period from July
      to September 2017 is October 21, 2017.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <category>
    <name>third</name>

    <description>Third-Party Projects</description>

    <p>Many projects build upon &os; or incorporate components of
      &os; into their project.  As these projects may be of interest 
      to the broader &os; community, we sometimes include brief
      updates submitted by these projects in our quarterly report.
      The &os; project makes no representation as to the accuracy or
      veracity of any claims in these submissions.</p>
  </category>

  <project cat='proj'>
    <title>64-bit Inode Numbers</title>

    <contact>
      <person>
	<name>
	  <given>Gleb</given>
	  <common>Kurtsou</common>
	</name>
	<email>gleb@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Konstantin</given>
	  <common>Belousov</common>
	</name>
	<email>kib@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Kirk</given>
	  <common>McKusick</common>
	</name>
	<email>mckusick@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://reviews.FreeBSD.org/D10439">Phabricator Review</url>
    </links>

    <body>
      <p>The 64-bit inode project was completed and merged into
	&os;&nbsp;12 on May 23, 2017.  It extends the <tt>ino_t</tt>,
	<tt>dev_t</tt>, and <tt>nlink_t</tt> types to be 64-bit
	integers.  It modifies the <tt>struct dirent</tt> layout to
	add a <tt>d_off</tt> field, increases the size of
	<tt>d_fileno</tt> to 64 bits, increases the size of
	<tt>d_namlen</tt> to 16 bits, and changes the required
	alignment of the structure.  It increases the <tt>struct
	statfs</tt> <tt>f_mntfromname[]</tt> and
	<tt>f_mntonname[]</tt> array lengths from MNAMELEN to
	1024.</p>

      <p>ABI breakage is mitigated by providing compatibility using
	versioned symbols, ingenious use of the existing padding in
	structures, and employing various other tricks.
	Unfortunately, not everything can be fixed, especially outside
	the base system.  For instance, third-party APIs which pass
	<tt>struct stat</tt> as parameters are broken in backward- and
	forward-incompatible ways.</p>

      <p>The ABI for <tt>kinfo</tt>-consuming sysctl MIBs is changed in a
	backward-compatible way, but there is no general mechanism to
	handle other sysctl MIBS which return structures where the
	layout has changed.  In our consideration, this breakage is
	either in management interfaces, where we usually allow ABI
	slippage, or is not important.</p>

      <p>The layout of <tt>struct xvnode</tt> changed, and no
	compatibility shims are provided.</p>

      <p>For <tt>struct xtty</tt>, the <tt>dev_t tty</tt> device
	member was reduced to be just <tt>uint32_t</tt>.  It was
	decided that maintaining ABI compatability in this case is
	more useful than reporting a 64-bit <tt>dev_t</tt> value, for
	the sake of <tt>pstat</tt>.</p>

      <p>Updating note: <strong>strictly</strong> follow the instructions
	in <tt>UPDATING</tt>.  Build and install the new kernel with the
	<tt>COMPAT_FREEBSD11</tt> option enabled, then reboot, and
	only then install the new world.</p>

      <p>Credits: The 64-bit inode project, also known as ino64,
	started life many years ago as a project by Gleb Kurtsou
	(gleb).  Kirk McKusick (mckusick) then picked up and updated
	the patch, and acted as a flag-waver.  Feedback, suggestions,
	and discussions were carried out by Ed Maste (emaste), John
	Baldwin (jhb), Jilles Tjoelker (jilles), and Rick Macklem
	(rmacklem).  Kris Moore (kris) performed an initial ports
	investigation followed by an exp-run by Antoine Brodin
	(antoine).  Essential and all-embracing testing was done by
	Peter Holm (pho).  The heavy lifting of coordinating all these
	efforts and bringing the project to completion were done by
	Konstantin Belousov (kib).  </p>
    </body>

    <sponsor>
      The FreeBSD Foundation (emaste, kib)
    </sponsor>
  </project>

  <project cat='misc'>
    <title>BSD Meetups at Rennes (France)</title>

    <contact>
      <person>
	<name>
	  <given>Mathieu</given>
	  <common>Kerjouan</common>
	</name>
	<email>contact@steepath.eu</email>
      </person>
    </contact>

    <links>
      <url href="https://www.meetup.com/fr-FR/Meetup-BSD-Rennes/events/239248155/">First Event</url>
      <url href="https://www.meetup.com/fr-FR/Meetup-BSD-Rennes/events/240202297/">Second Event</url>
    </links>

    <body>
      <p>Two meetups dedicated to BSD systems were held in Rennes,
	France.  The first one was hosted in the OVH office in Rennes
	and included presentations on multiple subjects: the
	non-technical history of FreeNAS (presented by olivier@), how
	OVH is using ZFS, an introduction to jails, and a use case for
	BGP/bird on &os;.</p>

      <p>The second meetup, also hosted in the OVH office, presented these
	subjects: how to create a &os; port (presented by jadawin@),
	how OVH is using Finite State Machines for managing their
	storage system, network high-availability with &os;, and a
	jail tutorial by means of a demonstration running 200 OSPF
	(using <tt>net/bird</tt>) routers using jails and vnets on a
	small PC Engines APU2 system with only 4 CPU cores (1Ghz AMD)
	and 4GB RAM).</p>
    </body>

    <sponsor>OVH</sponsor>
  </project>

  <project cat='ports'>
    <title>New Port: FRRouting</title>

    <contact>
      <person>
	<name>
	  <given>Olivier</given>
	  <common>Cochard-Labb√©</common>
	</name>
	<email>olivier@cochard.me</email>
      </person>
    </contact>

    <links>
      <url href="https://frrouting.org/">FRRouting Home Page</url>
    </links>

    <body>
      <p>FRRouting (FRR), a Quagga fork, is an IP routing protocol
	suite for Linux and Unix platforms which includes protocol
	daemons for BGP, IS-IS, OSPF and RIP (LPD and PIM support need to be
	fixed on &os;).  FRR is a Linux Foundation Collaborative
	Project with contributors including 6WIND, Architecture
	Technology Corporation, Big Switch Networks, Cumulus Networks,
	LabN Consulting, NetDEF (OpenSourceRouting), Orange, Volta
	Networks, and other companies.</p>
      </body>

    <sponsor>Orange</sponsor>
  </project>

  <project cat='team'>
    <title>The Postmaster Team</title>

    <contact>
      <person>
	<name>
	  <given>David</given>
	  <common>Wolfskill</common>
	</name>
	<email>dhw@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Larry</given>
	  <common>Rosenman</common>
	</name>
	<email>ler@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ryan</given>
	  <common>Steinmetz</common>
	</name>
	<email>zi@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Eygene</given>
	  <common>Ryabinkin</common>
	</name>
	<email>rea@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Remko</given>
	  <common>Lodder</common>
	</name>
	<email>remko@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Kurt</given>
	  <common>Jaeger</common>
	</name>
	<email>pi@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/administration.html#t-postmaster">The Postmaster Team</url>
    </links>

    <body>
      <p> Postmaster handles the mail flow for the &os; project.</p>

      <p>Clusteradm provides us with four jails: mailman, mailarchive,
	mx1, and mx2.  In addition, there is some part of the setup
	running on freefall.FreeBSD.org.  The system uses
	<tt>postfix</tt>, <tt>mailman</tt>, <tt>spamassassin</tt>, and
	some other tools from the ports tree to handle the mail flow.
	We use a very small, non-public Subversion repository for
	parts of the configuration.</p>

      <p>During Q2, Larry Rosenman, Kurt Jaeger, Eygene Ryabinkin,
	Remko Lodder and Ryan Steinmetz joined the Postmaster Team,
	and Florian Smeets left the Postmaster Team.</p>

      <p>Thanks to Florian for his long service in that role!  David
	Wolfskill is planning to leave the role as soon as the new
	team members are settled.  Vsevolod Stakhov plans to provide
	us with support to integrate <tt>rspamd</tt> into the setup,
	as well.</p>

      <p>The workload for the Postmaster Team is not high, but the
	complexity of the setup has its own demands.</p>
    </body>

    <help>
      <task>We need to improve our internal documentation of workflows and
	processes.</task>

      <task>We should consider adding some monitoring to provide
	quarterly numbers on the mail flow.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os;&nbsp;Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/releases/11.1R/schedule.html">&os;&nbsp;11.1-RELEASE Schedule</url>
      <url href="https://download.FreeBSD.org/ftp/snapshots/ISO-IMAGES/">&os; Development Snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is responsible for setting
	and publishing release schedules for official project releases
	of &os;, announcing code freezes, and maintaining the
	respective branches, among other things.</p>

      <p>The &os;&nbsp;11.1-RELEASE cycle started on May 19, and
	continued as scheduled.  &os; consumers are urged to test
	whenever possible to help ensure the reliability and stability
	of the upcoming second release from the <tt>stable/11</tt>
	branch.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='bin'>
    <title>Using LLVM's LLD Linker as &os;'s System Linker</title>

    <contact>
      <person>
	<name>
	  <given>Rafael</given>
	  <common>Esp√≠ndola</common>
	</name>
	<email>rafael.espindola@gmail.com</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/LLD">&os; <tt>lld</tt> Wiki Page</url>
      <url href="http://llvm.org/pr23214">&os;/LLD Tracking PR (LLVM Bugzilla)</url>
      <url href="https://bugs.FreeBSD.org/214864">Exp-Run Request Using <tt>lld</tt> as <tt>/usr/bin/ld</tt></url>
    </links>

    <body>
      <p>LLD is the linker in the LLVM family of projects.  It is a
	high-performance linker that supports the ELF, COFF and
	Mach-O object formats.  It is broadly compatible with the
	common linkers used for each file format.  For ELF this is
	the GNU Binary File Descriptor (BFD) <tt>ld</tt> and GNU
	<tt>gold</tt>.  However, LLD's authors are not constrained
	by strict compatibility where it would hamper performance or
	desired functionality.</p>

      <p>LLD is now used as the default system linker for
	&os;/arm64 and can link a working kernel, kernel modules, and
	userland for &os;/amd64.  LLD can also link a working
	kernel and modules (but not userland) for &os;/arm and
	&os;/i386.</p>

      <p>Work is ongoing to address ports that do not build with LLD
	as the system linker (either by fixing the port, or
	configuring the port to be linked by GNU <tt>ld</tt>).</p>

      <p>For &os;&nbsp;12.0 we expect to use LLD as the system linker for
	the same set of architectures that use Clang by default:
	32- and 64-bit arm and x86.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
      <task>Fix <tt>libtool</tt> to detect LLD and pass the same
	command line arguments as for GNU <tt>ld</tt> and
	<tt>gold</tt>.</task>

      <task>Investigate the remaining amd64 and arm64 port
	build failures.</task>

      <task>Investigate and improve LLD on i386 and arm, before
	the creation of the stable/12 branch.</task>

      <task>Investigate and improve LLD on all other
	architectures.</task>

      <task>Extensive testing.</task>
    </help>
  </project>

  <project cat='bin'>
    <title>DTC</title>

    <contact>
      <person>
	<name>
	  <given>Emmanuel</given>
	  <common>Vadot</common>
	</name>
	<email>manu@FreeBSD.org</email>
      </person>
    </contact>


    <body>
      <p>The in-tree DTC (Device Tree Compiler) was switched to use the
	BSD-licensed version by default.  (The previous default DTC is
	licensed under the GPL.) The current version supports overlays
	and is able to compile every DTS (Device Tree Source) used by the &os; arm
	releases.  The ports GPL version was updated to the latest
	release (1.4.4).  The in-tree GPL version is still present but
	the goal is to remove it before &os; 12.0.</p>
    </body>
  </project>

  <project cat='proj'>
    <title>DTS Updates</title>

    <contact>
      <person>
	<name>
	  <given>Emmanuel</given>
	  <common>Vadot</common>
	</name>
	<email>manu@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>DTS (Device Tree Source) files provide a human-readable
	source description of the hardware resources for a given
	computer system (such as ARM- or MIPS-based embedded boards).
	The DTS source representation must be compiled into a binary
	format in order to be linked into the kernel and used to
	locate devices at runtime.</p>

      <p>The DTS files in &os; were updated to match the versions from
	Linux 4.11, to represent more modern devices and provide more
	accurate representations.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>Updating Port Metadata for non-x86 Architectures</title>

    <contact>
      <person>
	<name>
	  <given>Mark</given>
	  <common>Linimon</common>
	</name>
	<email>linimon@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://thunderx1.nyi.FreeBSD.org/jail.html?mastername=110arm64-default">aarch64 Poudriere Machine</url>
      <url href="http://beefy8.nyi.FreeBSD.org/jail.html?mastername=head-armv6-default">armv6 Poudriere Machine</url>
    </links>

    <body>
      <p>I have been analyzing the error logs from ports builds for
	all non-x86 architectures, including both the logs published
	on the package build cluster and also other builds of
	powerpc64 and sparc64.</p>

      <p>From this analysis, I have marked almost all the failing
	ports as either <tt>BROKEN</tt> or
	<tt>NOT_FOR</tt>/<tt>ONLY_FOR</tt>, as appropriate.</p>

      <p>The intent of this work is not to make life harder for
	anyone, but rather, in fact, the opposite.  With these
	definitions in place, it is possible to scan the poudriere
	bulk build output (the &quot;Ignored ports&quot; portion, in
	particular) and see quickly what ports are failing to build
	and why.  Previously, finding the exact reason why a build
	failed needed some research (<tt>portsmon</tt> only analyzes
	failure messages on amd64).  Additionally, it is extremely
	difficult to work through several hundred logs that simply say
	&quot;failed to compile&quot;, &quot;failed to link&quot;, and
	so forth.</p>

      <p>This is part of an effort to identify where we need further
	work to bring sufficient Ports Collection support to, e.g.,
	armv6 and aarch64 to bring them closer to true Tier-1
	status.</p>

      <p>To further facilitate locating patterns in the Poudriere
	output, I have begun reworking some existing
	<tt>BROKEN</tt>/<tt>NOT_FOR</tt>/<tt>ONLY_FOR</tt> messages so
	that they will sort more easily.  This includes sorting the
	order in which architectures appear in the lists.</p>

      <p>Many people have been doing great work on fixing the
	individual ports.  I hope that my work makes their jobs
	somewhat easier.</p>
    </body>
  </project>

  <project cat='kern'>
    <title>&os; Driver for the Annapurna Labs ENA</title>

    <contact>
      <person>
	<name>
	  <given>Marcin</given>
	  <common>Wojtas</common>
	</name>
	<email>mw@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Micha≈Ç</given>
	  <common>Krawczyk</common>
	</name>
	<email>mk@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html">Enhanced Networking Guide</url>
    </links>

    <body>
      <p>The ENA (Elastic Network Adapter) is a 25G SmartNIC developed by
	Annapurna Labs and is based on a custom ARMv8 chip.  This is a
	high-performance networking card available in the AWS offerings.
	It introduces enhancements in network utilization scalability
	on EC2 machines under the control of various operating systems, in
	particular &os;.</p>

      <p>The goal of &os; enablement is to provide top performance and
	a wide range of monitoring and management features such
	as:</p>

      <ul>
	<li>multiple queue modes</li>

	<li>hardware offloads (rx and tx checksum)</li>

	<li>an admin queue</li>

	<li>asynchronous notifications</li>

	<li>robust hardware access</li>

	<li>a scalable number of MSI-X vectors</li>

	<li>hardware counters</li>

	<li>watchdog mechanism</li>

	<li>LRO</li>

	<li>RSS</li>
      </ul>

      <p>The driver is available in the kernel source tree as of
	r318647.</p>
    </body>

    <sponsor>Annapurna Labs &mdash; an Amazon company</sponsor>

    <help>
      <task>Add RSS configuration from userspace (via sysctls).</task>

      <task>Add support for LLQ mechanisms.</task>
    </help>
  </project>

  <project cat='doc'>
    <title>Absolute &os;, 3rd Edition</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Lucas</common>
	</name>
	<email>mwlucas@michaelwlucas.com</email>
      </person>
    </contact>

    <links>
      <url href="https://blather.michaelwlucas.com/archives/2972">Status as of 30 June</url>
      <url href="https://www.michaelwlucas.com/os/af2e">Second Edition</url>
      <url href="https://twitter.com/search?q=%23af3e&amp;src=typd">Trivial Updates</url>
    </links>

    <body>
      <p>I'm working on a third edition of <i>Absolute &os;</i>. This
	will be a nearly complete rewrite, thanks to the addition of
	little details like ZFS, GPT, <tt>dma</tt>, GELI, new boot
	procedures, disk labeling, <tt>pkg(8)</tt>, <tt>blacklistd</tt>,
	jails, etc..</p>

      <p>My current (delusional) plan is to have a first draft
	finished by the end of October 2017, so we can have print
	copies for BSDCan 2018.</p>
    </body>

    <help>
      <task>Write the remaining 75% of the book.</task>
    </help>
  </project>

  <project cat="kern">
    <title>pNFS Server Plan B</title>

    <contact>
      <person>
	<name>
	  <given>Rick</given>
	  <common>Macklem</common>
	</name>
	<email>rmacklem@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://people.FreeBSD.org/~rmacklem/pnfs-planb-setup.txt">Testing Instructions</url>
    </links>

    <body>
      <p>Parallel NFS (pNFS) is an extension to the NFSv4 protocol that
	allows for file accesses within a single logical mount to be
	performed against multiple file servers, with the potential
	for data access to occur in parallel.  The pNFS
	&quot;layout&quot; in use specifies how the division occurs, with
	metadata operations occurring against the main server, and
	bulk data operations (read/write/setattr/etc.) occurring via
	a layout-specific scheme between the client and the data
	servers.</p>

      <p>My first attempt at a pNFS server using GlusterFS was a dud.
	It worked, but performance was so poor that it was not
	usable.  This attempt that I call &quot;Plan B&quot;, only
	uses &os;, with one &os; server handling the metadata
	operations and multiple &os; servers configured to serve
	data, is now ready for third-party testing.  If testing by
	third parties goes well, I anticipate the code will be
	merged into &os; head in time for &os;&nbsp;12.  Fairly
	recent &os; or Linux systems should be usable as pNFS
	clients for testing.  This server supports the File Layout,
	which is supported by both of these clients.</p>

      <p>There is no support for the Flex Files Layout or mirroring
	at this time.  I hope to use the Flex Files Layout to add
	mirroring support over the next year or so.  Striping is not
	supported, and I have no plans for implementing this at the
	moment.</p>

      <p>The patched &os; sources may now be accessed for testing
	via either Subversion or download of a gzipped tarball.
	They consist of a patched kernel and <tt>nfsd</tt> and can be
	used on any &os;&nbsp;11 or later system.</p>
    </body>

    <help>
      <task>Testing by others will be needed, now that the code is
	available.</task>
    </help>
  </project>

  <project cat='doc'>
    <title>New Xen Handbook Section</title>

    <contact>
      <person>
	<name>
	  <given>Benedict</given>
	  <common>Reuschling</common>
	</name>
	<email>bcr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/doc/en_US.ISO8859-1/books/handbook/virtualization-host-xen.html">Handbook Section About &os; as a Xen Host</url>
      <url href="https://reviews.freebsd.org/D10774">Original Phabricator Review</url>
    </links>

    <body>
      <p>&os; supports the Xen hypervisor, with DomU (guest) support since
	&os;&nbsp;8.0 and Dom0 (host) available since &os;&nbsp;11.0.  The
	&os; Handbook was lacking instructions on how to run a Xen
	host and VMs.  The steps were outlined in the &os; wiki, but
	needed some extra bits of text from the upstream Xen wiki in
	order to form a complete guide.  The new handbook section
	briefly explains what Xen is, how it differs from other
	hypervisors, and what features are currently available in
	&os;.  It then goes on to describe how to set up the Dom0, as
	well as detailing the guest VM support known as DomU.</p>

      <p>Reviewers Nikolai Lifanov, Roger Pau Monn√©, and Warren Block
	provided valuable feedback on the initial version in
	Phabricator.  Additional corrections were made by Bj√∂rn
	Heidotting while translating the section into German.</p>
    </body>

    <help>
      <task>More options for the Dom0 and DomU could be provided.</task>

      <task>People should test these instructions on their hardware
	and provide feedback.  This would also help us get better
	testing of the Xen port for &os;.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>Xfce on &os;</title>

    <contact>
      <person>
	<name>&os; Xfce Team</name>
	<email>xfce@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Olivier</given>
	  <common>Duchateau</common>
	</name>
	<email>duchateau.olivier@gmail.com</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Xfce">&os; Xfce Project</url>
      <url href="https://www.assembla.com/spaces/xfce4/subversion/source">Ports Development Repository</url>
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms such as &os;.  It aims to be fast and
	lightweight, while still being visually appealing and easy to
	use.</p>

      <p>During this quarter, we have kept these applications up-to-date:</p>

      <ul>
	<li><tt>audio/xfce4-pulseaudio-plugin</tt> (0.2.5, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219357">PR219357</a>)</li>

	<li><tt>deskutils/xfce4-tumbler</tt> (0.1.32, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219848">PR219848</a>)</li>

	<li><tt>deskutils/xfce4-xkb-plugin</tt> (0.8.0, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=220071">PR220071</a>)</li>

	<li><tt>sysutils/garcon</tt> (0.6.1, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219928">PR219928</a>,
	  and <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219334">PR219334</a>
	  for <tt>Mk/Uses/xfce.mk</tt>)</li>

	<li><tt>textproc/xfce4-dict-plugin</tt> (0.8.0, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=220266">PR220266</a>)</li>

	<li><tt>x11/xfce4-terminal</tt> (0.8.5.1, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219312">PR219312</a>)</li>

	<li><tt>x11/xfce4-whiskermenu-plugin</tt> (1.7.2, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219347">PR219347</a>)</li>

	<li><tt>x11-wm/xfce4-desktop</tt> (4.12.4, <a
	    href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=220290">PR220290</a>)</li>
      </ul>

      <p>We have created a new Subversion tag (<em>4.13</em>) in order
	to follow the unstable releases.  The separate tag was
	necessary in order to support changes in the <tt>USES=xfce</tt>
	infrastucture, and due to some incompatible changes to the
	<tt>xfconf</tt> API.  Ports following the unstable release are:</p>

      <ul>
	<li><tt>deskutils/xfce4-tumbler</tt> (0.1.92.1)</li>

	<li><tt>multimedia/xfce4-parole</tt> (0.9.2)</li>

	<li><tt>sysutils/xfce4-settings</tt> (4.13.1)</li>

	<li><tt>x11/libexo</tt> (0.11.3)</li>

	<li><tt>x11/libxfce4menu</tt> (4.13.2)</li>

	<li><tt>x11/libxfce4util</tt> (4.13.1)</li>

	<li><tt>x11/xfce4-conf</tt> (4.13.2)</li>

	<li><tt>x11/xfce4-dashboard</tt> (0.7.2)</li>

	<li><tt>x11/xfce4-screenshooter</tt> (1.9.1)</li>

	<li><tt>x11/xfce4-whiskermenu-plugin</tt> (2.1.2)</li>

	<li><tt>x11-wm/xfce4-desktop</tt> (4.13.1)</li>

	<li><tt>x11-wm/xfce4-panel</tt> (4.13.0)</li>

	<li><tt>x11-wm/xfce4-session</tt> (4.13.0)</li>

	<li><tt>x11-wm/xfce4-wm</tt> (4.13.0)</li>
      </ul>
    </body>

    <help>
      <task>Make the transition to Gtk3 smoother for end users.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>GNOME on &os;</title>

    <contact>
      <person>
	<name>&os; GNOME Team</name>
	<email>FreeBSD-gnome@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/gnome">&os; GNOME Website</url>
      <url href="https://github.com/&os;/FreeBSD-ports-gnome">Development Repository</url>
      <url href="https://wiki.gnome.org/Projects/Jhbuild/&os;">Upstream Build Bot</url>
      <url href="https://www.FreeBSD.org/doc/en_US.ISO8859-1/books/porters-handbook/using-gnome.html"><tt>USE_GNOME</tt> Porter's Handbook Chapter</url>
    </links>

    <body>
      <p>The &os; GNOME Team maintains the GNOME, MATE, and CINNAMON
	desktop environments and graphical user interfaces for &os;.
	GNOME 3 is part of the GNU Project.  MATE is a fork of the
	GNOME 2 desktop.  CINNAMON is a desktop environment using
	GNOME 3 technologies but with a GNOME 2 look and feel.</p>

      <p>After a period of not much activity, this quarter we
	started a little experiment in how we merge ports from the
	development repo to the &os; Ports Collection.  Instead of
	merging everything in one big commit, we have been updating
	the GNOME ports one at a time or in small groups.  For
	example, the GTK+ stack and the Evolution Suite were updated
	as groups, and all the <tt>gnome-games</tt> components were
	done in one commit.  It might be a bit more work preparing
	and testing the updates, but on the plus side, it easy to
	keep track of what is going on, and allows us to pay
	attention to the details.  It should also make it easier to commit
	smaller changes.</p>

      <p>This quarter started with the update of GTK+ 3 to 3.22.15,
	and the underlying libraries to their latest stable
	versions.  After the GTK+ update, work started on getting
	newer versions of other GNOME applications updated.</p>

      <p>The <tt>webkit2-gtk3</tt> port was first updated to the
	2.14 series and later to 2.16.3, which is the latest stable
	version.  This step was needed because 2.16 couldn't be
	built on &os;&nbsp;10.3 without some required framework
	changes.</p>

      <p><tt>harfbuzz-icu</tt> was split off from the main
	<tt>harfbuzz</tt> port.  This drops the heavy <tt>icu</tt>
	dependency from the main <tt>harfbuzz</tt> port.</p>

      <p>A longstanding GLib/<tt>gio</tt> bug was fixed that had
	previously caused crashes of <tt>gnome-shell</tt> and other
	applications when <tt>share/applications</tt> was modified,
	as happens on <tt>pkg install</tt> or
	<tt>deinstall</tt>.</p>

      <p>Many of these updates are based on work previously done in
	the Gnome development branch by Ruslan Makhmatkhanov, Gustau
	Perez and Koop Mast.</p>
    </body>

    <help>
      <task>Porting of Mutter/Gnome-shell/GDM 3.24 is complete.
	Unfortunately, GDM is blocking the update because of a
	&quot;handoff&quot; bug to the session after login.</task>

      <task>Fix the printer submenu in <tt>gnome-control-center</tt>.  As a
	workaround, <tt>system-config-printer</tt> can be used to
	configure printers.</task>

      <task>MATE 1.18 is being QA tested and should arrive in early
	July.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>TensorFlow</title>

    <contact>
      <person>
	<name>
	  <given>Jov</given>
	</name>
	<email>amutu@amutu.com</email>
      </person>
    </contact>

    <links>
      <url href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219609">TensorFlow PR</url>
      <url href="https://reviews.FreeBSD.org/D11194">Phabricator Review</url>
      <url href="https://github.com/amutu/tf-FreeBSD-pkg">Prebuilt Packages</url>
      <url href="https://www.tensorflow.org">TensorFlow Upstream</url>
    </links>

    <body>
      <p>As described on its website, &quot;TensorFlow&trade; is an open
	source software library for numerical computation using data
	flow graphs.  Nodes in the graph represent mathematical
	operations, while the graph edges represent the
	multidimensional data arrays (tensors) communicated between
	them.  The flexible architecture allows you to deploy
	computation to one or more CPUs or GPUs in a desktop, server,
	or mobile device with a single API.  TensorFlow was originally
	developed by researchers and engineers working on the Google
	Brain Team within Google's Machine Intelligence research
	organization for the purposes of conducting machine learning
	and deep neural networks research, but the system is general
	enough to be applicable in a wide variety of other domains as
	well.&quot;</p>

      <p>TensorFlow now is the most popular platform/library for machine
	learning and AI.  There are official binaries for Linux, Mac,
	Windows, and Android, but no official support for &os;.  For
	the last several months, I have done some work to make
	TensorFlow available on &os;.  Some notable items include:</p>

      <ul>
	<li><tt>bazel</tt> was patched to not depend on <tt>/proc</tt> at
	  build time. <tt>bazel</tt> is a build tool made by Google.
	  It uses <tt>/proc</tt> to get path-to-self when building C++
	  code, but mounting <tt>/proc</tt> is usually not allowed
	  when building as an unprivileged user.</li>

	<li>TensorFlow can now be built on &os;&nbsp;10.x by using
	  <tt>clang38</tt> as the default <tt>bazel</tt> cross-build
	  tool.</li>

	<li>Patch the <tt>bazel</tt> workspace files to allow
	  TensorFlow to be built using offline third-party
	  dependencies.  This work is needed because the &os; Ports
	  framework does not allow network access except during the
	  fetch stage.</li>

	<li>Fix the build on &os; i386.</li>

	<li>Make TensorFlow build with either Python 2 or Python 3.</li>

	<li>Update to the latest version, which is
	  <tt>tensorflow</tt>-1.2.0.</li>
      </ul>

      <p>TensorFlow can now be run on &os; in CPU-only mode. Some
	functional tests have been performed on some combinations of
	&os; 10.3-RELEASE and 11.0-RELEASE, amd64 and i386, and
	Python 2.7 and Python 3.6.</p>

      <p>This port would not be possible without substantial
	assistance from bapt@, lwhsu@, mat@, and koobs@ &mdash; thank
	you for your advice, review, and help!  You are very nice
	and I learned a lot about &os; and the Ports framework from
	you.</p>
    </body>

    <help>
      <task>Review, test, comment, and most importantly, commit to the
	Ports Collection.</task>

      <task>Fix OpenCL (GPU acceleration) support on &os;.</task>

      <task>Port <tt>tensorflow-serving</tt>, which is a flexible,
	high-performance serving system for machine learning models
	produced by TensorFlow.</task>

      <task>Set up a CI for TensorFlow on &os; and give early notice
	to upstream when they break TensorFlow on &os;.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>Ceph on &os;</title>

    <contact>
      <person>
	<name>
	  <given>Willem Jan</given>
	  <common>Withagen</common>
	</name>
	<email>wjw@digiware.nl</email>
      </person>
    </contact>

    <links>
      <url href="http://ceph.com">Ceph Main Site</url>
      <url href="https://github.com/ceph/ceph">Main Repository</url>
      <url href="https://github.com/wjwithagen/ceph">My &os; Fork </url>
    </links>

    <body>
      <p>Ceph is a distributed object store and file system designed to provide
	excellent performance, reliability and scalability.</p>

      <ul>
	<li><p>Object Storage</p>

	  <p>Ceph provides seamless access to objects using native
	    language bindings or <tt>radosgw</tt>, a REST interface
	    that is compatible with applications written for S3 and
	    Swift.</p></li>

	<li><p>Block Storage</p>

	  <p>Ceph's RADOS Block Device (RBD) provides access to block
	    device images that are striped and replicated across the
	    entire storage cluster.</p></li>

	<li><p>File System</p>

	  <p>Ceph provides a POSIX-compliant network file system that
	    aims for high performance, large data storage, and maximum
	    compatibility with legacy applications.</p></li>
      </ul>

      <p>I started looking into Ceph because the HAST solution with
	CARP and <tt>ggate</tt> did not really do what I was looking
	for.  I aim to run a Ceph storage cluster of storage nodes
	that are running ZFS, with user workstations running
	<tt>bhyve</tt> on RBD disks that are stored in Ceph.</p>

      <p>Compiling for &os; will now build most of the tools
	available in Ceph.</p>

      <p>The most important changes since the last report are:</p>

      <ul>
	<li>Ceph has released release candidate v12.1.0 (aka
	  Luminous); the corresponding packaging is sitting in my tree
	  waiting for Luminous to be actually released.</li>

	<li><tt>ceph-fuse</tt> works, and allows mounting of
	  <tt>cephfs</tt> filesystems.  The speed is not impressive,
	  but it does work.</li>

	<li><tt>rbd-ggate</tt> is available to create a Ceph
	  <tt>rbd</tt> backed device.  <tt>rbd-ggate</tt> was
	  submitted by Mykola Golub.  It works in a rather simple
	  fashion: once a cluster is functioning, <tt>rbd
	  import</tt> and <tt>rbd-ggate map</tt> are used to create
	  <tt>ggate</tt>-like devices backed by the Ceph cluster.</li>
      </ul>

      <p>Other improvements since the previous report:</p>

      <ul>
	<li>Some bugs in the <tt>init-ceph</tt> code (needed for
	  <tt>rc.d</tt>) are being fixed.</li>

	<li>RBD and rados are functioning.</li>

	<li>The needed compatability code was written so that &os; and
	  Linux daemons can operate together in a single cluster.</li>

	<li>More of the awkward dependancies on Linux-isms are deleted
	  &mdash; only <tt>/bin/bash</tt> is there to stay.</li>
      </ul>

      <p>The next forthcoming official release of Ceph is called
	Luminous (v12.1.0).  As soon as it is available from upstream,
	a port will be provided for &os;.</p>

      <p>To get things running on a &os; system, run <tt>pkg install
	  net/ceph-devel</tt> or clone <a
	  href="https://github.com/wjwithagen/ceph">https://github.com/wjwithagen/ceph</a>,
	check out the <tt>wip.freebsd.201707</tt> branch, and build
	manually by running <tt>./do_freebsd.sh</tt> in the checkout
	root.</p>

      <p>Parts not (yet) included:</p>

      <ul>
	<li>KRBD &mdash; but <tt>rbd-ggate</tt> is usable in its
	  stead.</li>

	<li>BlueStore &mdash; &os; and Linux have different AIO APIs,
	  and that incompatibility needs to be resolved somehow.
	  Additionally, there is discussion in &os; about
	  <tt>aio_cancel</tt> not working for all device types.</li>
      </ul>
    </body>

    <help>
      <task>Run integration tests to see if the &os; daemons will work
	with a Linux Ceph platform.</task>

      <task>Investigate the keystore, which can be embedded in the
	kernel on Linux and currently prevents building Cephfs and
	some other parts.  The first question is whether it is really
	required, or if only KRBD requires it.</task>

      <task>Scheduler information is not used at the moment, because the
	schedulers work rather differently between Linux and &os;.
	But at a certain point in time, this will need some attention
	(in <tt>src/common/Thread.cc</tt>).</task>

      <task>Improve the &os; init scripts in the Ceph stack, both for
	testing purposes and for running Ceph on production machines.
	Work on <tt>ceph-disk</tt> and <tt>ceph-deploy</tt> to make it
	more &os;- and ZFS-compatible.</task>

      <task>Build a test cluster and start running some of the
	teuthology integration tests on it.  Teuthology wants to build
	its own <tt>libvirt</tt>, and that does not quite work with all
	the packages &os; already has in place.  There are many
	details to work out here.</task>

      <task>Design a virtual disk implementation that can be used with
	<tt>bhyve</tt> and attached to an RBD image.</task>
    </help>
  </project>

  <project cat="ports">
    <title>A New <tt>USES</tt> Macro for Porting Cargo-Based Rust Applications</title>

    <contact>
      <person>
	<name>
	  <given>Tobias</given>
	  <common>Kortkamp</common>
	</name>
	<email>tobik@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.rust-lang.org/">Rust Homepage</url>
      <url href="https://crates.io/">Cargo Homepage</url>
      <url href="https://github.com/jwilm/alacritty">Alacritty Homepage</url>
      <url href="https://the.exa.website/">Exa Homepage</url>
      <url href="https://github.com/BurntSushi/ripgrep">Ripgrep Homepage</url>
      <url href="https://asciinema.org/a/SM2sOLi6iBUOmGWrxn5W1QI8U">Short Screencast About How to Use the <tt>USES=cargo</tt> Macro</url>
    </links>

    <body>
      <p>Support in the Ports Collection for applications written in
	the Rust programming language that use Rust's package
	manager Cargo was added, via a new <tt>USES=cargo</tt>
	setting.  The work is based on the <tt>cargo</tt> module
	from the OpenBSD ports tree.</p>

      <p>This should significantly ease the porting of Rust
	applications, as previously porters had to create their own
	tarball of the application's dependencies or find other
	manual ways of bringing them in.</p>

      <p>Several new ports were added that use it, for example:</p>
      
      <ul>
	<li>Alacritty, a GPU-accelerated terminal emulator</li>

	<li>Exa, a modern replacement for <tt>ls</tt></li>

	<li>Ripgrep, a line-oriented search tool that combines the
	  usability of The Silver Searcher with the raw speed of GNU
	  <tt>grep</tt></li>
      </ul>
    </body>

    <help>
      <task>Add documentation for the new feature.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Marvell Armada38x</title>

    <contact>
      <person>
	<name>
	  <given>Marcin</given>
	  <common>Wojtas</common>
	</name>
	<email>mw@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Zbigniew</given>
	  <common>Bodek</common>
	</name>
	<email>zbb@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Work proceeds to finalize the process of bringing support
	for the Marvell Armada38x platform into &os; head.</p>

      <p>The most important parts of the recent effort are:</p>

      <ul>
	<li>Add the network driver (NETA)</li>

	<li>Enable coherent <tt>busdma</tt> operation for all ARMv7 SoCs</li>

	<li>Add various low-level optimizations, such as L1 cache
	  prefetch and MBUS quirks</li>

	<li>Enable PL310 L2 cache controller</li>

	<li>Add SDHCI support</li>

	<li>Fixes for the <tt>e6000sw</tt> driver and a rework of its
	  PHY handling</li>

	<li>Support multi-port PCIe operation</li>

	<li>Various fixes and enhancements of the common Marvell code</li>

	<li>Fix and enable support for performance counters (HWPMC)</li>
      </ul>
    </body>

    <sponsor>Stormshield</sponsor>

    <sponsor>Semihalf</sponsor>

    <sponsor>Netgate</sponsor>
  </project>

  <project cat="ports">
    <title><tt>sndio</tt> Support in the &os; Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Tobias</given>
	  <common>Kortkamp</common>
	</name>
	<email>tobik@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.sndio.org">Sndio Homepage</url>
      <url href="https://www.openbsd.org/papers/asiabsdcon2010_sndio.pdf">Sndio Paper</url>
      <url href="https://www.bsdfrog.org/pub/events/my_bsd_sucks_less_than_yours-AsiaBSDCon2017-paper.pdf">Comprehensive and Biased Comparison of OpenBSD and &os; (Section 17)</url>
    </links>

    <body>
      <p><tt>sndio</tt> is a small audio and MIDI framework that
	is part of the OpenBSD project.  It provides a lightweight
	audio and MIDI server, <tt>sndiod</tt>.  It currently supports
	OpenBSD, &os;, DragonFly BSD, and Linux.</p>

      <p>The porting effort to &os; and OSS started last year and
	the <tt>sndio</tt> backend support in the &os; Ports
	Collection can now be considered good enough for daily
	use.</p>

      <p>Sndio offers network transparency through <tt>sndiod</tt>,
	which provides an easy way to share your audio devices with
	other machines/VMs/jails on your network.  However,
	applications and libraries need to support playing and
	recording through it.  To that end, I submitted several patches
	to various ports over the course of the last year.</p>

      <p>Here's a short selection of ports that now support <tt>sndio</tt> in
	the &os; Ports Collection:</p>

      <ul>
	<li>Most games, via <tt>audio/openal-soft</tt>,
	  <tt>devel/sdl12</tt>, and <tt>devel/sdl20.</tt></li>

	<li>GStreamer-based applications and WebKit-based browsers
	  through two new GStreamer plugins
	  (<tt>audio/gstreamer1-plugins-sndio</tt> and
	  <tt>audio/gstreamer-plugins-sndio</tt>).</li>

	<li>Firefox, Firefox ESR, Seamonkey, Chromium, and Iridium.
	  The browsers currently lack or have a non-functional OSS
	  backend.  Sndio support provides a BSD-native alternative to
	  the ALSA and PulseAudio backends.</li>

	<li>Video players like VLC, Totem, <tt>mpv</tt>,
	  <tt>mplayer</tt>, etc..</li>

	<li>Audio players like Clementine, <tt>cmus</tt>,
	  <tt>mpd</tt>, <tt>mpg123</tt>, <tt>siren</tt>, <tt>xmp</tt>,
	  etc..</li>

	<li>SoX.</li>

	<li>Shairport Sync, through a newly implemented backend.</li>

	<li>JACK.</li>

	<li>PulseAudio, through
	  <tt>audio/pulseaudio-module-sndio</tt>.</li>
      </ul>
    </body>

    <help>
      <task>Commit a backport of Kodi's new <tt>sndio</tt> backend to
	the Ports Collection.</task>

      <task>If you maintain or use an audio-related port, consider
	checking whether it includes an <tt>sndio</tt> backend, and adding
	an <tt>SNDIO</tt> option.  Thanks to the OpenBSD developers,
	several open-source projects already include one, so adding it
	might be very easy to do.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>KDE on &os;</title>

    <contact>
      <person>
	<name>KDE on &os; Team</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://FreeBSD.kde.org/">KDE on &os; Website</url>
      <url href="https://FreeBSD.kde.org/area51.php">KDE Ports Staging Area</url>
      <url href="https://wiki.FreeBSD.org/KDE">KDE on &os; Wiki</url>
      <url href="https://mail.kde.org/mailman/listinfo/kde-FreeBSD">KDE/&os; Mailing List</url>
      <url href="https://github.com/FreeBSD/FreeBSD-ports-kde">Development Repository</url>
      <url href="https://build.kde.org">KDE's Continous Integration Dashboard</url>
      <url href="https://euroquis.nl/bobulate/?p=1600">Blog Post on Using the Ninja CMake Generator</url>
    </links>

    <body>
      <p>The KDE on &os; team focuses on packaging KDE and Qt, and making sure
	that their experience on &os; is as good as
	possible.</p>

      <p>This quarter, in addition to the regular updates to the KDE,
	Qt, and related ports, there have also been some changes behind
	the scenes: our development repository has moved to GitHub,
	and &os; is now part of KDE's official continuous integration
	(CI infrastructure).</p>

      <p>After the X.Org and GNOME ports teams, the KDE on &os; team
	has moved its development repository to GitHub.  This should
	make it easier for others to collaborate with us via pull
	requests, and by basing all our changes on top of the official
	ports tree we also hope this reduces the amount of conflicts
	and churn we need to deal with when landing big updates across
	the tree.  We would like to thank iXsystems for hosting and
	supporting our area51 Subversion repository for many
	years.</p>

      <p>&os; has finally joined KDE's CI (Continuous Integration)
	system as a tier-1 platform.  KDE CI builds all the KDE
	sources &mdash; 70 frameworks, the KDE Plasma Desktop and a
	plethora of KDE Applications &mdash; continuously, straight
	from KDE's git repositories.  There is strong commitment from
	upstream and the downstream KDE-&os; team to reduce the amount
	of patching in the KDE ports to as little as possible.  The
	first effects are being felt in expanding the set of unit tests to
	include &os;-specific situations, and in extending Qt to handle &os;
	filesystems better.  In addition to the KDE sysadmins, we
	would also like to extend our thanks to Adriaan de Groot, who
	is both a KDE committer and part of our KDE on &os; team, for
	spearheading these efforts.</p>

      <p>The following big updates landed in the ports tree this
	quarter:</p>

      <ul>
	<li>CMake was updated to 3.8.0 and 3.8.2</li>

	<li>KDE Frameworks was updated to 5.33, 5.34 and 5.35</li>

	<li>The Calligra office suite was updated to 3.0.1, the first
	  release in the ports tree to be based on KDE Frameworks 5,
	  and the latest stable release upstream</li>

	<li>The Konversation IRC client was updated to 1.7.2, the
	  latest upstream release and the first ports version based on
	  KDE Frameworks 5</li>

	<li>KchmViewer was updated to 7.7, which is based on KDE
	  Frameworks 5</li>

	<li>LabPlot was updated to 2.3.0 and 2.4.0, and is now based
	  on KDE Frameworks 5</li>

	<li>QtCreator was upated to 4.2.2 and subsequently to
	  4.3.0</li>

	<li><tt>py-sip</tt> was updated to 4.19.2, PyQt4 to 4.12 and PyQt5 to
	  5.7.1</li>

	<li>Several fixes for ARMv6 landed in the Qt4 and Qt5
	  ports &mdash; thanks to Mika√´l Urankar</li>
      </ul>

      <p>After several review rounds and exp-runs, Tobias Berner
	(tcberner@) finally made the Ninja generator the default for
	CMake-based ports, so that <tt>devel/ninja</tt> is used
	instead of (<tt>g</tt>)<tt>make</tt> in most cases.  This
	should make most builds faster, even if only by a small margin.
	Adriaan de Groot also wrote a blog post about the change.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>PHP Ports: Help Improving QA</title>

    <contact>
      <person>
	<name>
	  <given>Torsten</given>
	  <common>Z√ºhlsdorff</common>
	</name>
	<email>tz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.patreon.com/TorstenZuehlsdorff">My Patreon Page</url>
    </links>

    <body>
      <p>As maintainer of the PHP ports, I first want to thank you all
	for the great feedback and patches I receive, in many forms.
	You keep my life interesting!</p>

      <p>In the past few months I learned a lot about various
	configurations, settings and bugs.  Also, sadly, there are
	always PRs, patches and emails left unanswered, because of
	missing time on my side.</p>

      <p>I want to improve the situation by adding more automatic QA
	testing, but I need help to do so.  Please send me your
	non-standard PHP-configurations or describe your exotic
	setups!  These can be as simple as changed default versions,
	like LibreSSL instead of OpenSSL or the GCC version used for
	compiling.  I, for example, always use another
	PostgreSQL-version than the default (and always PHP 7.1).  Of
	course, this also covers port options set in an non-default way or
	setups that change variables to allow for multiple PHP
	installations, etc..</p>

      <p>I plan to test on all supported &os; versions, so you only
	need to mention if you are using an unsupported version.</p>

      <p>Note: Since PHP 7.2 is coming (hopefully on schedule), I will
	test PHP 7.2 from the onset with all the provided
	configurations, too.</p>
    </body>

    <help>
      <task>Document the various configurations to be tested.</task>

      <task>Setup the automatic QA infrastructure.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>Capability-Based Network Communication for Capsicum/CloudABI</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Schouten</common>
	</name>
	<email>ed@nuxi.nl</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/NuxiNL/arpc">ARPC: GRPC-Like RPC Library That Supports File Descriptor Passing</url>
      <url href="https://github.com/NuxiNL/flower">Flower: A Label-Based Network Backplane</url>
    </links>

    <body>
      <p>One of the weaknesses of Capsicum and CloudABI is that it is
	not easy to develop applications that need to make outgoing
	network connections, since system calls like
	<tt>connect()</tt> and <tt>sendto()</tt> are disabled.  Though
	we can sometimes work around this by ensuring that the
	sandboxed process already possesses socket file descriptors on
	startup, this does not allow the destination process to be
	restarted, moved to a different network address, be load
	balanced, etc..</p>

      <p>Coming up with a solution for this is quite important for me,
	as I am currently working on making CloudABI work on top of
	Kubernetes, Google's open source cluster management suite.
	The idea is that Kubernetes will schedule CloudABI processes
	instead of Docker containers.  All of these CloudABI processes
	will have their dependencies on other services in the cluster
	injected explicitly, making internal communication very
	secure.  All of this is intended to work on &os; as well, of
	course!</p>

      <p>To solve this problem, I've been working on a daemon called
	Flower (read: flow-er) that allows software to register
	services and connect to them.  Servers are identified by a set
	of labels with values (e.g., <tt>{datacenter: 'frankfurt',
	service: 'mysql'}</tt>).  Clients can connect these servers by
	providing the corresponding label(s).  Flower's security model is
	capability-based, just like Capsicum.  The ability to bind and
	connect can be limited by permanently constraining labels to
	certain values.</p>

      <p>Flower has been designed not to act as a proxy.  It does
	not copy any data.  It merely forwards existing socket file
	descriptors or creates UNIX socket pairs and hands these out
	to its clients and servers.  To realize this, processes
	communicate with Flower using an RPC library called ARPC.
	ARPC is a very simple clone of Google's GRPC, with the special
	feature that messages (Protobufs) can have file descriptors
	attached.</p>
    </body>

    <sponsor>Nuxi, the Netherlands</sponsor>

    <help>
      <task>Finish implementing the Flower code.</task>

      <task>Integrate Flower with the Kubernetes/CloudABI runtime.</task>

      <task>Release the Kubernetes/CloudABI runtime as open source
	software.</task>
    </help>
  </project>

  <project cat='team'>
    <title>Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Ren√©</given>
	  <common>Ladan</common>
	</name>
	<email>portmgr-secretary@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Ports Management Team</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/ports/">About &os; Ports</url>
      <url href="https://www.freebsd.org/doc/en_US.ISO8859-1/articles/contributing/ports-contributing.html">Contributing to Ports</url>
      <url href="http://portsmon.freebsd.org/index.html">&os; Ports Monitoring</url>
      <url href="https://www.freebsd.org/portmgr/index.html">Ports Management Team Website</url>
      <url href="https://twitter.com/freebsd_portmgr/">&os; portmgr on Twitter (@freebsd_portmgr)</url>
      <url href="https://www.facebook.com/portmgr">&os; Ports Management Team on Facebook</url>
      <url href="https://plus.google.com/communities/108335846196454338383">&os; Ports Management Team on Google+</url>
    </links>

    <body>
      <p>This quarter, 2017Q2, broke the 30,000 ports landmark for the
	first time.  The PR count is currently just under 2,500, with
	almost 600 of them unassigned.  This quarter saw almost 7,400
	commits from 171 committers.  More PRs got closed this
	quarter than last quarter, but also more PRs got sent in,
	both of which are good to see.</p>

      <p>Over the past three months, we welcomed four new committers:
	Bradley T.  Hughes (bhughes@), Danilo G. Baio (dbaio@), Jochen
	Neumeister (joneum@), and Richard Gallamore (ultima@).  kan@
	re-joined us as a ports committer.  One commit bit, that of
	bf@, was taken in for safekeeping after a long period of
	inactivity.</p>

      <p>On the management side, the Ports Management Team welcomed
	back bapt@, who is working on several new features for the
	Ports Tree.  The Ports Management Team also had its annual
	real-life meeting during BSDCan.</p>

      <p>On the infrastructure side, three new <tt>USES</tt> values
	were introduced:</p>

      <ul>
	<li><tt>cargo</tt>, to ease the porting of Rust packages or
	  binaries using the <tt>cargo</tt> command (also covered
	  separately in this report)</li>

	<li><tt>groff</tt>, to handle a dependency on the
	  <tt>groff</tt> document formatting system, that has been
	  removed from the base system for &os; 12</li>

	<li><tt>meson</tt>, to provide support for projects based on
	  Meson</li>
      </ul>

      <p>The default version of PostgreSQL switched from 9.3 to 9.5,
	and that of Python3 from 3.5 to 3.6.  The default generator
	for ports using <tt>cmake</tt> has been switched to
	<tt>ninja</tt>.</p>

      <p>Some major version updates are: <tt>pkg</tt> 1.10.1, Firefox
	54.0.1, and Chromium 59.0.3071.115.</p>

      <p>Behind the scenes, antoine@ ran 36 exp-runs to test version
	updates, make the CRAN ports platform-independent, test installing
	bsdgrep(1) as <tt>/usr/bin/grep</tt>, test LLVM updates, test
	the ino64 project, and perform Makefile cleanups.</p>
    </body>
  </project>

  <project cat='kern'>
    <title>Coda revival</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napiera&#322;a</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/trasz/FreeBSD/tree/coda">GitHub Repository</url>
    </links>

    <body>
      <p>Coda is a distributed file system developed as a research
	project at Carnegie Mellon University, descended from a older
	version of the Andrew File System.  It got dropped from &os;
	some five years ago, due to not having been adopted for a
	MPSAFE world.  The focus for this current project is to bring
	it back into sufficiently workable shape that it could return
	to the kernel.  It is currently in a working condition.  Work
	is underway to test it better, fix whatever issues are found,
	and commit it to 12-CURRENT.</p>
    </body>

    <sponsor>Chalmers University of Technology</sponsor>

    <help>
      <task>Additional testing.</task>

      <task>Update the userspace components (<tt>net/coda_client</tt>
	and <tt>net/coda_server</tt>).</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/arm64</title>

    <contact>
      <person>
	<name>
	  <given>Andrew</given>
	  <common>Turner</common>
	</name>
	<email>andrew@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/arm64">&os; arm64 Wiki Page</url>
    </links>

    <body>
      <p>Support for the Privilege Access Never (PAN) feature was
	added.  This stops the kernel from accessing userspace
	memory, except through specific instructions.  This helps
	security by only allowing access to userspace via the
	correct accessor functions.  This is enabled on all
	supported CPUs that implement ARMv8.1 or later.</p>

      <p>The <tt>pmap</tt> code now supports the Unprivileged
	execute-never (UXN) and Privileged execute-never (PXN) bits
	in the page tables.  These bits stop userspace and the
	kernel, respectively, from executing instructions on any
	marked page.</p>

      <p>The performance of the pmap layer has been improved.  Many
	of the cache handling function calls have been removed.
	Some were needed early on to work around other bugs that
	have now been fixed.  The removal of these calls has led to
	a large performance improvement.</p>

      <p>The kernel now uses <tt>crc32c</tt> instructions where
	appropriate.  These are an optional set of instructions to
	perform <tt>crc32c</tt> checksumming quickly without using a lookup
	table.c</p>

      <p>The <tt>VM_MEMATTR_WRITE_THROUGH</tt> memory attribute is
	now supported.  This is used to allocate memory for the
	framebuffer.  Previously, the kernel would use cached
	memory; however, this leads to visual artifacts.  The
	write-through flag fixes these by writing data out to
	RAM.</p>

      <p>The default linker on arm64 is now <tt>lld</tt>.  This
	means that &os; is able to build itself with just the components
	in the base system, a big milestone!</p>
    </body>
  </project>

  <project cat="ports">
    <title>Rust</title>

    <contact>
      <person>
	<name>&os; Rust team</name>
	<email>rust@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Rust">Wiki Portal</url>
      <url href="https://gist.github.com/dumbbell/b587da50ef014078da9e732a4331ebad">Guide to Bootstrap Rust on &os;</url>
      <url href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=216143">Bug Report to Track Progress on Bootstrapping</url>
      <url href="https://internals.rust-lang.org/t/pre-rfc-target-extension-dealing-with-breaking-changes-at-os-level/5289">Upstream Discussion of API/ABI-Breaking Changes</url>
    </links>

    <body>
      <p>Rust was updated to 1.18.0 and Cargo to 0.19.0, the latest
	versions at the time of this writing.</p>

      <p><tt>lang/rust</tt> was enabled on &os;/aarch64 and work has
	continued on <tt>devel/cargo</tt> to achieve the same.  We are
	also making slow progress to add support for even more
	platforms.</p>

      <p>Discussion has started upstream to support API/ABI-breaking
	changes between major releases of operating systems.  For
	instance, this is required to be able to target both &os; 11.x
	and 12.x, which have ABI changes involving important
	structures.  Once support is added upstream, it will be
	possible to target a specific ABI and do
	cross-compilation.</p>

      <p><tt>lang/rust-nightly</tt> was marked as broken for now.  We
	need to revisit how the port is built so we can use the
	<tt>x.py</tt> script as recommended by upstream.</p>

      <p>Tobias Kortkamp (<tt>tobik@</tt>) created the
	<tt>USES=cargo</tt> setting to make it easy to add Rust
	applications to the Ports Collection.  This is further
	detailed in a separate entry in this quarterly status
	report.</p>

      <p>The compiler, <tt>rustc</tt>, is crashing sometimes when
	there is a compilation error.  Therefore, there is a bit of
	work to do to improve its stability.</p>

      <p>There is some code duplication between the
	<tt>lang/rust*</tt> and <tt>devel/cargo</tt> Makefiles.  These
	all deserve a bit of cleanup, and it might be useful to create
	a <tt>USES=rust</tt> Makefile helper.</p>
    </body>

    <help>
      <task>Bootstrap Rust on more platforms.</task>

      <task>Investigate compiler crashes.</task>

      <task>Investigate how to speed up <tt>lang/rust*</tt>
	compilation times.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Intel 10G Driver Update</title>

    <contact>
      <person>
	<name>
	  <given>Chris</given>
	  <common>Galazka</common>
	</name>
	<email>krzysztof.galazka@intel.com</email>
      </person>

      <person>
	<name>
	  <given>Jeb</given>
	  <common>Cramer</common>
	</name>
	<email>jeb.j.cramer@intel.com</email>
      </person>
    </contact>

    <links>
      <url href="https://reviews.FreeBSD.org/D11232">Commit Adding X553 <tt>ix</tt>/<tt>ixv</tt> Support</url>
    </links>

    <body>
      <p>The <tt>ix</tt> and <tt>ixv</tt> network interface drivers
      support a variety of Intel network interfaces, with line
      speeds at 10 Gbit/second.</p>

      <p>This quarter, the drivers gained support for the X553
      network interface, which is found on System-on-a-Chip devices
      based on the Denverton platform.  This update should allow
      &os; to be more useful on a new class of hardware
      platform.</p>

    <p>Work is also underway to convert these drivers to use the
      <tt>iflib</tt> network driver library, which should ease
      future maintenance of the drivers, as well as the network
      subsystem as a whole.</p>
    </body>
  </project>

  <project cat='third'>
    <title>HardenedBSD</title>

    <contact>
      <person>
	<name>
	  <given>Shawn</given>
	  <common>Webb</common>
	</name>
	<email>shawn.webb@hardenedbsd.org</email>
      </person>

      <person>
	<name>
	  <given>Oliver</given>
	  <common>Pinter</common>
	</name>
	<email>oliver.pinter@hardenedbsd.org</email>
      </person>
    </contact>

    <links>
      <url href="https://hardenedbsd.org/">HardenedBSD Homepage</url>
      <url href="http://clang.llvm.org/docs/SafeStack.html">SafeStack</url>
      <url href="http://t3a73imee26zfb3d.onion/">HardenedBSD Tor Hidden Service</url>
      <url href="https://github.com/HardenedBSD/hardenedBSD/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22">Projects HardenedBSD Would Like Help With</url>
    </links>

    <body>
      <p>HardenedBSD is a derivative of &os; that gives special attention to
	security-related enhancements and exploit-mitigation
	technologies.  From an initial focus on Address Space Layout
	Randomization (ASLR), it has now branched out to explore
	additional exploit mitigation techniques.</p>

      <p>It has been a long while since HardenedBSD's last entry
	in a quarterly status report, back in 2015Q4.  The
	intervening year saw HardenedBSD gain new developers
	Bernard Spil and Franco Fichtner, import LibreSSL and
	OpenNTPd into base as the default crypto library and NTP
	client, respectively, and introduce the <tt>hbsd-update</tt>
	binary update mechanism for the base system.  The
	<tt>secadm</tt> application got a rewrite and Trusted Path
	Execution (TPE).  PIE is now enabled for the base system for
	arm64 and amd64 as well as the bulk of the ports tree, and the
	ports tree also gained RELRO and BIND_NOW.  Integriforce
	(similar to NetBSD's verified exec, <tt>veriexec</tt>) was
	introduced for the base system, as well as SafeStack, a
	technology for protection against stack-based buffer
	overflows that's developed by the Clang/LLVM community.
	SafeStack relies and builds on top of Address Space Layout
	Randomization (ASLR), and is strengthened by the presence of
	PaX NOEXEC.  Certain high-profile ports also have SafeStack
	enabled.</p>

      <p>Extremely generous hardware donations from G2, Inc. have
	provided for dedicated package building and binary update
	servers, as well as development and test servers.</p>

      <p>In March of 2017, we added Control Flow Integrity (CFI) to
	the base system.  CFI is an exploit mitigation technique that
	helps prevent attackers from modifying the behavior of a
	program and jumping to undefined or arbitrary memory
	locations.  This type of technique is gaining adoption across
	the industry &mdash; Microsoft has implemented a variant of
	CFI, which they term Control Flow Guard, or CFG, and the PaX
	team has spent the last few years perfecting their Reuse
	Attack Protector, RAP.  Of these, RAP is the most complete and
	effective implementation, followed by Clang's CFI.  RAP would
	be a great addition to HardenedBSD; however, it requires a
	GPLv3 toolchain and is patent-pending.</p>

      <p>CFI can be implemented either on a per-DSO basis, or across
	all DSOs in a process.  Currently only the former is
	implemented, but we are working hard to enable cross-DSO CFI.
	As is the case for SafeStack, cross-DSO CFI requires both ASLR
	and PaX NOEXEC in order to be effective.  If an attacker
	knows the memory layout of an application, the attacker might
	be able to craft a data-only attack, modifying the CFI control
	data.</p>

      <p>The behavior of several system control (<tt>sysctl</tt>)
	nodes has been tighened up, limiting write access and
	introducing additional safety checks for write accesses.
	Kernel module APIs received a similar treatment.
	HardenedBSD's PaX SEGVGUARD implementation received a few
	updates to make it more stable and performant.</p>

      <p>As of March 2017, HardenedBSD is now accessible through a
	Tor hidden service.  The main website, binary updates, and
	package distribution are all available over the hidden
	service.</p>

      <p>We now maintain our own version of the <tt>drm-next</tt>
	branch for updated graphics support.  Binary updates are also
	provided for this branch.</p>

      <p>HardenedBSD would like to thank all those who have generously
	donated time, money, or other resources to the project.</p>
    </body>

    <sponsor>SoldierX</sponsor>

    <sponsor>G2, Inc</sponsor>

    <help>
      <task>Port SafeStack to arm64.</task>

      <task>Integrate Cross-DSO CFI.</task>

      <task>Add documentation to the HardenedBSD Handbook.</task>

      <task>Start porting grsecurity's RBAC.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>GCC (GNU Compiler Collection)</title>

    <contact>
      <person>
	<name>
	  <given>Gerald</given>
	  <common>Pfeifer</common>
	</name>
	<email>gerald@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Andreas</given>
	  <common>Tobler</common>
	</name>
	<email>andreast@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://gcc.gnu.org">GCC Homepage</url>
      <url
      href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219275">Issue Tracker Entry for the Update to GCC 6</url>
      <url href="https://gcc.gnu.org/gcc-5/changes.html">GCC 5 Changelog</url>
      <url href="https://gcc.gnu.org/gcc-5/porting_to.html">GCC 5 Porting Issues</url>
    </links>

    <body>
      <p>The default version of GCC in the Ports Collection (the one
	requested by <tt>USE_GCC=yes</tt> and various
	<tt>USES=compiler</tt> invocations) has been updated from
	GCC 4.9.4 to GCC 5.4.</p>

      <p>This new major version brings many new capabilities and
	improvements, as well as some changes that may require
	adjustments.  The latter category includes many new compiler
	warnings, significant
	improvements to inter-procedural optimizations, and link-time
	optimization.</p>

      <p>The default mode for C is now <tt>-std=gnu11</tt> instead of
	<tt>-std=gnu89</tt>.  The C++ front end has full C++14
	language support, including C++14 variable templates, C++14
	aggregates with non-static data member initializers, C++14
	extended <tt>constexpr</tt>, and more.  The Standard C++
	Library (libstdc++) has full C++11 support and experimental
	full C++14 support.  It uses a new ABI by default.</p>

      <p>The <tt>lang/gcc</tt> port now is a meta-port that pulls in the
	respective <tt>lang/gccX</tt> port (based on the setting of
	<tt>$GCC_DEFAULT</tt>) and defines <tt>gcc</tt>, <tt>g++</tt>,
	and <tt>gfortran</tt> as symlinks to the respective versioned
	binaries.</p>

      <p>This is the end of a long journey establishing this infrastructure,
	which is now similar that used by the python ports, for example.
	Having the new infrastructure makes upgrading the default, as
	well as locally adjusting the default version, a lot
	easier.</p>

      <p><tt>gcc8-devel</tt> has been added, and armv6hf support removed,
	and we made adjustments for newer versions of &os;.  Also of note
	are various cleanups and changes to improve the robustness of our
	packages and the addition of support for aarch64 to many
	ports.</p>

      <p>Thanks to dim@, jbeich@, tijl@, mat@, miwi@, linimon@ for
	assisting with this work.</p>
    </body>

    <help>
      <task>The update of the default version of GCC from GCC 5.4 to
	GCC 6.4 is stalled, unfortunately.  The work on the GCC and
	insfrastructure sides is complete, but unfortunately there are
	a number of broken ports that need to be adjusted/fixed.  Any
	help is very appreciated; see <a
	  href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=219275">PR
	  219275</a> for details.</task>
    </help>
  </project>

  <project cat='doc'>
    <title>Doc Version Strings Improved by Their Absence</title>

    <contact>
      <person>
        <name>
          <given>Warren</given>
          <common>Block</common>
        </name>
        <email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/fdp-primer/">&os; Documentation Project Primer</url>
      <url href="https://svnweb.freebsd.org/doc/head/share/mk/doc.docbook.mk?r1=50233&amp;r2=50232&amp;pathrev=50233">Get Version Information from Subversion Metadata</url>
    </links>

    <body>
      <p>In retrospect, our <tt>&dollar;FreeBSD&dollar;</tt> strings in
	source files are kind of weird, like a vestigial tail.  The
	version control system stores all of that information in
	metadata.  Yet here we are, not only allowing the version
	control system to alter our source files on every commit, but
	forcing it to do so.</p>

      <p>The reason for doing so is that the previous version control
	system did it.  Really.</p>

      <p>Version control strings are a headache for translators using
	the new PO toolchain.  It is an ever-changing string that offers
	nothing to the translation, yet can cause conflicts with earlier
	versions of itself.</p>

      <p>We also had complaints about how the Handbook was always months
	out of date.  It was not, of course... but looking at just the
	version string in the main, rarely-changing book.xml file gave
	that impression.  We fixed that problem last year, so the build
	system checks all the source files for the latest commit, but it
	seems easier to not have to fix the problem at all.</p>

      <p>Of course, that was really only one aspect of an ongoing
	problem.  Our documentation build system was checking the
	version string in the source file, not the metadata.  In 1973,
	metadata, like cars not composed chiefly of rust, had not yet
	been invented.  I modified the build system to extract the
	information from the metadata (and noted, with some surprise,
	that this is a task at which Git is much better than
	Subversion).</p>

      <p>The next step was to remove the
	<tt>&dollar;FreeBSD&dollar;</tt> strings from the source files
	and remove the <tt>FreeBSD=%H</tt> property that forces
	Subversion, against its better judgement, to substitute text in
	the actual contents of the file.  The version information is not
	lost.  It lives in the metadata, so retrieving it is as simple
	as <tt>svn info</tt> &mdash; it does not need to be in the
	source at all.  However, as with anything that touches code or
	processes which have not been touched in living memory, there
	was some debate over this.  At that point, I offered to remove
	the version strings from the &os; Documentation Project Primer
	book as a test.</p>

      <p>The change allowed the <tt>zh_TW</tt> translation team to turn
	off the <tt>FreeBSD=%H</tt> property on their translation and
	continue their work without fighting with the version strings.
	Rendered versions of the book still display the name of the last
	committer and the date and revision number of the last commit,
	but all of that information comes from metadata.  As such, it is
	also more likely to be correct.</p>

      <p>Since the change, there have not been any complaints, at least
	not to me.  In fairness, the removal of version strings from the
	FDP Primer alone is a small change in a tiny corner of the
	project.  Looking at it another way, it might be that some
	things that seem to be necessary are more about the comfort of
	familiarity than actual utility.</p>

      <p>At present, this is strictly a change to the documentation
	build toolchain and a single documentation book.  However, there
	does not appear to be any reason why it could not be extended to the
	rest of the documents.  It might even serve as tiny test of
	whether the expansion of <tt>&dollar;FreeBSD&dollar;</tt> tags
	is needed throughout the rest of the &os; tree.</p>
    </body>
  </project>

  <project cat='team'>
    <title>The FreeBSD Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSDFoundation.org/">FreeBSD Foundation Website</url>
      <url href="https://www.FreeBSDfoundation.org/wp-content/uploads/2017/06/FreeBSD-Foundation-Q2-2017-Update.pdf">FreeBSD Foundation Quarterly Newsletter</url>
    </links>

    <body>
      <p>Last quarter the Foundation was busy supporting the &os;
	Project in so many ways!  We brought on two interns from the
	University of Waterloo who were extremely productive, from
	working on a continuous integration project to adding MSDOS
	FAT filesystem support to <tt>makefs</tt>.  We continued
	helping to accelerate OS changes with our internal staff of
	software developers, as well as funding outside software
	development projects, and continued promoting &os; by
	participating in technology conferences around the world.  To
	encourage more commercial users to donate to the Foundation,
	we launched a new partnership program.  The &os; 11.1
	release effort has been led by a full-time Foundation
	employee, to continue keeping releases timely and reliable.
	Finally, we led the effort to celebrate the newly declared
	&os; Day, to help raise awareness of &os; around the
	world!</p>

      <p>Below, you can read some of the highlights from our Q2
	newsletter, and find writeups throughout this status report
	from Foundation staff members including Ed Maste, Kostik
	Belousov, and Glen Barber.  Don't forget, we are 100%
	funded by donations.  Please take a moment to <a
	  href="https://www.FreeBSDfoundation.org/donate/">donate
	  now</a>, so we can continue supporting the &os; Project and
	community worldwide!</p>

      <p>Q2 Development Projects Summary</p>

      <p>Our hard work continues into the 2nd quarter of 2017.
	Please take a look at the highlights from our more recent
	Development Projects summaries.</p>

      <p>April: &os; USB Mass Storage Target Project Update</p>

      <p>The Foundation awarded a project grant to Edward Tomasz
	Napiera≈Ça to develop a USB mass storage target driver, using
	the &os; CAM Target Layer (CTL) as a backend.  This project
	allows &os; on an embedded platform, such as a BeagleBone
	Black or Raspberry Pi Zero, to emulate a USB mass storage
	target, commonly known as a USB flash stick.  Read more at
	<a
	  href="https://www.FreeBSDfoundation.org/blog/april-2017-development-projects-update/">https://www.FreeBSDfoundation.org/blog/april-2017-development-projects-update/</a>.</p>

      <p>May: Foundation Brings on Co-Op Students</p>

      <p>At the beginning of May we embarked on a new path in the
	&os; Foundation, with the hiring of co-operative education
	(co-op) students from the University of Waterloo.  The
	University of Waterloo is a pioneer and leader in
	co-operative education, with 100% of Engineering students
	and a majority of Computer Science students participating in
	co-op programs.  Read more at <a
	  href="https://www.FreeBSDfoundation.org/blog/may-2017-development-projects-update/">https://www.FreeBSDfoundation.org/blog/may-2017-development-projects-update/</a>.</p>

      <p>June: FreeBSD Foundation 2017 Project Proposal
	Solicitation (contributed by Ed Maste)</p>

      <p>One of the ways the Foundation supports &os; is by
	providing development grants for work on individual
	projects.  These allow developers to propose projects they
	would like to undertake to improve &os; and request funding
	to perform that work.  The Foundation is always willing to
	receive proposals, but will occasionally issue a call for
	proposals to highlight specific areas of focus and to be
	able to collect and evaluate a group of proposals.</p>

      <p>The proposal submission deadline was July 14, 2017, but as
	mentioned above, people are welcome to submit proposals at
	any time.</p>

      <p>Although proposals may address any &os; subsystem or
	infrastructure, we are particularly interested in receiving
	proposals related to:</p>

      <ul>
	<li>Improvements to the security of &os; itself, or of
	  applications running on &os;</li>

	<li>New test cases, improved test infrastructure, and
	  quality assurance</li>

	<li>Improved software development tools</li>
	
	<li>Projects to improve community collaboration and
	  communication</li>

	<li>Improving the &os; &quot;out of the box&quot; experience
	  for new users on various hardware platforms</li>

	<li>Establishing &os; as a leader in advancing projects of
	  shared interest (such as ZFS, LLVM, or
	  <tt>libarchive</tt>)</li>
      </ul>

      <p>More details can be found at <a
	  href="https://www.FreeBSDfoundation.org/blog/FreeBSD-foundation-2017-project-proposal-solicitation/">https://www.FreeBSDfoundation.org/blog/FreeBSD-foundation-2017-project-proposal-solicitation/</a>.
	The full project proposal submission guidelines can be found
	at <a
	  href="http://cts.vresp.com/c/?FreeBSDFoundation/d364934d4d/TEST/1b229d9af7">http://cts.vresp.com/c/?FreeBSDFoundation/d364934d4d/TEST/1b229d9af7</a>.</p>

      <p>Please do not hesitate to contact
	proposals@FreeBSDfoundation.org with any questions.</p>

      <p>Announcing the New Partnership Program (contributed by Deb
	Goodkin)</p>

      <p>I'm excited to announce our new FreeBSD Foundation
	Partnership Program!  Our work is 100% supported by
	donations from individuals and organizations.  With a
	spending budget of $1,500,000, we rely on large donations
	from our commercial users to help us sustain and increase
	our support.  Recognizing the value of these donations, and
	putting together a sustainable funding model, we wanted to
	institute benefits that highlighted this support, and
	recognize these donors in productive ways.  Partnerships are
	an avenue to assist commercial users by helping them get on
	board more quickly with &os;, share their needs with the
	community, and facilitate collaboration with &os;
	developers.  We believe that building these relationships
	with commercial users will contribute to keeping &os;
	relevant and help provide a sustainable and healthy
	ecosystem.</p>

      <p>You can check out our updated donor pages to see how we are
	acknowledging our Partners at <a
	  href="https://www.FreeBSDfoundation.org/donors/">https://www.FreeBSDfoundation.org/donors/</a>.
	You can also find out more about this new program at <a
	  href="https://www.FreeBSDfoundation.org/FreeBSD-foundation-partnership-program/">https://www.FreeBSDfoundation.org/FreeBSD-foundation-partnership-program/</a>.</p>

      <p>When I was in China last week, I had a chance to talk to a
	few companies about our new partnership program, and it
	definitely generated more interest in supporting our
	efforts.</p>

      <p>We are continuing to reach out to commercial users for help
	that will enable us to provide more outreach and support for
	&os;.  This includes funding more projects to improve &os;,
	providing &os; education and training, and recruiting more
	contributors to the Project.  We can only provide the above
	support with your donations, and we need your help to
	connect us with your companies.  Please consider notifying
	your organization about our new Partnership Program and helping
	to connect us with the appropriate contacts at your
	company.</p>

      <p>Your donations will help us:</p>

      <ul>
	<li>Accelerate improvements and add new features to
	  &os;</li>

	<li>Support release engineering efforts full-time</li>

	<li>Create and provide &os; educational and training
	  material</li>

	<li>Provide face-to-face opportunities for developers to
	  work together</li>

	<li>Improve and support &os; infrastructure</li>
      </ul>

      <p>We need your support to continue improving &os;.</p>

      <p>Q2 2017 Conference Recaps</p>

      <p>From sponsoring events to attending conferences, the
	Foundation continued its mission of advocacy in the second
	quarter of 2017.  Over the past few weeks, members of the
	Foundation team represented the Project and the Foundation
	at events around the world.  Below are just a few of the
	conference recaps.</p>

      <p>FOSSASIA 2017 (contributed by Philip Paeps)</p>

      <p>The Foundation kindly funded part of my travel from Tokyo to
	Singapore to attend FOSSASIA.  I gave the &quot;&os; is not
	a Linux Distribution&quot; presentation that Foundation
	board member George Neville-Neil wrote for Open Source China
	in December.  My presentation was well-attended, and I got a
	lot of good questions from the primarily Linux-oriented
	audience.  Read more at <a
	  href="https://www.FreeBSDfoundation.org/blog/fossasia-2017-trip-report-philip-paeps/">https://www.FreeBSDfoundation.org/blog/fossasia-2017-trip-report-philip-paeps/</a>.</p>

      <p>OSCON 2017 (contributed by Ed Maste)</p>

      <p>I represented the FreeBSD Foundation at OSCON 2017, which took place
	May 8-11, 2017, in Austin, TX: <a
	  href="https://conferences.oreilly.com/oscon/oscon-tx">https://conferences.oreilly.com/oscon/oscon-tx</a>.</p>

      <p>The Foundation booth was also staffed by &os; committer
	Brad Davis and Doug Mcintire from Netgate.  We met up
	Wednesday morning to set up the table.  We were part of a
	&quot;nonprofit pavilion&quot; which consisted of eight or
	so tables, located between Open Camps and Operation
	Code.</p>

      <p>To help attract booth traffic, I brought a Raspberry Pi 3,
	with a small LCD display attached.  As a demo, the Raspberry
	Pi showed a video of a Gource rendering of changes to the
	&os; source tree over time (see example at <a
	  href="https://www.youtube.com/watch?v=vZ8Sspua0Ks">https://www.youtube.com/watch?v=vZ8Sspua0Ks</a>).
	Read more at <a
	  href="https://www.FreeBSDfoundation.org/blog/conference-recap-oscon-2017/">https://www.FreeBSDfoundation.org/blog/conference-recap-oscon-2017/</a>.</p>

      <p>Rootconf 2017 (contributed by Philip Paeps)</p>

      <p>In mid-May I presented at Rootconf 2017 in Bangalore.
	Rootconf is India's principal conference where systems and
	operations engineers share real-world knowledge about
	building reliable systems: <a
	  href="https://rootconf.in/2017/">https://rootconf.in/2017/</a>.</p>

      <p>As always, it was interesting to hear the difficulties
	people face trying to run reliable systems on less reliable
	platforms.  While many of the presentations were very
	Linux-specific and not very exciting to me, a couple of
	talks did catch my eye.</p>

      <p>I particularly enjoyed the talk by Aruna Sankaranarayanan
	(<a
	  href="https://www.youtube.com/watch?v=XQJ7YhVoSWI&amp;feature=youtu.be">https://www.youtube.com/watch?v=XQJ7YhVoSWI&amp;feature=youtu.be</a>)
	explaining how Mapbox takes advantage of Amazon's &quot;spot
	pricing&quot; mechanism by spawning and shutting down
	machines at different price points to optimize for cost
	without compromising availability.  Their spotswap <a
	  href="https://github.com/mapbox/spotswap/">https://github.com/mapbox/spotswap/</a>
	software has been released under a BSD license.  It sounds
	as though it should be possible to port this to &os; with
	minimal effort.  Read more at <a
	  href="https://www.FreeBSDfoundation.org/blog/rootconf-2017-trip-report-philip-paeps/">https://www.FreeBSDfoundation.org/blog/rootconf-2017-trip-report-philip-paeps/</a>.</p>

      <p>BSDCan 2017/&os; Developers Summit (contributed by Deb
	Goodkin)</p>

      <p>One of our initiatives is to assist in providing
	face-to-face knowledge sharing and development opportunities
	around the world.  One way we do this is by sponsoring
	BSD-related conferences and &os; Developer and Vendor
	Summits.  We recently sponsored both BSDCan 2017 and the
	&os; Developer and Vendor Summit in Ottawa, Ontario, Canada,
	which took place June 7-10, 2017.  Many of our board and
	staff members attended the summit and conference to run
	tutorials, give presentations, lead sessions, work with
	developers, give demos, and share knowledge.</p>

      <p>In addition, this year we were pleased to bring our new
	University of Waterloo interns to the conference where they
	had the opportunity to demonstrate some of their projects at
	the Foundation table.  Read more at <a
	  href="https://www.FreeBSDfoundation.org/blog/conference-recap-bsdcan-2017FreeBSD-developers-summit/">https://www.FreeBSDfoundation.org/blog/conference-recap-bsdcan-2017FreeBSD-developers-summit/</a>.</p>

      <p>Open Travel Grant Applications</p>

      <p>The Foundation recognizes the importance of bringing
	members of the &os; community face-to-face to both further
	development of the Project and spread the word about &os;.
	Travel grants are available to community members who need
	assistance with travel expenses for attending conferences
	related to &os; development and advocacy.  Please note: the
	travel grant policy has been recently updated.  Please
	carefully review it before submitting your application.</p>

      <p>More information about travel grants is available at: <a
	href="https://www.FreeBSDfoundation.org/what-we-do/grants/travel-grants/">https://www.FreeBSDfoundation.org/what-we-do/grants/travel-grants/</a>.</p>

      <p>&os; Day was June 19! (contributed by Anne Dickison)</p>

      <p>June 19th was declared &os; Day!  Thank you to everyone who
	joined us in honoring the &os; Project's pioneering legacy
	and continuing impact on technology.  Find out more about
	&os; Day and how we celebrated here at <a
	  href="https://www.FreeBSDfoundation.org/blog/happy-FreeBSD-day/">https://www.FreeBSDfoundation.org/blog/happy-FreeBSD-day/</a>.</p>

      <p>Upcoming Events</p>

      <p>Find out about upcoming Foundation events at <a
	  href="https://www.FreeBSDfoundation.org/news-and-events/upcoming-events/">https://www.FreeBSDfoundation.org/news-and-events/upcoming-events/</a>.</p>

      <p>&os; Journal</p>

      <p>The May/June 2017 Issue of the &os; Journal is now
	available.  Don't miss articles on &os;'s Firewall Feast,
	CADETS: Blending Tracing and Security on &os;, Toward
	Oblivious Sandboxing with Capsicum, and more.  (<a
	  href="https://www.FreeBSDfoundation.org/past-issues/security/">https://www.FreeBSDfoundation.org/past-issues/security/</a>)</p>

      <p>Did you miss the March/April issue?  Check out articles on
	CFEngine, Puppet on &os;, Vagrant, and more!  (<a
	  href="https://www.FreeBSDfoundation.org/past-issues/configuration-management/">https://www.FreeBSDfoundation.org/past-issues/configuration-management/</a>)
	As a recent addition of functionality, browser-based
	subscribers now have the ability to download and share PDFs
	of the articles!</p>

      <p>Sample Issue!  If you've ever wanted to read through an
	entire issue of the &os; Journal, now's your chance.
	Download the sample issue from <a
	  href="https://mydigitalpublication.com/publication/?i=296880#{&quot;issue_id&quot;:296880,&quot;numpages&quot;:1,&quot;page&quot;:1}">https://mydigitalpublication.com/publication/?i=296880#{"issue_id":296880,"numpages":1,"page":1}</a>
	and be sure to share with your friends and colleagues.  Not
	a subscriber?  Sign up today at <a
	  href="https://www.FreeBSDfoundation.org/journal/">https://www.FreeBSDfoundation.org/journal/</a>.</p>

      <p>More information about the Foundation's doings and
	goings-on can be found in our own quarterly newsletter, linked
	above.</p>
    </body>
  </project>

  <project cat='team'>
    <title>The &os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Core's activities during the second quarter culminated in
	the introduction of two new initiatives during BSDCan:</p>

      <ul>
	<li>Extending &os; Project Membership</li>

	<li>The &os; Community Process</li>
      </ul>

      <h3>&os; Project Members</h3>

      <p>&os; Project Membership being extended to more than just
	committers is a step that enables the Project to recognise and
	reward people who support us in ways other than by writing
	code.  People that organise conferences or user groups; who
	are prominent supporters on social media; who triage bug
	reports and who test changes; and many others who contribute
	in various ways, are deserving of recognition for the support
	that they give to the Project.  Core hopes that this will both
	encourage more people to volunteer their time and effort on
	behalf of the Project, and encourage those who already do to stick
	with the Project, if not become more deeply involved.</p>

      <p>The naming for the new group of non-committer Project members
	took a few tries to get right: having tried, and rejected,
	&quot;Contributor&quot; and then &quot;Associate&quot;, Core
	took the view that since what they were offerring was formal
	Project Membership, then that was the right thing to call it.
	Committers thus become those Project Members with access to
	commit to the Project's code repositories.  Project Members
	receive an @FreeBSD.org e-mail address, access to various
	Project hardware, access to internal mailing lists and other
	communications channels, and invitations to attend Developer
	Summits in their own right.  Committers in addition have
	commit rights in the Subversion repositories and GitHub, and
	active Committers can vote in Core team elections.</p>

      <h3>The &os; Community Process</h3>

      <p>This is an idea that has a long pedigree within other projects,
	and &os; is very consciously modelling its implementation on
	what has worked elsewhere.  When a significantly disruptive or
	wide-scale change is proposed, we should have a formal
	mechanism for documenting the change and what it implies.
	Interested parties can then respond and the change can be
	evolved into the best fit for all users, or else it can be
	found to be impracticable and withdrawn.  The documentation of
	the change will remain as a point of reference should the same
	or a similar proposal come up in the future.  Creating a more
	formal process should help avoid endless sterile arguments
	about what needs to be done, without anyone feeling they have
	sufficient investment in the idea nor backing from the
	majority of the project to justify putting in the work to
	achieve the desired result.</p>

      <p>The very first FCP &mdash; FCP 0 &mdash; describes the
	process itself.  At the time of this writing, Core is voting on
	accepting the initial document, which can be viewed in the
	Project's <a
	  href="https://github.com/freebsd/fcp/blob/master/fcp-0000.md">Github
	repository</a>.  Two new mailing lists have been created:
	fcp@FreeBSD.org is the channel for receiving notifications of
	new FCP proposals and discussing their content, whilst
	fcp-editors@FreeBSD.org exists to provide help with the
	process of drafting the FCP documents.</p>

      <h3>Other Core activities</h3>

      <p>Core is delighted to announce that Gordon Tetlow has joined
	the Security Officer team, and will be working on managing the
	Security Team caseload, freeing up other members to concentrate on
	the more technical aspects of vulnerability remediation.  In
	addition, Ed Maste has joined the Security Team and is available to
	assist the Security Officers where necessary.</p>

      <p>Although Florian Smeets had to step down, the postmaster team
	has recruited three new members and is now back up to
	strength.</p>

      <p>Considering the desirability of a number of fixes that have
	been merged into 10-STABLE since the 10.3 release, core has
	approved a 10.4 release to occur shortly after the 11.1
	release.  This will be a normal support-lifetime release,
	unlike the extended lifetime of the 10.3 release, so the
	overall support lifetime for the 10.x branch will not be
	significantly extended.</p>

      <p>During this quarter, Core has approved issuing three new
	commit bits.  Please welcome:</p>

      <ul>
	<li>Vladimir Kondratyev (wulf@)</li>

	<li>Ryan Libby (rlibby@)</li>

	<li>Kyle Evans (kevans@)</li>
      </ul>

      <p>Also, during this quarter, we had one person give up their
	commit bit:</p>

      <ul>
	<li>Jordan Hubbard (jkh@)</li>
      </ul>

      <p>It is always unsettling when one of the Project's founding
	members decides to move on, but Jordan's interests have
	migrated away from &os;-related projects and he has decided to
	hang up his bit once and for all.</p>

      <p>Core would like to thank NTTA (formerly Verio) for providing
	hosting for a <tt>cvsup</tt> mirror for many years, and also for their
	kind offer to provide ongoing hosting for a machine in their
	Seattle facility.  Since we have no need for additional North
	America hosting, we have declined their offer.</p>

      <p>As usual, a number of questions have been raised about code
	licensing and other matters related to intellectual property.
	Ed Maste has registered &quot;freebsd&quot; on behalf of the
	FreeBSD Foundation on the Mastodon social media network. The
	&quot;Unlicense&quot; is suitable for code being imported into
	libc.  We still have some code published under the old
	4-clause style BSD license, where the extra clause refers
	specifically to the University of California.  While UC has
	generally approved removing that clause, we need to check with
	all copyright holders before changing any remaining 4-clause
	licensing.</p>

      <p>Core, along with the Security Team, are monitoring developments
	concerning the &quot;Stack Clash&quot; vulnerability that hit
	the headlines during June.  Changes to the stack-guard
	mitigation system are underway as a response to the
	proof-of-concept published by Qualys.</p>
    </body>
  </project>
</report>
