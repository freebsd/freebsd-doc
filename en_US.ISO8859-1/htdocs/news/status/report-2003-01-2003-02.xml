<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for Status Report//EN"
                        "http://www.FreeBSD.org/XML/www/share/sgml/statusreport.dtd">

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>January-February</month>
    <year>2003</year>
  </date>

  <section>
    <title>Introduction:</title>

    <p>Another busy two months have passed in the FreeBSD project.  With
      5.0 released, attention is focusing on making it faster via more
      fine-grained locking, adding more high-end features like large
      memory (PAE) support for i386, and further progress on many other
      projects.  FreeBSD 5.1 is expected to ship in late May or early
      June, with 5.2 following at the end of summer.  A roadmap for
      the push to 5-STABLE is available at <a
      href="http://www.FreeBSD.org/doc/en/articles/5-roadmap">
      http://www.FreeBSD.org/doc/en/articles/5-roadmap</a>.  Although
      the 5.x series isn't expected to fully stabilize until the 5.2
      release, 5.1 promises to be an exciting release and a significant
      improvement over 5.0 in terms of speed and stability.</p>

    <p>Not to be forgotten, FreeBSD 4.8, the latest in the 4-STABLE
      series, is nearing release.  Lots of last minute work is going
      into to it to deliver features like XFree86 4.3.0, Intel
      HyperThreading(tm) support, and of course many more bug fixes.
      Don't forget to support the FreeBSD vendors and developers by
      buying a copy of the CD set when it comes out!.</p>

    <p>Thanks,</p>

    <p>Scott Long, Robert Watson</p>
  </section>

<project>
  <title>FreeBSD/MIPS Status Report</title>

  <contact>
    <person>
      <name>
	<given>Juli</given>
	<common>Mallett</common>
      </name>
      <email>jmallett@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.FreeBSD.org/projects/mips/">FreeBSD/MIPS project
      page.</url>
    <url href="http://www.FreeBSD.org/platforms/mips.html">FreeBSD/MIPS
      platform page.</url>
  </links>

  <body>
    <p>Large portions of headers have been filled in, all have been stubbed
      out.  Minimal functions and data elements have been stubbed out or
      filled in.  Machinery added to support some requisite tunables for
      building real kernels.  GCC fixed to generate correct local label
      prefixes making it possible to link real kernels.  Work begun on
      providing enough to create and boot real kernels, on real hardware.
      Decision to only support MIPS-III and above made.</p>
  </body>
</project>

<project>
  <title>BSDCon 2003</title>

  <contact>
    <person>
      <name>
        <given>Gregory</given>
        <common>Shapiro</common>
      </name>
      <email>gshapiro@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <!-- A hypertext link with a description... -->
    <url href="http://www.usenix.org/events/bsdcon03/cfp/">BSDCon 2003 Call For Papers</url>
  </links>

  <body>

    <p>The BSDCon 2003 Program Committee invites you to contribute
      original and innovative papers on topics related to BSD-derived
      systems and the Open Source world. Topics of interest include
      but are not limited to:</p>

    <ul>
      <li>Embedded BSD application development and deployment</li>
      <li>Real world experiences using BSD systems</li>
      <li>Using BSD in a mixed OS environment</li>
      <li>Comparison with non-BSD operating systems; technical, practical, licensing (GPL vs. BSD)</li>
      <li>Tracking open source development on non-BSD systems</li>
      <li>BSD on the desktop</li>
      <li>I/O subsystem and device driver development</li>
      <li>SMP and kernel threads</li>
      <li>Kernel enhancements</li>
      <li>Internet and networking services</li>
      <li>Security</li>
      <li>Performance analysis and tuning</li>
      <li>System administration</li>
      <li>Future of BSD</li>
    </ul>

    <p>Submissions in the form of extended abstracts are due by
      April 1, 2003. Be sure to review the extended abstract
      expectations before submitting. Selection will be based on the
      quality of the written submission and whether the work is of
      interest to the community.</p>

    <p>We look forward to receiving your submissions!</p>

  </body>
</project>

<project>
  <title>
    Bluetooth stack for FreeBSD (Netgraph implementation)
  </title>

  <contact>
    <person>
      <name>
        <given>Maksim</given>
        <common>Yevmenkin</common>
      </name>
      <email>m_evmenkin@yahoo.com</email>
    </person>
  </contact>

  <links>
    <url href="http://www.geocities.com/m_evmenkin/">Latest snapshot</url>
    <url href="http://bluez.sf.net">Linux BlueZ stack</url>
    <url href="http://sourceforge.net/projects/openobex/">OpenOBEX</url>
  </links>

  <body>
    <p>I'm very pleased to announce that another release is available for
    download at <a
    href="http://www.geocities.com/m_evmenkin/ngbt-fbsd-20030305.tar.gz">
    http://www.geocities.com/m_evmenkin/ngbt-fbsd-20030305.tar.gz</a></p>

    <p>This release features new in-kernel RFCOMM implementation that
    provides SOCK_STREAM sockets interface. This makes old user-space
    RFCOMM daemon obsolete. People should not use old user-space
    RFCOMM daemon any longer. The release features new RFCOMM PPP
    daemon that supports DUN and LAN profiles. Note: PPP patch
    (support for chat scripts in -direct mode) is required for DUN
    support. Look for it in the mailing list archive or contact me
    directly. People with Bluetooth enabled cell phones can now
    use them to access Internet.</p>

    <p>The Bluetooth sockets layer has been cleaned up. People should not
    see any WITNESS complaints with new code. Locking issues have been
    revisited and code in much better shape now, although it probably
    is not 100% SMP ready just yet. The code should work on SMP system
    anyway because sockets layer is still under Giant.</p>

    <p>The simple OBEX server and client (based on OpenOBEX library) is
    complete. OBEX File Push and OBEX File Transfer profiles work and
    have been tested with Sony Ericsson T68i cell phone and Bluetooth
    3COM stack on Windows2K. It is now possible to send pictures,
    address book and calendar entries from the cell phone via
    Bluetooth. Minor bug in OpenOBEX library has been fixed and OPEX
    Put-Empty command now works.</p>

    <p>Due to changes in API userland tools must be in sync with the
    kernel. People should install new include files, recompile and
    reinstall all userland tools as part of upgrade. I'm sorry about
    that.</p>
  </body>
</project>

<project>
  <title>FreeBSD 4.8 Release Engineering</title>

  <contact>
    <person>
      <name>
	<given>Murray</given>
	<common>Stokely</common>
      </name>
      <email>re@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.FreeBSD.org/releases/4.8R/schedule.html">FreeBSD
    4.8 Release Schedule.</url>
  </links>

  <body>
    <p>The FreeBSD 4.8 Release Process is well underway.  The RELENG_4
      branch has been under code freeze since February 15, and
      the first release candidates were made available in early March.
      A testing guide has been put together and is available from
      http://www.FreeBSD.org/releases/4.8R/qa.html.</p>

    <p>Developers should coordinate with re@FreeBSD.org about any
      changes they would like to include in this release, and users
      are encouraged to try out the release candidates and help find
      as many bugs as possible now, before the final release is
      made.</p>

    <p>FreeBSD 4.8 represents the newest production release from the
      stable '4.X' branch.  It does not include all of the features
      that were made available in the "new technology" 5.0
      release in January.</p>
  </body>
</project>

<project>
  <title>New Doceng Body Formed</title>

  <contact>
    <person>
      <name>
        <given>Murray</given>
        <common>Stokely</common>
      </name>
      <email>doceng@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.FreeBSD.org/internal/doceng.html" />
  </links>

  <body>
    <p>The doceng@ team is a new body to handle some of the
      meta-project issues associated with the FreeBSD Documentation
      Project. The main responsibilities of this team are to grant
      approval of new doc committers, to manage the doc release
      process, to ensure the documentation toolchains are functional,
      to maintain the doc project primer, and to maintain the sanctity
      of the doc/ and www/ trees.  The current members of this team
      are Nik Clayton, Ruslan Ermilov, Jun Kuriyama, Bruce A. Mah, and
      Murray Stokely.</p>
  </body>
</project>

<project>
  <title>KGI/FreeBSD Status Report</title>

  <contact>
    <person>
      <name>
	<given>Nicholas</given>
	<common>Souchu</common>
      </name>
      <email>nsouch@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.FreeBSD.org/~nsouch/ggiport.html" />
    <url href="http://kgi-wip.sf.org" />
  </links>

  <body>
    <p>The later months have been very busy on KGI. Most of the framework
      has been debugged for typical usage (fb, no accel). I got
      KII (the input interface) connected to syscons through atkbd. Opening
      /dev/graphic works and framebuffer resource access is permitted.
      Finally, the KGIM (KGI module) framework has a better building
      tree for board / monitor drivers and board drivers are now loading
      with resource allocation.</p>

    <p>Most important on the TODO list:
      5.0-RELEASE move (I currently work with a May-2002 5.0-current).
      Most of debug is now done. Let's validate!</p>

    <p>Note that KGI project homepage has changed since the last report.</p>
  </body>
</project>

<project>
  <title>jpman project</title>

  <contact>
    <person>
      <name>
	<given>Kazuo</given>
	<common>Horikawa</common>
      </name>
      <email>horikawa@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.jp.FreeBSD.org/man-jp/">jpman project</url>
    <url href="ftp://daemon.jp.FreeBSD.org/pub/FreeBSD-jp/man-jp/packages-5.0.0/ja-man-doc-5.0.tbz">package ja-man-doc-5.0.tbz</url>
  </links>

  <body>
    <p>We have released Japanese translation of 5.0-RELEASE online manual
      pages on February 2nd.  Most of entries which did not exist on RELENG_4
      were not yet translated.  I hope we can finish such entries soon.</p>
  </body>
</project>

<project>
  <title>Disk I/O improvements</title>

  <contact>
    <person>
      <name>
	<given>Poul-Henning</given>
	<common>Kamp</common>
      </name>
      <email>phk@FreeBSD.org</email>
    </person>
  </contact>

  <links>
  </links>

  <body>
    <p>We have the first disk device driver (aac) out from under Giant
      now, and in certain scenarios it gives improvements up to 20%.
      The device driver API was pruned to reflect that NO_GEOM
      compatibility is unnecessary, this resulted in approx 1000 
      lines less source code, the majority of which were removed
      from the device drivers.  The new API for cdevsw is a lot simpler
      and hopefully less likely to confuse people.  The ability to
      automatically allocate a device major number has been introduced
      and is already used by a handful of drivers.  Checks introduced
      with this facility has shown that the uniqueness of manually
      allocated major numbers had already broken down.<p>

    </p>Work continues on the statistics collection API and on a unified
      API for manual configuration of GEOM nodes.</p>
  </body>
</project>

<project>
  <title>Support for PAE and >4G ram on x86</title>

  <contact>
    <person>
      <name>
	<given>Jake</given>
	<common>Burkholder</common>
      </name>
      <email>jake@FreeBSD.org</email>
    </person>
  </contact>

  <body>
    <p>Support for PAE is mostly complete, and has been checked into the
      jake_pae branch.  The approach that is being taken to add support for
      PAE is to allow the pmap module to view the page table directory as 4
      pages instead of 1, and to avoid using the 3rd level structure, the page
      directory pointer table, as much as possible.  Due to its small size, 32
      bytes, the PDPT cannot be uniformly recursively mapped, and as such does
      not provide a regular multi level structure like the page tables used by
      the alpha or x86-64 architectures.  What remains to be done for PAE
      support is to develop an API for manipulating page table entries which
      will allow idempotent 64 bit loads and stores to be used where
      necessary.</p>

    <p>Experimental support for >4G ram using PAE has been developed and
      checked into the jake_pae_test branch in Perforce.  This involved adding
      a physical address type separate from virtual addresses, for use by the
      vm system and bus code which needs to use physical addresses directly.
      Initial testing has shown good results with device drivers that can dma
      to 64 bit physical addresses.</p>

    <p>Funding for this project is being provided by DARPA and Network
      Associate Laboratories, and hardware support by
      <a href="http://www.freebsdsystems.com">FreeBSD Systems</a>.</p>
  </body>
</project>

<project>
  <title>FreeBSD Security Officer Team</title>

  <contact>
    <person>
      <name>
	<given>Jacques</given>
	<common>Vidrine</common>
      </name>
      <email>nectar@FreeBSD.org</email>
    </person>
  </contact>

  <links>
      <url href="http://www.FreeBSD.org/security/"/>
  </links>

  <body>
    <p>In the period from September 2002 through February 2003, the
      FreeBSD Security Team email aliases saw 1297 messages, a much
      smaller volume than over the summer (remember the Apache and OpenSSL
      worms? 4.6.1 oops I mean 4.6.2-RELEASE?).</p>

    <p>Also during this period: 95 items were added to the SO
      issue-tracking database; 39 of these involved the FreeBSD base
      system while the rest involved ports.  9 new Security Advisories
      were published, 2 of which covered issues unique to FreeBSD.</p>

      <p>In January, the SO published a new PGP key (ID 0xCA6CDFB2, found
      on the FTP site and in the Handbook).  This aligned the set of those
      who possess the corresponding private key with the membership of the
      security-officer alias published on the FreeBSD Security web site.
      It also worked around an issue with the deprecated PGP key being
      found corrupted on some public key servers.</p>

    <p>In February, Mike Tancsa of Sentex donated two machines to
      the Security Officer.  These have been a great help already in
      testing the security branches, preparing patches, and generating
      updated binaries.  Thank you very much, Mike!</p>
  </body>
</project>

<project>
  <title>FreeBSD GNOME Project</title>

  <contact>
    <person>
      <name>
	<given>Joe</given>
	<common>Marcus</common>
      </name>
      <email>marcus@FreeBSD.org</email>
    </person>

    <person>
      <name>
	<given>Maxim</given>
	<common>Sobolev</common>
      </name>
      <email>sobomax@FreeBSD.org</email>
    </person>

    <person>
      <name>
        <given>Adam</given>
	<common>Weinberger</common>
      </name>
      <email>adamw@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.FreeBSD.org/gnome/">FreeBSD GNOME Project
      Homepage.</url>
  </links>

  <body>
    <p>FreeBSD 4.8-RELEASE will continue in the tradition of 
      5.0-RELEASE, and include GNOME 2 as the default GNOME desktop.
      This means that 4.8 will ship with GNOME 2.2.</p>

    <p>Following on the heels of the recent GNOME 2.2 release, GNOME 2.3
      snapshots are gearing up.  The development schedule is 
      available from <a href="http://www.gnome.org/start/2.3/">
      http://www.gnome.org/start/2.3/</a>.  Ports will be
      made available the same way they were for the 2.1 development
      releases.  Stay tuned to freebsd-gnome@ for more details.</p>

    <p>We are currently in another ports freeze in preparation for 
      4.8-RELEASE.  Following the freeze, a new bsd.gnome.mk will
      be committed that effectively removes the USE_GNOMENG macro.
      This new version will add support for GNOME 2 as well as 
      setup backward compatibility for ports that have not yet
      been converted to the new GNOME infrastructure.  People
      interested in testing this new Mk file, can check out 
      the ``ports'' module following the instructions at 
      <a href="http://www.marcuscom.com:8080/cgi-bin/cvsweb.cgi">
      http://www.marcuscom.com:8080/cgi-bin/cvsweb.cgi</a>.</p>
  </body>
</project>

<project>
  <title>PowerPC Port</title>

  <contact>
    <person>
      <name>
        <given>Peter</given>
        <common>Grehan</common>
      </name>
      <email>grehan@FreeBSD.org</email>
    </person>
  </contact>

  <body>
    <p>Work on PowerPC is progressing steadily. The system can now boot
      multi-user from the net and disk. ATA-DMA is being integrated with
      the ATAng code, and support for older G3 machines is being added.</p>
  </body>
</project>

<project>
  <title>FreeBSD C99 &amp; POSIX Conformance Project</title>

  <contact>
    <person>
      <name>
	<given>Mike</given>
	<common>Barcroft</common>
      </name>
      <email>mike@FreeBSD.org</email>
    </person>

    <person>
      <name>
        <common>FreeBSD-Standards Mailing List</common>
      </name>
      <email>standards@FreeBSD.org</email>
    </person>
  </contact>

  <links>
    <url href="http://www.FreeBSD.org/projects/c99/" />
    <url href="http://people.FreeBSD.org/~schweikh/posix-utilities.html" />
  </links>

  <body>
    <p>January and February were quiet months that saw with them the
      addition of some C99 math functions and macros, which include:
      fpclassify(), isfinite(), isgreater(), isgreaterequal(), isinf(),
      isless(), islessequal(), islessgreater(), isnan(), isnormal(),
      and signbit().  Additional C99 math library support is in the
      works.</p>
  </body>
</project>

<project>
  <title>Buffer Cache lockdown</title>

  <contact>
    <person>
      <name>
	<given>Jeff</given>
	<common>Roberson</common>
      </name>
      <email>jeff@FreeBSD.org</email>
    </person>
  </contact>

  <body>
    <p>Most of the file system buffer cache has been reviewed and protected.
      The vnode interlock was extended to cover some buffer flag fields so 
      that a separate interlock was not required.  The global buffer queue
      data structures were locked and counters were converted to atomic ops.
      The BUF_*LOCK functions grew an interlock argument so that buffers
      could be safely removed from the vnode clean and dirty lists.  The 
      lockmgr lock is now required for all access to buf fields.  This was
      not strictly followed before because splbio provided the needed
      protection.</p>

    <p>There are a few areas of code that need to be protected and cleaned up
      before giant can be pushed down.  Most notably the background write
      code is currently unsafe without giant.  Also, many of the VM bits that
      the buffer cache relies on are not safe.  This work has been done with
      the expectation that the VM and VFS subsystems will be giant free
      soon.</p>
  </body>
</project>

<project>
  <title>ULE Scheduler</title>

  <contact>
    <person>
      <name>
	<given>Jeff</given>
	<common>Roberson</common>
      </name>
      <email>jeff@FreeBSD.org</email>
    </person>
  </contact>

  <body>
    <p>The ULE scheduler has been committed to the 5.0-CURRENT branch.  Early
      adopters and experimenters are welcome to try it and submit bug
      reports.  It has shown noticeable performance improvements over the old
      scheduler under some workloads.  There are currently problems with
      nice fairness but otherwise the interactive performance is very good.
      More work to improve the load balancing algorithm is required as well.
      This should be ready for use by the general FreeBSD user base in the
      next month or so.</p>
  </body>
</project>

<project>
  <title>Read-ahead performance</title>

  <contact>
    <person>
      <name>
	<given>Jeff</given>
	<common>Roberson</common>
      </name>
      <email>jeff@FreeBSD.org</email>
    </person>
  </contact>

  <body>
    <p>Some improvements have been made to the clustered read ahead code.  They
      allow for many more outstanding IO requests when an application does
      sequential access.  This has a larger impact on RAID systems than on
      single disk systems.  The maximum number of file system blocks that we
      will read ahead is tunable via the 'vfs.read_max' sysctl.  This
      optimization has shown a 20% improvement in simple tests.</p>
  </body>
</project>

<project>
  <title>Status Report for Newbus lockdown</title>

  <contact>
    <person>
      <name>
	<given>Warner</given>
	<common>Losh</common>
      </name>
      <email>imp@FreeBSD.org</email>
    </person>
  </contact>

  <body>
    <p>Locking of the non-obj parts of newbus is nearing completion.
      A single lock is used for the device tree.  Minimal changes to
      subr_bus have so far been necessary to make this work, however
      some lock order issues remain.  After this
      work, it will no longer be necessary to hold Giant to call
      device_* routines safely.  kobj work is being done by others and
      will likely require more extensive design work to make SMP
      friendly.</p>
  </body>
</project>

<project>
  <title>TCP congestion control</title>

  <contact>
    <person>
      <name>
        <given>Jeffrey</given>
        <common>Hsu</common>
      </name>
      <email>hsu@FreeBSD.org</email>
    </person>
  </contact>

  <links>
  </links>

  <body>
    <p>The objective of this effort is to improve the performance, stability,
      and correctness of the BSD networking stack by adding support for
      new standards and standards track proposals while maintaining compliance
      with existing specifications.  The upcoming 4.8 and 5.1 releases will
      be the first ones using the new NewReno logic.  Recently, we 
      implemented the Limited Transmit algorithm (RFC 3042) which benefits
      connections with small congestion windows, as happens, for example,
      on many short web connections.  We also recently added support for larger
      sized starting congestion windows as described in RFC 3390.  This helps
      short TCP connections as well as those with large round-trip delays, 
      such as those over satellite links.</p>
  </body>
</project>

<project>
  <title>SMP locking for network stack</title>

  <contact>
    <person>
      <name>
        <given>Jeffrey</given>
        <common>Hsu</common>
      </name>
      <email>hsu@FreeBSD.org</email>
    </person>
  </contact>

  <links>
  </links>

  <body>
    <p>The list of subsystems locked up include IP, UDP, TCP,
      ifaddr reference counting, syncache, the ifnet list, routing
      radix trees, and ARP.  These have already been committed into the tree.
      In addition, SMP locking for raw IP, divert socket processing,
      and Unix domain sockets have also recently been completed and tested.
      Work is currently being done in some of the subsystems required
      to make parallel networking processing SMP-safe.</p>
  </body>
</project>

</report>
