<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>January-March</month>

    <year>2017</year>
  </date>

  <section>
    <title>Introduction</title>

    <p>While a few of these projects indicate they are a
      &quot;plan&nbsp;B&quot; or an &quot;attempt III&quot;, many
      are still hewing to their original plans, and all have
      produced impressive results.  Please enjoy this vibrant
      collection of reports, covering the first quarter of 2017.</p>

    <p>&mdash;Benjamin Kaduk</p>

    <p><hr /></p>

    <p>The deadline for submissions covering the period from April
      to June 2017 is July 7, 2017.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <project cat='doc'>
    <title>The &os; Dutch Documentation Project</title>

    <contact>
      <person>
	<name>
	  <given>Ren√©</given>
	  <common>Ladan</common>
	</name>
	<email>rene@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Remko</given>
	  <common>Lodder</common>
	</name>
	<email>remko@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/docproj/translations.html#dutch">The Dutch Translation Project</url>
    </links>

    <body>
      <p>Work has started on an initial translation of the &os;
	Handbook to the Dutch language via the &quot;po&quot; system.  While we
	have an (outdated) version of the Handbook available via the
	older XML files, we are now trying to get back into shape with
	the PO file.</p>

      <p>Rene started working on two articles already and did some
	translation of strings for the FDP-Primer, while Remko has started
	working on the Handbook.  If you think you can assist with either,
	please send Rene and Remko an email so that
	we can start coordinating work.</p>

      <p>In addition, since we have a translation set already from the
	XML files, it would be interesting to see whether we
	can merge them easily into the PO structure.  If you have ideas
	on that, contact us a.s.a.p.</p>
    </body>

    <sponsor>Snow&nbsp;B.V. (in part)</sponsor>

    <help>
      <task>Identify a way to merge the current XML translations into
	the nl_NL.po files.</task>

      <task>Merge the translations into the .po files.</task>

      <task>Update the remaining open items into the po files.</task>

      <task>Remove the old/outdated translation files from the main
	repo and use the <tt>po</tt> and <tt>book.xml</tt> files to generate the Dutch
	handbook and other files.</task>

      <task>Identify whether we can also translate the <tt>htdocs</tt> pages
	via the PO system.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/s390x Attempt III</title>

    <contact>
      <person>
	<name>
	  <given>Bjoern A.</given>
	  <common>Zeeb</common>
	</name>
	<email>bz@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>A long time ago, in the &os; 5 times, there was an initial
	port of &os; to s390 (32bit) and s390x (64bit)
	which booted past <tt>init</tt> on good days in an emulator.</p>

      <p>As an attempt to revive the s390x/systemz efforts I started
	to get &os; s390x to build with clang/llvm 3.9.
	At this time, it is possible to build world and a GENERIC kernel
	skeleton (not doing anything yet) using external binutils.</p>

      <p>The primary idea of this initial work was to allow for
	incremental addition of the necessary architecture-specific code.
	Having the build framework in place will allow third-party
	developers to simply type <tt>make</tt>, as they are willing
	to contribute to the port without having to know &os; build
	specifics.  After some cleanup and further updates to a more
	recent HEAD I am planning to push the current work to a public
	repo to facilitate collaboration.</p>
    </body>

    <help>
      <task>Write a wiki page with per-architecture specific tasks
	that need to be done, based on the current work and the experience
	from arm64 and riscv.</task>

      <task>Implement both the userspace and kernel per-architecture
	gaps.</task>

      <task>Figure out a way to get access to IBM's zPDT or better
	emulators to ease implementation, testing, and debugging.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>64-bit PowerPC Book-E Support</title>

    <contact>
      <person>
	<name>
	  <given>Justin</given>
	  <common>Hibbits</common>
	</name>
	<email>jhibbits@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The Book-E platform target now supports 64-bit mode
	(&quot;powerpc64&quot;).  It includes a 63-bit address space
	split, but the page table directory list uses holes to expand
	to the full address space, leaving gaps in the address space
	where page mappings are repeated.  This may change in the
	future.</p>

      <p>As with the AIM powerpc64 port, Book-E supports running powerpc
	(32-bit) binaries as well, and has even been tested with a
	32-bit <tt>init</tt> and 64-bit shell.</p>

      <p>Several of the SoC drivers are supported, however, the dTSEC
	ethernet controller is not yet supported.  Work is ongoing to
	support it.</p>

      <p>A QORIQ64 config is included, targeting the P5 and T* series
	SoCs from Freescale.</p>

      <p>Thanks to Juniper Networks for providing patches against an
	older internally maintained &os; version, which enabled this
	porting effort, and for providing historical context for quirks
	of the pmap changes.</p>
    </body>

    <help>
      <task>Port the dTSEC driver to 64-bit.  There are assumptions in the
	reference driver of operating in a 32-bit environment.  It may
	be easier to port the Linux driver instead, which would also
	give ARM support for this ethernet controller.</task>

      <task>Take advantage of pointer alignment to squeeze more bits
	out of the page tables; it should be possible to squeeze at
	least 3 more bits out, one at each level.</task>
    </help>
  </project>

  <project cat="kern">
    <title>pNFS Server Plan B</title>

    <contact>
      <person>
	<name>
	  <given>Rick</given>
	  <common>Macklem</common>
	</name>
	<email>rmacklem@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Parallel NFS (pNFS) is an extension to the NFSv4 protocol that
	allows for file accesses within a single logical mount to be
	performed against multiple file servers, with the potential
	for data access to occur in parallel.  The pNFS
	&quot;layout&quot; in use specifies how the division occurs, with
	metadata operations occurring against the main server, and
	bulk data operations (read/write/setattr/etc.) occurring via
	a layout-specific scheme between the client and data
	servers.</p>

      <p>My first attempt at a pNFS server using GlusterFS was a dud.
	It worked, but performance was so poor that it was not
	usable.  This attempt that I call &quot;Plan B&quot;, only uses &os;,
	with one &os; server handling the metadata operations and multiple
	&os; servers configured to serve data.  An NFSv4.1 client
	that supports the pNFS File Layout will be able to
	read and write to the data servers directly, spreading out the
	RPC load and allowing growth beyond that of what a single
	&os; NFS server could achieve.</p>

      <p>There is no support for the Flex Files Layout or mirroring
	at this time.  I hope to use the Flex Files Layout to add
	mirroring support over the next year or so.  Striping is
	also not supported, but I have no plans for implementing it
	at the moment.</p>

      <p>Plan B is working quite well now and should be available
	for testing by the end of April.  I will announce how to do this on
	the freebsd-fs@FreeBSD.org mailing list when it is available.</p>
    </body>

    <help>
      <task>Testing by others will be needed, once it is available.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>OpenBSM</title>

    <contact>
      <person>
	<name>
	  <given>Christian</given>
	  <common>Brueffer</common>
	</name>
	<email>brueffer@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Robert</given>
	  <common>Watson</common>
	</name>
	<email>rwatson@FreeBSD.org</email>
      </person>

      <person>
	<name>TrustedBSD audit mailing list</name>
	<email>trustedbsd-audit@TrustedBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.openbsm.org">OpenBSM: Open Source Basic Security Module (BSM) Audit Implementation</url>
      <url href="https://github.com/openbsm/openbsm">OpenBSM on GitHub</url>
      <url href="https://www.FreeBSD.org/doc/en_US.ISO8859-1/books/handbook/audit.html">&os; Audit Handbook Chapter</url>
      <url href="https://reviews.FreeBSD.org/D10149">DTrace Audit Provider</url>
      <url href="https://www.cl.cam.ac.uk/research/security/cadets/">DARPA CADETS project</url>
      <url href="https://github.com/openbsm/openbsm/blob/master/TODO">TODO List on GitHub</url>
    </links>

    <body>
      <p>OpenBSM is a BSD-licensed implementation of Sun's Basic Security
	Module (BSM) API and file format.  It is the userspace side of the
	CAPP Audit implementations in &os; and Mac OS X.  Additionally,
	the audit trail processing tools are expected to work on Linux.</p>

      <p>During this quarter, experimental support for UUIDs in BSM trails
	was added to OpenBSM.  A DTrace audit provider using this
	functionality has been developed as part of the DARPA CADETS
	project and is in review (<a
	  href="https://reviews.FreeBSD.org/D10149">https://reviews.FreeBSD.org/D10149</a>).
	In the OpenBSM GitHub repository, support for Coverity static
	analysis was added via TravisCI.  Additionally, the OpenBSM
	1.2-alpha5 release has been merged into the &os; HEAD
	branch.</p>
    </body>

    <help>
      <task>Test the latest release on different versions of &os;, Mac OS X
	and Linux.  Testing on the latest versions of Mac OS X
	would be particularly appreciated.</task>

      <task>Fix problems that have been reported via GitHub and the
	&os; bug tracker.</task>

      <task>Implement the features mentioned in the TODO list on
	GitHub.</task>
    </help>

    <sponsor>DARPA/AFRL (in part)</sponsor>
  </project>

  <project cat='proj'>
    <title>TrustedBSD</title>

    <contact>
      <person>
	<name>
	  <given>Christian</given>
	  <common>Brueffer</common>
	</name>
	<email>brueffer@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Robert</given>
	  <common>Watson</common>
	</name>
	<email>rwatson@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>TrustedBSD announce mailing list</given>
	</name>
	<email>trustedbsd-announce@TrustedBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.trustedbsd.org">TrustedBSD Website</url>
      <url href="https://github.com/trustedbsd">TrustedBSD on GitHub</url>
    </links>

    <body>
      <p>The TrustedBSD Project is an open-source community developing
	advanced security features for the open-source &os; operating
	system.  Started in April 2000, the project developed support
	for extended attributes, access control lists (ACLs), UFS2,
	OpenPAM, security event auditing, OpenBSM, a flexible kernel
	access control framework, mandatory access control, and the
	GEOM storage layer.  The results of this work may be found not
	just in &os;, but also NetBSD, OpenBSD, Linux, and Apple's Mac
	OS X and iOS operating systems.  Today, the project continues
	to maintain and enhance these mature features in &os;.</p>

      <p>During this quarter, the TrustedBSD project transitioned from the
	&os; Perforce server to GitHub.  This was made possible by
	Alexis Sarghel, who owned the user &quot;trustedbsd&quot; on GitHub and
	graciously transferred this account to the TrustedBSD project.
	To date, the repositories hosting the TrustedBSD website and
	the SEBSD repository have been moved.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>MySQL</title>

    <contact>
      <person>
	<name>
	  <given>Mahdi</given>
	  <common>Mokhtari</common>
	</name>
	<email>mmokhi@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Mark</given>
	  <common>Felder</common>
	</name>
	<email>feld@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.mysql.com/why-mysql/presentations/mysql-80-overview/">MySQL80 Overview</url>
      <url href="https://www.mysql.com/why-mysql/presentations/innodb-whats-new-mysql-80/">MySQL80 InnoDB New Features</url>
    </links>

    <body>
      <p>This quarter a new <tt>-dev</tt> version of MySQL landed in
	the Ports Collection, MySQL 8.0.  It introduces many new features,
	though we had to (re)-patch parts of it which were merged by
	MySQL from MySQL5.7.</p>

      <p>We also updated MySQL 5.6 to its latest version and closed many
	PRs related to it, mostly relating to using &os;-provided ports
	for libraries instead of the bundled copies.  And of course
	there were plenty of security updates.</p>

      <p>We can also report that the problem of having to specify
	<tt>${mysql_optfile}</tt>, which some people encountered while
	using MySQL, is now considered to be solved in all MySQL
	versions: 5.6, 5.7, and 8.0.  Now the init script will search
	all default locations, for backwards compatibility with the
	variety of locations used for configuration files, before it
	gives up and reports an error.</p>
    </body>

    <help>
      <task>Test the new version and report problems.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Linuxulator</title>

    <contact>
      <person>
	<name>
	  <given>Dimitry</given>
	  <common>Chagin</common>
	</name>
	<email>dchagin@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napiera≈Ça</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Mahdi</given>
	  <common>Mokhtari</common>
	</name>
	<email>mmokhi@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>In this quarter, we are pleased to announce two (of many)
	works achieved in the Linuxulator.</p>

      <p>We added a new placeholder marker <tt>UNIMPLEMENTED</tt> to
	accompany the previously existing <tt>DUMMY</tt>, for
	distinguishing syscalls that the Linux kernel itself does not
	implement from those that we currently do not implement.  Now
	our <tt>linux_dummy.c</tt> is clearer for newcomers to
	follow, and they will quickly know which areas they can start
	working on.</p>

      <p>Support for two new syscalls, <tt>preadv</tt> and
	<tt>pwritev</tt>, was added to the Linuxulator.</p>
    </body>

    <help>
      <task>We plan to implement the <tt>execveat</tt> syscall for the
	native &os; syscall table and then port/wrap it for use in
	the Linuxulator.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Intel 10G and 40G Network Driver Updates</title>

    <contact>
      <person>
	<name>
	  <given>Jeb</given>
	  <common>Cramer</common>
	</name>
	<email>jeb.j.cramer@intel.com</email>
      </person>

      <person>
	<name>
	  <given>Eric</given>
	  <common>Joyner</common>
	</name>
	<email>eric.joyner@intel.com</email>
      </person>

      <person>
	<name>
	  <given>Krzysztof </given>
	  <common>Galazka</common>
	</name>
	<email>krzysztof.galazka@intel.com</email>
      </person>
    </contact>

    <links>
      <url href="https://reviews.FreeBSD.org/D9851">Commit adding X553 <tt>ix</tt>/<tt>ixv</tt> Support for <tt>iflib</tt></url>
      <url href="https://reviews.FreeBSD.org/D5213">Commit converting <tt>ixgbe</tt> to <tt>iflib</tt></url>
    </links>

    <body>
      <p>This driver update is for the Intel <tt>ix</tt>/<tt>ixv</tt>
	and <tt>ixl</tt>/<tt>ixlv</tt> network drivers, and includes
	support for several new hardware releases.</p>

      <p><tt>ix</tt>/<tt>ixv</tt>:</p>

      <ul>
	<li>Added support for X553 SoC devices based on the Denverton
	  platform</li>
      </ul>

      <p><tt>ixl</tt>/<tt>ixlv</tt>:</p>

      <ul>
	<li>Added support for X722 10G SoC devices based on the
	  Lewisburg chipset</li>

	<li>Added an interface for the upcoming iWarp driver for X722
	  devices</li>

	<li>Added support for XXV710 25G devices</li>
      </ul>
    </body>

    <help>
      <task><tt>ix</tt>/<tt>ixv</tt> <tt>iflib</tt> support is
	currently under review in Phabricator.  It will be refactored to
	include D5213.</task>

      <task>Initial work for <tt>ixl</tt>/<tt>ixlv</tt> <tt>iflib</tt>
	support is in progress.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>&os; on Hyper-V and Azure</title>

    <contact>
      <person>
	<name>
	  <given>Sepherosa</given>
	  <common>Ziehau</common>
	</name>
	<email>sepherosa@gmail.com</email>
      </person>

      <person>
	<name>
	  <given>Hongjiang</given>
	  <common>Zhang</common>
	</name>
	<email>honzhan@microsoft.com</email>
      </person>

      <person>
	<name>
	  <given>Dexuan</given>
	  <common>Cui</common>
	</name>
	<email>decui@microsoft.com</email>
      </person>

      <person>
	<name>
	  <given>Kylie</given>
	  <common>Liang</common>
	</name>
	<email>kyliel@microsoft.com</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/HyperV">&os; Virtual Machines on Microsoft Hyper-V</url>
      <url href="https://technet.microsoft.com/en-us/library/dn531030.aspx">Supported Linux and &os; Virtual Machines for Hyper-V on Windows</url>
    </links>

    <body>
      <p>SR-IOV support for NICs is implemented.  So far, we have only
	tested with the Mellanox ConnectX-3 VF card, which works
	despite some issues (Bug 216493: <a
	  href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=216493">https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=216493</a>).</p>

      <p>Updates for UEFI VMs (i.e.,  Hyper-V Generation 2 VMs):</p>

      <ol>
	<li>After the loader issue (Bug 211746) is fixed, UEFI VMs can
	  now boot with Secure Boot disabled;</li>

	<li>A synthetic keyboard driver has been added.  Currently it
	  is only in HEAD, but MFCs to stable/10 and stable/11 are
	  planned to occur soon;</li>

	<li>A SCSI DVD detection issue (Bug 218248) was fixed.
	  Without the fix, the VM would fail to boot.</li>
      </ol>
    </body>

    <sponsor>Microsoft</sponsor>
  </project>

  <project cat="proj">
    <title>Porting Software to CloudABI: Sandboxed Bitcoin!</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Schouten</common>
	</name>
	<email>ed@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://nuxi.nl/cloudabi/freebsd/">How to Use CloudABI on &os;</url>
      <url href="https://nuxi.nl/blog/2017/02/18/porting-leveldb-to-cloudabi.html">LevelDB for CloudABI</url>
      <url href="https://nuxi.nl/blog/2017/03/15/sandboxed-memcached.html">Memcached for CloudABI</url>
      <url href="https://laanwj.github.io/2017/03/02/porting-bitcoin-core-to-cloudabi.html">Bitcoin for CloudABI</url>
    </links>

    <body>
      <p>CloudABI is a framework that allows you to develop strongly
	sandboxed applications a lot more easily.  It is a programming
	environment that exclusively uses &os;'s Capsicum facilities.  Any
	features incompatible with Capsicum have been removed entirely,
	which means that it is easier to determine how code needs to be
	adjusted to behave correctly while sandboxed.  In essence, you only
	need to patch up the code until it builds.</p>

      <p>Last year we have managed to port a lot of exciting libraries over
	to CloudABI.  Highlights include sandboxing aware versions of
	<a href="http://www.boost.org/">Boost</a> and
	<a href="http://leveldb.org/">LevelDB</a>.  Now that these
	libraries are readily available, we are at the point where we can
	shift our focus towards porting full applications.</p>

      <p>In late February one of the lead developers of
	<a href="https://github.com/bitcoin/bitcoin">the Bitcoin reference
	  implementation</a> got in touch, as he is very interested in
	creating a copy of Bitcoin that is better protected against
	security bugs.  You do not want a security bug in the
	networking/consensus code to allow an attacker to steal coins from
	your local wallet!</p>

      <p>As I think that this is a use case that demonstrates the strength
	of CloudABI well, I've made addressing any issues reported by the
	Bitcoin developers a top priority.  Once the Bitcoin port is
	complete, we want to provide binary packages of it as well.</p>
    </body>

    <sponsor>Nuxi, the Netherlands</sponsor>

    <help>
      <task>Though getting Bitcoin to work is pretty awesome, don't let
	that distract us from porting other pieces of software over as
	well!  Are you the maintainer of a piece of software that could
	benefit from sandboxing?  Be sure to try building it using the
	CloudABI toolchain!</task>

      <task>One of the pieces of software that got ported over to
	CloudABI some time ago is Memcached.  Are you a user of
	Memcached? If so, feel free to give the sandboxed version of
	Memcached for CloudABI a try!</task>

      <task>So far, CloudABI can be used to run software written in C, C++
	and Python.  Would you like to see any other programming language
	work on CloudABI as well?  Be sure to help out!</task>
    </help>
  </project>

  <project cat='team'>
    <title>The &os; Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Ren√©</given>
	  <common>Ladan</common>
	</name>
	<email>portmgr-secretary@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Ports Management Team</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/ports/">About &os; Ports</url>
      <url href="https://www.FreeBSD.org/doc/en_US.ISO8859-1/articles/contributing/ports-contributing.html">Contributing to Ports</url>
      <url href="http://portsmon.FreeBSD.org/index.html">&os; Ports Monitoring</url>
      <url href="https://www.FreeBSD.org/portmgr/index.html">Ports Management Team</url>
      <url href="https://twitter.com/FreeBSD_portmgr/">&os; portmgr on Twitter (@FreeBSD_portmgr)</url>
      <url href="https://www.facebook.com/portmgr">&os; Ports Management Team on Facebook</url>
      <url href="https://plus.google.com/communities/108335846196454338383">&os; Ports Management Team on Google+</url>
    </links>

    <body>
      <p>The number of ports is currently just 500 short of 30,000.  The current
	number of PRs is close to 2,400, of which 620 are unassigned.  The last
	quarter saw 6656 commits from 167 comitters.  Both the number of ports and
	the number of unassigned PRs have increased in the last quarter.</p>

      <p>In the last quarter, we welcomed 7 new committers: Eugene Grosbein
	(eugen), Johannes Dieterich (jmd), Larry Rosenman (ler), Mahdi Mokhtari
	(mmohki), Matthew Rezny (rezny), Tobias Kortkamp (tobik), and Vladimir
	Kondratyev (wulf).  dumbbell@ was already a src committer and got an extension
	for the Ports Tree.  We also welcomed back krion@ and miwi@.  We took 6
	bits in for safe-keeping: itetcu@, leeym@, mva@, olivierd@, pgollucci@,
	and sanpei@.</p>

      <p>There were no changes to the membership of portmgr.</p>

      <p>antoine@ worked on <tt>USES=samba</tt> to prepare for the
	removal of the long-outdated Samba 3.6 ports and replace them
	with modern versions.  The new default versions are:
	FreePascal 3.0.2, Ruby 2.3, and Samba 4.4.  A new variable
	<tt>USE_LOCALE</tt> was created to add the <tt>LANG</tt> and
	<tt>LC_ALL</tt> environment variables to all builds.
	Out-of-tree patches can now be added with the new
	<tt>EXTRA_PATCH_TREE</tt> variable.  The error messages for
	invalid <tt>OPTIONS_SINGLE</tt> options were improved.</p>

      <p>Some of the major port updates last quarter were: pkg 1.10.1, linux
	c6_64, Firefox 52.0.2, Chromium 57.0.2987.110, GCC 4.9.4, Gnome 3.18.0,
	Xorg 1.18.4, Qt 4.8.7 and 5.7.1, and PHP 7.1.</p>

      <p>antoine@ ran 31 exp-runs to test version updates and under-the-hood
	changes.</p>
    </body>

    <help>
      <task>The number of unassigned and open PRs is still growing, so if you
	have some spare time, please close some of those.</task>
    </help>
  </project>

  <project cat="ports">
    <title>Rust</title>

    <contact>
      <person>
	<name>
	  <given>Jean-S√©bastien</given>
	  <common>P√©dron</common>
	</name>
	<email>dumbbell@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Thomas</given>
	  <common>Zander</common>
	</name>
	<email>riggs@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Rust">Wiki Portal</url>
      <url href="https://gist.github.com/dumbbell/b587da50ef014078da9e732a4331ebad">Guide to Bootstraping Rust on &os;</url>
      <url href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=216143">Bug Report to Track Progress on Bootstrapping</url>
    </links>

    <body>
      <p>In the Ports Collection, Rust was updated to 1.16.0 and Cargo
	to 0.17.0, the latest versions at the time of this writing.</p>

      <p><tt>lang/rust-nightly</tt> was also updated to a snapshot from
	February and it is now enabled on <tt>i386</tt>.  It is
	lagging a bit behind upstream, but <a
	href="https://rustup.rs/">Rustup</a> works nicely on &os; if
	you need to try any versions/channels of Rust.</p>

      <p>Work has started to bootstrap Rust on non-<tt>x86</tt> architectures.
	Patches to add &os;/aarch64 support were submitted and accepted
	upstream.  &os;/sparc64 is in progress.  The <tt>lang/rust-nightly</tt>
	port is also being adapted to compile natively on &os;/aarch64.  This
	work is critical, in particular because Firefox will shortly require
	Rust.  If you want to help, please refer to the guide linked above.</p>

      <p>The compiler, <tt>rustc</tt>, is crashing sometimes when there is a
	compilation error.  Therefore, there is a bit of work to do to improve
	stability.</p>

      <p>There is some code duplication between <tt>lang/rust*</tt> and
	<tt>devel/cargo</tt>.  Those Makefiles deserve a bit of cleanup.  It
	might be useful to create a <tt>USES=rust</tt> Makefile helper.</p>
    </body>

    <help>
      <task>Bootstrap Rust on more platforms.</task>

      <task>Investigate compiler crashes.</task>

      <task>Create a <tt>USES=rust</tt> Makefile helper and simplify
	the Rust and Cargo ports.</task>

      <task>Investigate how to speed up <tt>lang/rust*</tt>
	compilation time.</task>
    </help>
  </project>

  <project cat='team'>
    <title>The &os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os;&nbsp;Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.freebsd.org/releases/11.1R/schedule.html">&os;&nbsp;11.1-RELEASE Schedule</url>
      <url href="http://ftp.freebsd.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os; development Snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is responsible for setting
	and publishing release schedules for official project releases
	of &os;, announcing code freezes, and maintaining the
	respective branches, among other things.</p>

      <p>The &os;&nbsp;Release Engineering Team continued producing
	weekly development snapshots for the 12-CURRENT, 11-STABLE,
	and 10-STABLE branches.</p>

      <p>In addition, the &os;&nbsp;11.1-RELEASE schedule was added to
	the Project website.  Please note, however, the schedule on
	the website is still subject to change.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='arch'>
    <title>&os; on Marvell Armada38x</title>

    <contact>
      <person>
	<name>
	  <given>Marcin</given>
	  <common>Wojtas</common>
	</name>
	<email>mw@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Zbigniew</given>
	  <common>Bodek</common>
	</name>
	<email>zbb@semihalf.com</email>
      </person>
    </contact>

    <body>
      <p>Final testing and productionization of support for the
	Marvell Armada38x platform is under way.  The rebase and cleanup
	is going well, with patches functioning on top of HEAD and ready for
	upstreaming.</p>

      <p>Specific tasks completed include:</p>

      <ul>
	<li>Platform benchmarking and low-level optimizations
	  (internal bus, L1/L2 cache prefetch) &mdash; already
	  submitted)</li>
	
	<li>Enable the PL310 L2 cache controller &mdash; currently under
	  review</li>

	<li>NETA tests, optimizations and PHY-handling rework</li>

	<li><tt>e6000sw</tt> PHY handling rework and fixes</li>

	<li>Fix and enable performance counter support</li>

	<li>Fix timers and extract watchdog support to a separate driver</li>

	<li>Crypto driver fixes &mdash; merged</li>

	<li>AHCI controller support &mdash; merged</li>

	<li>Thermal driver &mdash; merged</li>

	<li>Merge additional support for new boards (SolidRun ClearFog
	  and DB-88F6285-AP)</li>
      </ul>
    </body>

    <sponsor>Stormshield</sponsor>

    <sponsor>Semihalf</sponsor>

    <help>
      <task>Submit the remaining fixes and drivers.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>Support for eMMC Flash and Faster SD Card Modes</title>

    <contact>
      <person>
	<name>
	  <given>Marius</given>
	  <common>Strobl</common>
	</name>
	<email>marius@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>In r315430, support for eMMC partitions has been added to
	<tt>mmc(4)</tt> and <tt>mmcsd(4)</tt> in &os; 12.  Besides the
	user data area, i.e., the default partition, eMMC v4.41 and
	later devices can additionally provide up to:</p>

      <ul>
	<li>1 enhanced user data area partition</li>

	<li>2 boot partitions</li>

	<li>1 RPMB (Replay Protected Memory Block) partition</li>

	<li>4 general purpose partitions (optionally with an enhanced
	  or extended attribute)</li>
      </ul>

      <p>Apart from simply subdividing eMMC flash devices or having
	UEFI code in the boot partition, as is done on some Intel NUCs,
	another use case for partition support is the activation of
	pseudo-SLC mode, which manufacturers of eMMC chips typically
	associate with the enhanced user data area and/or the &quot;enhanced&quot;
	attribute of general purpose partitions.</p>

      <p>In order to be able to partition eMMC devices, r315430 also
	added a Linux-compatible <tt>ioctl(2)</tt> interface to <tt>mmcsd(4)</tt>.
	This allows the use of the GNU <tt>mmc-utils</tt> (found in ports
	as <tt>sysutils/mmc-utils</tt>) on &os;.  Besides partitioning
	eMMC devices, the <tt>mmc</tt> tool can also be used to query
	for lifetime estimates and pre-EOL information of eMMC flash, as
	well as to query some basic information from SD cards.</p>

      <p>CAVEAT EMPTOR: Partitioning eMMC devices is a one-time
	operation.</p>

      <p>Additionally, in order to make eMMC flash devices more
	usable, support for DDR (Dual Data Rate) bus speed mode at a
	maximum of 52 MHz (DDR52) has been added to <tt>mmc(4)</tt>
	and <tt>sdhci(4)</tt> in r315598, which will appear in &os; 12.  Compared
	to high speed mode (the previous maximum) at 52 MHz, DDR52
	mode increases the performance of the tested eMMC chips from
	~45 MB/s to ~80 MB/s.</p>

      <p>So far, support for DDR52 mode has been enabled for the eMMC
	controllers found in the Intel Apollo Lake, Bay Trail and Braswell
	chipsets.  Note, however, that the eMMC and SDHCI controllers
	of the Apollo Lake variant occasionally lock up due to a
	silicon bug (which is independent of running in DDR52 mode).
	The only viable workaround for that problem appears to be the
	implementation of support for ADMA2 mode in <tt>sdhci(4)</tt>
	(currently, <tt>sdhci(4)</tt> supports only the encumbered SDMA
	mode or no DMA at all).</p>

      <p>However, r315598 also brought in infrastructure and
	a fair amount of code for using even faster transfer modes with eMMC
	devices and SD cards respectively, i.e., up to HS400ES with eMMC
	and the UHS-I modes up to SDR104 with SD cards.</p>

      <p>The intent is to merge these changes back to &os; 10 and 11.</p>
    </body>

    <help>
      <task>Add support for eMMC HS200, HS400, and HS400ES transfer
	modes.</task>

      <task>Add support for SD card UHS-I transfer modes (SDR12 to
	SDR104).</task>

      <task>Make <tt>mmcsd(4)</tt> more robust and correctly follow
	the relevant specifications for existing features, e.g.,
	calculate and handle erase timeouts, do a <tt>SEND_STATUS</tt>
	when CMD6 is invoked with an R1B response to the extent not
	already fixed as part of r315430, get the remainder of the
	existing code to properly check and handle return codes,
	etc.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>Ceph on &os;</title>

    <contact>
      <person>
	<name>
	  <given>Willem Jan</given>
	  <common>Withagen</common>
	</name>
	<email>wjw@digiware.nl</email>
      </person>
    </contact>

    <links>
      <url href="http://ceph.com">Ceph Main Site</url>
      <url href="https://github.com/ceph/ceph">Main Repository</url>
      <url href="https://github.com/wjwithagen/ceph">My &os; Fork </url>
    </links>

    <body>
      <p>Ceph is a distributed object store and file system designed to provide
	excellent performance, reliability and scalability.</p>

      <ul>
	<li><p>Object Storage</p>

	  <p>Ceph provides seamless access to objects using native
	    language bindings or <tt>radosgw</tt>, a REST interface
	    that is compatible with applications written for S3 and
	    Swift.</p></li>

	<li><p>Block Storage</p>

	  <p>Ceph's RADOS Block Device (RBD) provides access to block
	    device images that are striped and replicated across the
	    entire storage cluster.</p></li>

	<li><p>File System</p>

	  <p>Ceph provides a POSIX-compliant network file system that
	    aims for high performance, large data storage, and maximum
	    compatibility with legacy applications.</p></li>
      </ul>

      <p>I started looking into Ceph because the HAST solution with
	CARP and <tt>ggate</tt> did not really do what I was looking
	for.  But I aim to run a Ceph storage cluster of storage nodes
	that are running ZFS.  User stations would be running
	<tt>bhyve</tt> on RBD disks that are stored in Ceph.</p>

      <p>Compiling for &os; will now build most of the tools
	available in Ceph.</p>

      <p>Notable progress since the last report:</p>

      <ul>
	<li>The most important change is that a port has been
	  submitted: <tt>net/ceph-devel</tt>.  However, it does not
	  yet contain <tt>ceph-fuse</tt>.</li>

	<li>Regular updates to the <tt>ceph-devel</tt> port are
	  expected, with the next one coming in April.</li>

	<li><tt>ceph-fuse</tt> works, allowing one to mount a CephFS
	  filesystem on a &os; system and perform normal operations.</li>

	<li><tt>ceph-disk prepare</tt> and <tt>activate</tt> work for
	  FileStore on ZFS, allowing for easy creation of OSDs.</li>

	<li>RBD is actually buildable and can be used to manage RADOS BLOCK
	  DEVICEs.</li>

	<li>Most of the awkward dependencies on Linux-isms are deleted
	  &mdash; only <tt>/bin/bash</tt> is here to stay.</li>
      </ul>

      <p>To get things running on a &os; system, run <tt>pkg install
	  net/ceph-devel</tt> or clone <a
	  href="https://github.com/wjwithagen/ceph">https://github.com/wjwithagen/ceph</a>
	and build manually by running <tt>./do_freebsd.sh</tt> in the
	checkout root.</p>

      <p>Parts not (yet) included:</p>

      <ul>
	<li>KRBD: Kernel Rados Block Devices are implemented in the
	  Linux kernel, but not yet in the &os; kernel.  It is possible
	  that <tt>ggated</tt> could be used as a template, since it
	  does similar things, just between two disks.  It also has a
	  userspace counterpart, which could ease development.</li>

	<li>BlueStore: &os; and Linux have different AIO APIs, and
	  that incompatibility needs to resolved somehow.  Additionally,
	  there is discussion in &os; about <tt>aio_cancel</tt> not
	  working for all devicetypes.</li>

	<li>CephFS as native filesystem: though <tt>ceph-fuse</tt>
	  works, it can be advantageous to have an in-kernel
	  implementation for heavy workloads.  Cython tries to access
	  an internal field in <tt>struct dirent</tt>, which does not
	  compile.</li>
      </ul>
    </body>

    <help>
      <task>Run integration tests to see if the &os; daemons will work
	with a Linux Ceph platform.</task>

      <task>Compile and test the userspace RBD (Rados Block Device).
	This currently works but testing has been limitted.</task>

      <task>Investigate and see if an in-kernel RBD device could be
	developed akin to <tt>ggate</tt>.</task>

      <task>Investigate the keystore, which can be embedded in the
	kernel on Linux and currently prevents building Cephfs and
	some other parts.  The first question is whether it is really
	required, or only KRBD requires it.</task>

      <task>Scheduler information is not used at the moment, because the
	schedulers work rather differently between Linux and &os;.
	But at a certain point in time, this will need some attention
	(in <tt>src/common/Thread.cc</tt>).</task>

      <task>Improve the &os; init scripts in the Ceph stack, both for
	testing purposes and for running Ceph on production machines.
	Work on <tt>ceph-disk</tt> and <tt>ceph-deploy</tt> to make it
	more &os;- and ZFS-compatible.</task>

      <task>Build a test cluster and start running some of the
	teuthology integration tests on it.  Teuthology wants to build
	its own <tt>libvirt</tt> and that does not quite work with all
	the packages &os; already has in place.  There are many
	details to work out here.</task>

      <task>Design a vitual disk implementation that can be used with
	<tt>bhyve</tt> and attached to an RBD image.</task>
    </help>
  </project>

  <project cat='team'>
    <title>The &os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>
    
    <body>
      <p>Core's primary function is to ensure the long-term viability of
	the &os; project.  A very large part of that is to ensure that the
	interactions between developers remain cordial, and consequently
	that the project appears welcoming to newcomers.</p>

      <p>Normally, most of Core's activities around this are done in
	private &mdash; a quiet word in the right ear, some discrete
	peacemaking, occasional reading of the riot act.  Most of the time,
	this is all that is necessary.</p>

      <p>Unfortunately, this quarter we had an instance where such private
	measures failed to achieve the desired result, and we ended up
	ejecting a developer.  This developer is an extremely talented
	programmer and has made significant contributions to the Ports
	Collection.  Despite this, portmgr found him to be
	sufficiently disruptive and abrasive that in their judgement,
	the project was better off overall to sever his connection to
	itself, and core backed them up in that.  We are sorry that
	events came to this sad conclusion, but we remain convinced
	that this was a necessary step to safeguard the character of
	our community.</p>

      <p>In a more positive light, Core has been working on a proposal
	to recognise notable contributors to the &os; project who are not
	(or perhaps <i>not yet</i>) suitable to be put forward as new
	committers.  In addition to the usual routes of recognising people
	that write numbers of good bug reports or that supply patches or
	that volunteer to maintain ports, this will also allow recognition
	of people who contribute by such things as organising &os; events
	or who promote &os; through social media.  A formal announcement
	of Core's proposal is imminent.</p>

      <p>During January, the core secretary held an exercise to contact
	all source committers who had been inactive for more than 18
	months and persuade them to hand in their commit bits if they
	were not planning to resume working on &os; in the near future.
	This is meant to be a routine function -- the &quot;grim reaper&quot; --
	that aims to keep the list of people with the ability to commit
	pretty much in synchrony with the list of people that are actively
	committing.  The regular process had fallen out of activity
	several years ago, and we needed to clear the decks before
	restarting.  Ultimately, this resulted in some 20
	developers-emeritus handing in their commit bits.</p>

      <p>No new commit bits were awarded during this quarter.</p>

      <p>Core is also taking soundings on producing a 10.4-RELEASE.
	This is not in the current plan, but a number of developers and
	important &os; users would be keen to see it happen, given some of
	the work that has gone into the stable/10 branch since
	10.3-RELEASE.  On the other hand, this would represent an additional
	support burden for the Security Team, including maintaining versions of
	software that have been declared obsolete upstream, in particular
	OpenSSL.  As an even-numbered release, 10.4-RELEASE would have a
	&quot;normal&quot; rather than an &quot;extended&quot; lifetime which means it should
	not result in extending the support lifetime of the stable/10
	branch.</p>

      <p>In other news, Core arranged for the old and largely inactive
	marketing@FreeBSD.org mailing list to be wound up, and for any
	remaining activities to be transferred to the &os; Foundation.</p>

      <p>Core also asked clusteradm to turn off Internet-wide access to
	the <tt>finger</tt> server on freefall.freebsd.org.  Many
	developers have included details such as phone numbers into
	the GECOS field of their &os; password database entries, and
	these would be revealed by the <tt>finger</tt> server &mdash;
	details which are nowadays generally felt inadvisable to
	expose publicly.  <tt>finger</tt> is still available
	internally within freefall.freebsd.org.  Core recommends that
	GECOS data is limited to just your full name, and we have
	updated the standard &quot;new committer&quot; e-mail template
	to reflect that.</p>

      <p>Core is looking for new volunteers to help out with several of
	the teams that manage various aspects of the project.  In
	particular, Postmaster and the Security Team are in need of new blood.
	Recruiting for a new member of the Security Team is well under way, but anyone
	interested in joining any of the teams is encouraged to make
	themselves known either to Core or directly to the teams
	concerned.</p>    
    </body>
  </project>

  <project cat="kern">
    <title>MMC Stack Using the CAM Framework</title>

    <contact>
      <person>
	<name>
	  <given>Ilya</given>
	  <common>Bakulin</common>
	</name>
	<email>kibab@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://bakulin.de/freebsd/mmccam.html">Project Information</url>
      <url href="https://github.com/kibab/FreeBSD/tree/mmccam-collapsed-commits">Source Code</url>
    </links>

    <body>
      <p>The goal of this project is to reimplement the existing
	MMC/SD stack using the CAM framework.  This will permit
	utilizing the well-tested CAM locking model and debugging
	features.  It will also be possible to process interrupts
	generated by the inserted card, which is a prerequisite for
	implementing the SDIO interface.  SDIO support is necessary
	for communicating with the WiFi/BT modules found on many
	development boards, such as the Raspberry Pi 3.</p>

      <p>Another feature that the new stack will have is support for
	sending SD commands from userland applications using
	<tt>cam(3)</tt>.  This will allow for building device drivers in
	userland and make debugging much easier.</p>

      <p>The new stack is able to attach to an SD card and bring it
	to an operational state so that it is possible to read and
	write to the card.</p>

      <p>The stack has been tested to work on the Beaglebone Black and
	Wandboard Quad platforms.</p>

      <p>Currently the code is being prepared for inclusion in the
	&os; source tree.  <tt>cam(3)</tt> is being extended to
	support SDIO-specific functions (reading registers, managing
	interrupts, etc.).</p>
    </body>

    <help>
      <task>Integrate the code into &os; HEAD to facilitate
	testing.</task>

      <task>Begin writing a driver for Broadcom-based WLAN chips (found
	on the Raspberry Pi 3 and Wandboard).</task>

      <task>Begin writing a driver for Marvell-based WLAN chips (found
	on the GlobalScale Dreamplug and some Chromebooks).</task>
    </help>
  </project>

  <project cat='team'>
    <title>The FreeBSD Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSDFoundation.org/">FreeBSD Foundation Website</url>
      <url href="https://www.FreeBSDfoundation.org/wp-content/uploads/2017/03/&os;-Foundation-Q1-2017-Update.pdf">Quarterly Newsletter</url>
      <url href="https://wiki.FreeBSD.org/201702StorageSummit">2017 Storage Summit</url>
    </links>

    <body>
      <p>The FreeBSD Foundation is a 501(c)(3) non-profit organization
	dedicated to supporting and promoting the &os; Project and
	community worldwide.  Funding comes from individual and
	corporate donations and is used to fund and manage software
	development projects, conferences and developer summits, and
	provide travel grants to &os; contributors.  The Foundation
	purchases and supports hardware to improve and maintain &os;
	infrastructure; publishes marketing material to promote,
	educate, and advocate for the &os; Project; facilitates
	collaboration between commercial vendors and &os;
	developers; and finally, represents the &os; Project in
	executing contracts, license agreements, and other legal
	arrangements that require a recognized legal entity.</p>

      <p>Our work is 100% funded by your donations.  We kicked off the
	new year with some large contributions from Intel and NetApp,
	to help us raise over $400,000 last quarter!  We engaged in
	discussions with new and old commercial users to help
	facilitate collaboration, explain how the Project works, and
	to ask for financial contributions to help us keep &os; the
	innovative, secure, and reliable operating system they depend
	on.  Please consider making a donation today!  <a
	  href="https://www.FreeBSDfoundation.org/donate/">https://www.FreeBSDfoundation.org/donate/</a>.</p>

      <p>The Foundation improves the &os; operating system by
	employing our technical staff to maintain and improve critical
	kernel subsystems, add features and functionality, and fix
	problems.  Our contributions also include funding separate project grants
	like the arm64 port, <tt>blacklistd</tt> access control
	daemon, and integration of <tt>VIMAGE</tt> support, to make
	sure &os; remains a viable solution for research, education,
	computing, products and more.</p>

      <p>This quarter's project development highlights include:</p>

      <ul>
	<li>168 commits sponsored by the FreeBSD Foundation in the src
	  tree (base system) development branch, across three staff
	  members and four grant recipients/other developers.</li>

	<li>Multiple funded grants, including the <tt>cfumass</tt> project, now
	  committed to &os;-HEAD, and improvements to the
	  <tt>blacklistd</tt> daemon and &os;/arm64 port.</li>

	<li>Staff contributions including improvements to toolchain
	  and build tool components, run time libraries, arm64, mips64
	  and 32- and 64-bit x86 architectures, release image build
	  tooling, packaged base, and VM subsystem bug fixes.</li>

	<li>Significant progress on the 64-bit inode project, which
	  is nearly ready for commit.</li>
      </ul>

      <p>&os; Advocacy and Education</p>

      <p>A large part of our efforts are dedicated to advocating for
	the Project.  This includes promoting work being done by
	others with &os;; producing advocacy literature to teach
	people about &os; and help make the path to starting to use
	&os; or contribute to the Project easier; and attending and
	getting other &os; contributors to volunteer to run &os;
	events, staff &os; tables, and give &os; presentations.</p>

      <p>Some of the highlights of our advocacy and education work
	over the last quarter:</p>

      <ul>
	<li>Promoted &os; at: FOSDEM, SCALE, AsiaBSDcon, and
	  FOSSASIA</li>

	<li>Promoted BSDCan, SCALE, USENIX LISA, vBSDcon and
	  EuroBSDcon Calls for Participation</li>

	<li>Promoted Google Summer of Code participation on social
	  media and created a flyer for people to post at their
	  universities</li>

	<li>Published a New Faces of &os; Story: Joseph Kong</li>

	<li>Set up a Marketing Partnership with the USENIX Association
	  and SNIA</li>

	<li>Published and Promoted the Jan/Feb 2017 issue of the &os;
	  Journal: https://www.FreeBSDfoundation.org/journal/</li>

	<li>Published monthly Development Projects Updates on our
	  blog</li>

	<li>Secured a &os; table at OSCON and promoted available
	  discounts</li>
      </ul>

      <p>Conferences and Events</p>

      <p>The FreeBSD Foundation sponsors many conferences, events, and
	summits around the globe.  These events can be BSD-related, open
	source, or technology events geared towards underrepresented
	groups.</p>

      <p>We support the &os;-focused events to help provide a venue
	for sharing knowledge, to work together on projects, and to
	facilitate collaboration between developers and commercial
	users; this all helps provide a healthy ecosystem.  We support
	the non-&os; events to promote and raise awareness about &os;,
	to increase the use of &os; in different applications, and to
	recruit more contributors to the Project.</p>

      <p>We also sponsored and/or attended the following events last
	quarter:</p>

      <ul>
	<li>FOSDEM &os; developer summit (sponsor)</li>

	<li>AsiaBSDCon &mdash; Tokyo, Japan (sponsor)</li>

	<li>Organized and ran the &os; Storage Summit in Santa Clara,
	  CA</li>

	<li>Board member Philip Paeps gave a &os; presentation at
	  FOSSASIA</li>

	<li>Attended FOSSASIA, FOSDEM, and SCALE</li>
      </ul>

      <p>Release Engineering</p>

      <p>The Foundation provides a full-time staff member to lead the
	release engineering efforts.  This has provided timely and
	reliable releases over the last few years.  Some highlights
	from last quarter include:</p>

      <ul>
	<li>Continued the production of weekly development snapshots
	  for the 12-CURRENT, 11-STABLE, and 10-STABLE branches.</li>

	<li>Published the initial &os; 11.1-RELEASE schedule to the
	  Project website.</li>
      </ul>

      <p>Legal/&os; IP</p>

      <p>The Foundation owns the &os; trademarks, and it is our
	responsibility to protect them.  We continued to review
	requests and grant permission to use the trademarks.</p>


      <p>Many more details about how we supported &os; last quarter
	can be found in our Q1 newsletter!</p>
    </body>
  </project>
</report>
