<!DOCTYPE HTML PUBLIC "-//FreeBSD//DTD HTML 4.01 Transitional-Based Extension//EN" [
<!ENTITY base CDATA "../..">
<!ENTITY date "$FreeBSD$">
<!ENTITY title "FreeBSD 2.2.2 Errata Notes">
<!ENTITY % navinclude.download "INCLUDE">
]>
<!-- $FreeBSD$ -->

<html>
&header;

<pre>
Last minute errata:
-------------------
<strong>o login as root produces "login_getclass: unknown class 'root'" on system console.</strong>

Fix:  If you have the source distribution installed, simply
      cp /usr/src/etc/login.conf /etc
      otherwise, get it from the FreeBSD FTP site using this URL:
      ftp://ftp.FreeBSD.org/pub/FreeBSD/FreeBSD-current/src/etc/login.conf
      instead.  Simply cd to /etc and then run <a href="http://www.FreeBSD.org/cgi/man.cgi?fetch(1)">fetch(1)</a> with the provided URL.

<strong>
o sysconfig scrambles rc.conf if run again.</strong>

Fix:  Get updated /usr/src from RELENG_2_2 branch and build
      /usr/src/release/sysinstall, copying the new binary to /stand.

      If you do not have enough space for src then you could also
      use the boot/fixit floppy combo from a later 2.2-YYMMDD-RELENG
      release to simply mount your root partition (using the Fixit
      option) and copy /stand/sysinstall from the floppy to /stand on
      your root fs.

<strong>
o Installation floppy does not boot at all - whereas the 2.2.1 floppy
  worked fine.  I get a "panic: double fault" right after it tries to
  change the root device to fd0c.</strong>

Fix:  The problem is that you have 48MB of RAM and something very
      mysterious has happened to FreeBSD twixt 2.2.1 and 2.2.2 which makes
      it fail with just that exact memory size.  Given the popularity of
      16MB simms, it also explains why none of us have seen it since we
      typically have either 16MB, 32MB or 64MB of memory in our systems. :)

      We're working on finding and fixing this problem, but until then
      the following work-around is in effect for 48MB systems:

      1. Boot the 2.2.2 boot floppy and when it comes to the first menu which
         asks you whether or not you want to go into the kernel configuration
         editor, choose the "experts only" CLI mode option.  Now type:

	      iosize npx0 32768
	      visual
	      &lt; and do your visual kernel configuration as normal then exit&gt;

         If you can get through to the installation, go to step 3.

      2. If the above does not work, physically remove all but 32MB of memory
         from your machine and then boot the boot floppy.  Unless your problem
         is totally weird and something we've not seen at all before, you
         should now be able to go on to step 3.

      3. Complete the installation and then boot off your hard disk.  This
         boot should work fine, since you are no longer using the memory
         filesystem that the installation uses and which seems to interact
         badly with these memory size issues to create the failure you saw.

         You will also want to boot with the -c flag at some point and
         say "iosize npx0 0" to get the full use of all your memory back
         since the old value of 32768 will have been saved to disk during
         the initial installation.  If you already plan on building a custom
         kernel, you can skip this step since the value will be reset anyway.
</pre>

<p></p><a href="../index.html">Release Home</a>
&footer;
</body>
</html>
